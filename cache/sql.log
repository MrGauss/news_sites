2019.12.17 21:00:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:02:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:02:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.17 21:00:02:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 646 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 646 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (646) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 646
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------

                    -- У Норвегії знайшли дивне подвійне поховання вікінгів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Норвегії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 646
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------

                    -- У Норвегії знайшли дивне подвійне поховання вікінгів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знайшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 646
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------

                    -- У Норвегії знайшли дивне подвійне поховання вікінгів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('подвійне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 646
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------

                    -- У Норвегії знайшли дивне подвійне поховання вікінгів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поховання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 646
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------

                    -- У Норвегії знайшли дивне подвійне поховання вікінгів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вікінгів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 646
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 618 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 618 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (618) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1025 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1025 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1025) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 830 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 830 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (830) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 738 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 738 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (738) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 800 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 800 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (800) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f88abc3acbf5ba68791a843ba75151ee', '100.43.85.116'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:00:21:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:00:21:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.17 21:00:21:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.17 21:03:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 778 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 778 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (778) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 778
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:02:
--------------------------------

                    -- У Дніпрі показали, де випробовуватимуть космічні апарати (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Дніпрі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 778
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:02:
--------------------------------

                    -- У Дніпрі показали, де випробовуватимуть космічні апарати (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('показали,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 778
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:02:
--------------------------------

                    -- У Дніпрі показали, де випробовуватимуть космічні апарати (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('випробовуватимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 778
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------

                    -- У Дніпрі показали, де випробовуватимуть космічні апарати (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('космічні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 778
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------

                    -- У Дніпрі показали, де випробовуватимуть космічні апарати (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('апарати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 778
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------

                    -- У Дніпрі показали, де випробовуватимуть космічні апарати (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('(фото)')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 778
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 219 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 219 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (219) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 70 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 70 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (70) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 785 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 785 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (785) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 749 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 749 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (749) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 902 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 902 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (902) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'd0f2bbdbdc75b33e961b54b4abff5c08', '100.43.90.164'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:03:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2888 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2888 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2888) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2888
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------

                    -- На Черкащині киянин намагався убити власника бару
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2888
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------

                    -- На Черкащині киянин намагався убити власника бару
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('киянин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2888
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------

                    -- На Черкащині киянин намагався убити власника бару
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('намагався')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2888
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------

                    -- На Черкащині киянин намагався убити власника бару
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('власника')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2888
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1714 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1714 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1714) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1609 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1609 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1609) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1812 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1812 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1812) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2569 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2569 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2569) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 268 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 268 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:03:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (268) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:03:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b477ca1c8d8bce323575942be0e6a21', '5.255.250.167'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:03:53:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 923 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 923 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (923) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 923
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------

                    -- Деякі приставки Sony PlayStation потрапили в книгу рекордів Гіннесса
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('приставки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------

                    -- Деякі приставки Sony PlayStation потрапили в книгу рекордів Гіннесса
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('PlayStation')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------

                    -- Деякі приставки Sony PlayStation потрапили в книгу рекордів Гіннесса
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('потрапили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------

                    -- Деякі приставки Sony PlayStation потрапили в книгу рекордів Гіннесса
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('рекордів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------

                    -- Деякі приставки Sony PlayStation потрапили в книгу рекордів Гіннесса
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Гіннесса')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 799 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 799 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (799) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 776 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 776 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (776) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1064 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1064 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1064) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 701 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 701 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (701) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 836 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 836 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (836) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 770 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 770 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (770) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1107 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1107 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1107) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,719,718,716,715,714,712,708,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,678,677,675,674,673,672,671,670,669,667,666,665,664,663,661,658,657,656,653,647,646,645,644,639,638,637,636,635,632,630,629,627,626,623,620,619,618,617,616,615,614,611,610,609,607,606,605,604,603,602,601,598,597,595,593,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,574,572,571,570,569,567,562,559,558,557,556,555,554,553,551,550,548,546,545,542,537,535,534,533,532,531,529,528,526,525,524,523,522,521,520,519,513,511,510,509,508,507,506,505,504,503,500,497,495,493,489,487,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,460,457,455,452,451,441,440,439,438,437,436,435,434,433,432,431,428,427,425,423,422,421,420,419,418,417,414,411,410,408,407,405,404,400,399,398,396,395,394,393,390,389,388,386,385,379,378,375,374,372,370,369,368,367,366,364,362,361,359,356,355,354,353,348,347,346,345,344,343,342,341,340,339,338,337,336,334,333,332,329,327,326,324,319,318,317,316,314,310,307,304,302,300,299,298,297,296,295,294,293,292,291,290,286,285,283,282,280,274,273,272,271,270,269,268,267,266,265,264,261,257,255,249,248,245,241,240,239,238,237,236,235,234,233,231,230,227,226,225,224,223,222,221,220,219,218,214,213,211,210,207,203,201,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,145,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3522 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3522 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3522) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3522
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:57:
--------------------------------

                    -- Черкаським пенсіонерам підвищать виплати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаським')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3522
                        AND posts_tags.tag_id IN(5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------

                    -- Черкаським пенсіонерам підвищать виплати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пенсіонерам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3522
                        AND posts_tags.tag_id IN(5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------

                    -- Черкаським пенсіонерам підвищать виплати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('підвищать')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3522
                        AND posts_tags.tag_id IN(5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------

                    -- Черкаським пенсіонерам підвищать виплати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('виплати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3522
                        AND posts_tags.tag_id IN(5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4095 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4095 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4095) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 524 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4371 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4057 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4057 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4057) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3878 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3878 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:15:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3878) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:15:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '57f8d243af9d3a50154ffc9f6ce0018d', '5.255.250.110'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 496 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 496 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (496) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 496
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 496
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відбудеться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відбудеться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пробне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пробне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ЗНО-2020')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2703 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2703 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2703) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 797 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 797 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (797) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 458 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ЗНО-2020')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 458 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (458) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 458 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3392 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3392 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3392) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 458 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2655 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (458) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2655 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:19:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2655) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:19:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '7a60fdde64c8787f7051298d1e4335ea', '2a03:2880:31ff:1::face:b00c'::inet, '[Bot] Facebook' );
--------------------------------
2019.12.17 21:19:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9dab26f3dc839766cfa2dee13008d0e4', '2a03:2880:31ff:e::face:b00c'::inet, '[Bot] Facebook' );
--------------------------------
2019.12.17 21:20:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3174 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3174 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3174) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3174
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:02:
--------------------------------

                    -- Уманчанка стала чемпіонкою України з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманчанка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3174
                        AND posts_tags.tag_id IN(5,6,10,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:02:
--------------------------------

                    -- Уманчанка стала чемпіонкою України з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чемпіонкою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3174
                        AND posts_tags.tag_id IN(5,6,10,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:03:
--------------------------------

                    -- Уманчанка стала чемпіонкою України з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3174
                        AND posts_tags.tag_id IN(5,6,10,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3783 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3783 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3783) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 390 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 390 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (390) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 122 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 122 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (122) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3750 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3750 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3750) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:20:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3030 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3030 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3030
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:41:
--------------------------------

                    -- Будинки, де відключатимуть світло 3 грудня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Будинки,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3030
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:41:
--------------------------------

                    -- Будинки, де відключатимуть світло 3 грудня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відключатимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3030
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------

                    -- Будинки, де відключатимуть світло 3 грудня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('світло')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3030
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------

                    -- Будинки, де відключатимуть світло 3 грудня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грудня')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3030
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2985 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2985 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2985) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4326 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4326 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4326) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2561 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2561 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2561) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3010 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3010 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3010) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2550 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2550 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:20:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2550) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:20:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'da3aa0cfe5c57f6194bf8ecd80e81e18', '93.158.166.129'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:33:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2771 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2771 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2771) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:36:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2771
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:36:
--------------------------------

                    -- На Уманщині намагалися врятувати рідкісну перелітну пташку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2771
                        AND posts_tags.tag_id IN(5,6,7,8,10,12,15,19,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:36:
--------------------------------

                    -- На Уманщині намагалися врятувати рідкісну перелітну пташку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('намагалися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2771
                        AND posts_tags.tag_id IN(5,6,7,8,10,12,15,19,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:36:
--------------------------------

                    -- На Уманщині намагалися врятувати рідкісну перелітну пташку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('врятувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2771
                        AND posts_tags.tag_id IN(5,6,7,8,10,12,15,19,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:36:
--------------------------------

                    -- На Уманщині намагалися врятувати рідкісну перелітну пташку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('рідкісну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2771
                        AND posts_tags.tag_id IN(5,6,7,8,10,12,15,19,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------

                    -- На Уманщині намагалися врятувати рідкісну перелітну пташку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перелітну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2771
                        AND posts_tags.tag_id IN(5,6,7,8,10,12,15,19,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------

                    -- На Уманщині намагалися врятувати рідкісну перелітну пташку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пташку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2771
                        AND posts_tags.tag_id IN(5,6,7,8,10,12,15,19,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1651 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1651 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1651) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1445 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1445 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1445) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3864 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3864 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3864) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2755 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2755 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2755) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1793 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1793 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1793) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:33:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 6 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 6 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 110 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4237,4236,4235,4231,4230,4229,4228,4224,4220,4217) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f158168f300d5791c305d8925e9a0fc', '141.8.143.131'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4378,4376) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394,4393) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4401) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4380,4377) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399,4398) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 23 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 23 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 100 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:33:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3767,3760,3751,3746,3745,3744,3743,3739,3736,3732) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:33:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1dc54660daa698a764ee7e8f336e3384', '100.43.90.120'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:34:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3489 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3489 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3489) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:12:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3489
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:12:
--------------------------------

                    -- Танцівники з Черкас перемогли на Міжнародному фестивалі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Танцівники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3489
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:12:
--------------------------------

                    -- Танцівники з Черкас перемогли на Міжнародному фестивалі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3489
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:12:
--------------------------------

                    -- Танцівники з Черкас перемогли на Міжнародному фестивалі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перемогли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3489
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:13:
--------------------------------

                    -- Танцівники з Черкас перемогли на Міжнародному фестивалі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Міжнародному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3489
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:13:
--------------------------------

                    -- Танцівники з Черкас перемогли на Міжнародному фестивалі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фестивалі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3489
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:34:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1991) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:34:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b13d20b6e8a1381c539d809bc3aba9c', '5.255.250.7'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:34:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '581f97f68de837f6b0146d7d25549918', '5.255.250.12'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 226 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 226 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (226) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 226
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------

                    -- Valve, ймовірно, розробляє шолом доповненої реальності для Apple
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Valve,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 226
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------

                    -- Valve, ймовірно, розробляє шолом доповненої реальності для Apple
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ймовірно,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 226
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------

                    -- Valve, ймовірно, розробляє шолом доповненої реальності для Apple
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розробляє')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 226
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------

                    -- Valve, ймовірно, розробляє шолом доповненої реальності для Apple
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('доповненої')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 226
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------

                    -- Valve, ймовірно, розробляє шолом доповненої реальності для Apple
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('реальності')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 226
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 771 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 771 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (771) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 699 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 699 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (699) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 508 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 508 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (508) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 794 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 794 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (794) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 53 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 53 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:36:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (53) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:36:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '48f01c3584fa99821123732c1974f5f8', '141.8.189.66'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:38:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3033 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:38:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3033 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:38:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3033) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3033
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:43:
--------------------------------

                    -- Президент відзначив державними нагородами України двох черкащан
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Президент')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3033
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:43:
--------------------------------

                    -- Президент відзначив державними нагородами України двох черкащан
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відзначив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3033
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:44:
--------------------------------

                    -- Президент відзначив державними нагородами України двох черкащан
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('державними')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3033
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:44:
--------------------------------

                    -- Президент відзначив державними нагородами України двох черкащан
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нагородами')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3033
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:44:
--------------------------------

                    -- Президент відзначив державними нагородами України двох черкащан
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3033
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:44:
--------------------------------

                    -- Президент відзначив державними нагородами України двох черкащан
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3033
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:38:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c78e640eaf95109f4fa7a7765c3e506b', '37.9.87.191'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:49:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 10 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 10 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 190 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3043,3027,3025,3014,3013,2980,2961,2955,2944,2935) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:38:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b477ca1c8d8bce323575942be0e6a21', '5.255.250.167'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:49:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 9 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 9 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 310 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3288,3273,3269,3262,3261,3259,3254,3252,3251,3248) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'da3aa0cfe5c57f6194bf8ecd80e81e18', '93.158.166.129'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2858 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2858 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2858) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2858
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------

                    -- “Нова якість” не відпускає один із черкаських будинків до іншого управителя
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('якість”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2858
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------

                    -- “Нова якість” не відпускає один із черкаських будинків до іншого управителя
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відпускає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2858
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------

                    -- “Нова якість” не відпускає один із черкаських будинків до іншого управителя
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2858
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------

                    -- “Нова якість” не відпускає один із черкаських будинків до іншого управителя
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('будинків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2858
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------

                    -- “Нова якість” не відпускає один із черкаських будинків до іншого управителя
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('іншого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2858
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------

                    -- “Нова якість” не відпускає один із черкаських будинків до іншого управителя
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('управителя')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2858
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1314 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1314 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1314) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1312 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1312 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:49:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1312) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:49:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:50:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3550 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3550 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3550) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:23:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3550
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:23:
--------------------------------

                    -- На Звенигородщині грабіжники побили чоловіка та забрали 100 кілограмів горіхів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Звенигородщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3550
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:23:
--------------------------------

                    -- На Звенигородщині грабіжники побили чоловіка та забрали 100 кілограмів горіхів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грабіжники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3550
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:23:
--------------------------------

                    -- На Звенигородщині грабіжники побили чоловіка та забрали 100 кілограмів горіхів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('побили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3550
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------

                    -- На Звенигородщині грабіжники побили чоловіка та забрали 100 кілограмів горіхів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловіка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3550
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------

                    -- На Звенигородщині грабіжники побили чоловіка та забрали 100 кілограмів горіхів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('забрали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3550
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------

                    -- На Звенигородщині грабіжники побили чоловіка та забрали 100 кілограмів горіхів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кілограмів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3550
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------

                    -- На Звенигородщині грабіжники побили чоловіка та забрали 100 кілограмів горіхів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('горіхів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3550
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1306 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1306 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1306) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1725 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1725 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1725) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3634 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3634 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3634) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1829 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1829 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:50:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1829) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:50:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c64f8e474703506f389ab6821811f1c6', '77.88.5.44'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 88 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 88 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (88) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 88
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------

                    -- Помер Олексій Леонов – перша людина, що побувала у відкритому космосі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Олексій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 88
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------

                    -- Помер Олексій Леонов – перша людина, що побувала у відкритому космосі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Леонов')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 88
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------

                    -- Помер Олексій Леонов – перша людина, що побувала у відкритому космосі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('людина,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 88
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------

                    -- Помер Олексій Леонов – перша людина, що побувала у відкритому космосі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('побувала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 88
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------

                    -- Помер Олексій Леонов – перша людина, що побувала у відкритому космосі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відкритому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 88
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------

                    -- Помер Олексій Леонов – перша людина, що побувала у відкритому космосі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('космосі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 88
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 504 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 504 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (504) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 480 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 480 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (480) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 572 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 572 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (572) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1036 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1036 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1036) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 292 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 292 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (292) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:31:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c1d09fbc47901386c3b6b4df24a0c940', '77.88.47.53'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4131 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4131 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4131) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:40:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4131
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:40:
--------------------------------

                    -- Чорнобильцям Черкащини з облбюджету виділили майже 60 тис грн
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чорнобильцям')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4131
                        AND posts_tags.tag_id IN(4,5,7,10,11,12,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:40:
--------------------------------

                    -- Чорнобильцям Черкащини з облбюджету виділили майже 60 тис грн
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4131
                        AND posts_tags.tag_id IN(4,5,7,10,11,12,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:40:
--------------------------------

                    -- Чорнобильцям Черкащини з облбюджету виділили майже 60 тис грн
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('облбюджету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4131
                        AND posts_tags.tag_id IN(4,5,7,10,11,12,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:40:
--------------------------------

                    -- Чорнобильцям Черкащини з облбюджету виділили майже 60 тис грн
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('виділили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4131
                        AND posts_tags.tag_id IN(4,5,7,10,11,12,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 416 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 416 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (416) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3795 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3795 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3795) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3789 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3789 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3789) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3802 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3802 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3802) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 683 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 683 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:51:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (683) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:51:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '57f8d243af9d3a50154ffc9f6ce0018d', '5.255.250.110'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3488 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3488 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3488) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3488
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------

                    -- У мерії утворять відділ внутрішнього аудиту
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('утворять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3488
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------

                    -- У мерії утворять відділ внутрішнього аудиту
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відділ')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3488
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------

                    -- У мерії утворять відділ внутрішнього аудиту
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('внутрішнього')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3488
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------

                    -- У мерії утворять відділ внутрішнього аудиту
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('аудиту')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3488
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2692 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2692 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2692) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3521 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3521 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3521) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2801 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2801 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2801) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3337 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3337 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3337) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 47 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 47 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:54:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (47) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:54:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 21:55:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3051 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:55:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3051 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:55:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3051) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:55:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3051
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:55:27:
--------------------------------

                    -- На Черкащині випало до 10 сантиметрів снігу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3051
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:55:27:
--------------------------------

                    -- На Черкащині випало до 10 сантиметрів снігу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('випало')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3051
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:55:27:
--------------------------------

                    -- На Черкащині випало до 10 сантиметрів снігу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сантиметрів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3051
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:55:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:55:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:55:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:55:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 710 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:55:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 710 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 21:55:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (710) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 21:55:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9aa1a269534ea11c9fda025da7abb5fc', '141.8.188.141'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:06:36:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:06:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 7 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:06:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 7 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 410 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:06:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3711,3708,3707,3705,3704,3703,3702,3700,3699,3698) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:06:36:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:06:36:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a9e3463685fe521d7a8ae45776b1b159', '37.9.87.213'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:06:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:06:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:06:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:06:38:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.17 22:06:38:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.17 22:07:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 191 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 191 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (191) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 191
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:11:
--------------------------------

                    -- Черкащанка розшукує свого безвісти зниклого батька
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащанка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 191
                        AND posts_tags.tag_id IN(4,5,6,9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------

                    -- Черкащанка розшукує свого безвісти зниклого батька
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розшукує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 191
                        AND posts_tags.tag_id IN(4,5,6,9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------

                    -- Черкащанка розшукує свого безвісти зниклого батька
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('безвісти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 191
                        AND posts_tags.tag_id IN(4,5,6,9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------

                    -- Черкащанка розшукує свого безвісти зниклого батька
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зниклого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 191
                        AND posts_tags.tag_id IN(4,5,6,9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------

                    -- Черкащанка розшукує свого безвісти зниклого батька
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('батька')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 191
                        AND posts_tags.tag_id IN(4,5,6,9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2284 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2284 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2284) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3380 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3380 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3380) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4318 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4318 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4318) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 287 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 287 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (287) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4317 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4317 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:07:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4317) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:07:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '961eff7e1130fab6b68e6ed65a65e3c3', '141.8.188.153'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:07:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ef598c258dab8e422e5a5aca2656dc3e', '100.43.91.130'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:10:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3506 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3506 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3506) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:19:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3506
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:19:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Зіркова')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:19:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('психологиня')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:19:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:20:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Мотиватором')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c64f8e474703506f389ab6821811f1c6', '77.88.5.44'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4167 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4167 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4167) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4167
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------

                    -- За черкаською дамбою масштабна аварія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаською')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4167
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------

                    -- За черкаською дамбою масштабна аварія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дамбою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4167
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------

                    -- За черкаською дамбою масштабна аварія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('масштабна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4167
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------

                    -- За черкаською дамбою масштабна аварія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('аварія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4167
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2412 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2412 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2412) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2540 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2540 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2540) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 292 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 292 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:10:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (292) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:10:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '65d9cf2f8a7a570ed6bc872141461e64', '66.249.65.171'::inet, 'Chrome' );
--------------------------------
2019.12.17 22:11:39:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:11:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:11:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:11:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (96,95,94,93,92,91,90,89,88,87) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 3 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 3 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 230 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3317,3306,3303,3299,3297,3295,3292,3290,3286,3285) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'da3aa0cfe5c57f6194bf8ecd80e81e18', '93.158.166.129'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:23:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 6 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 6 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 400 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3746,3745,3743,3734,3732,3729,3727,3724,3722,3720) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:23:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1498 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1498 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1498) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1498
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:51:
--------------------------------

                    -- На новорічні свята українці матимуть чотири вихідні поспіль
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('новорічні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1498
                        AND posts_tags.tag_id IN(5,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:51:
--------------------------------

                    -- На новорічні свята українці матимуть чотири вихідні поспіль
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('українці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1498
                        AND posts_tags.tag_id IN(5,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:51:
--------------------------------

                    -- На новорічні свята українці матимуть чотири вихідні поспіль
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('матимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1498
                        AND posts_tags.tag_id IN(5,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:51:
--------------------------------

                    -- На новорічні свята українці матимуть чотири вихідні поспіль
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чотири')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1498
                        AND posts_tags.tag_id IN(5,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:51:
--------------------------------

                    -- На новорічні свята українці матимуть чотири вихідні поспіль
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вихідні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1498
                        AND posts_tags.tag_id IN(5,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:52:
--------------------------------

                    -- На новорічні свята українці матимуть чотири вихідні поспіль
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поспіль')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1498
                        AND posts_tags.tag_id IN(5,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3309 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3309 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3309) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2769 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2769 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2769) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 680 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 680 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (680) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1116 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1116 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1116) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1695 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1695 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1695) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:23:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '67b87fa07e8233d256fe6e78941cfb09', '77.88.5.16'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:24:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4114 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:24:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4114 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:24:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4114) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4114
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------

                    -- У Черкасах невідомі молодики знову вимагають кошти у підприємців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4114
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------

                    -- У Черкасах невідомі молодики знову вимагають кошти у підприємців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('невідомі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4114
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------

                    -- У Черкасах невідомі молодики знову вимагають кошти у підприємців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('молодики')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4114
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------

                    -- У Черкасах невідомі молодики знову вимагають кошти у підприємців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вимагають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4114
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------

                    -- У Черкасах невідомі молодики знову вимагають кошти у підприємців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('підприємців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4114
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:24:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:24:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c64f8e474703506f389ab6821811f1c6', '77.88.5.44'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:24:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 23 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:24:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 23 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 40 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:24:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4154,4153,4151,4144,4136,4132,4131,4130,4126,4125) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:24:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ebd2cf2ccabe546997847d08a1f1dfc6', '5.255.250.25'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:26:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3491 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3491 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3491) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3491
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:38:
--------------------------------

                    -- Президент нагородив черкаську волонтерку Орденом княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Президент')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3491
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------

                    -- Президент нагородив черкаську волонтерку Орденом княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нагородив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3491
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------

                    -- Президент нагородив черкаську волонтерку Орденом княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаську')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3491
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------

                    -- Президент нагородив черкаську волонтерку Орденом княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('волонтерку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3491
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------

                    -- Президент нагородив черкаську волонтерку Орденом княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Орденом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3491
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------

                    -- Президент нагородив черкаську волонтерку Орденом княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('княгині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3491
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4095 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4095 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4095) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 524 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4371 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4057 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4057 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4057) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3878 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3878 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:26:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3878) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:26:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2816 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2816 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2816) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2816
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------

                    -- Зловмисника, який хотів убити власника бару, взяли під варту
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Зловмисника,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2816
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------

                    -- Зловмисника, який хотів убити власника бару, взяли під варту
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('власника')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2816
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1436 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1436 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1436) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 886 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 886 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (886) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2732 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2732 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2732) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 268 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 268 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (268) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2918 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2918 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:28:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2918) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:28:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 971 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 971 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (971) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 971
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------

                    -- Бездротові навушники стали найпопулярнішим ґаджетом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Бездротові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 971
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------

                    -- Бездротові навушники стали найпопулярнішим ґаджетом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('навушники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 971
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------

                    -- Бездротові навушники стали найпопулярнішим ґаджетом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найпопулярнішим')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 971
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------

                    -- Бездротові навушники стали найпопулярнішим ґаджетом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ґаджетом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 971
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1121 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1121 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1121) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1009 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1009 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 239 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 239 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1043 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1043 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1043) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 993 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 993 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (993) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.17 22:33:44:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,719,718,716,715,714,712,708,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,678,677,675,674,673,672,671,670,669,667,666,665,664,663,661,658,657,656,653,647,646,645,644,639,638,637,636,635,632,630,629,627,626,623,620,619,618,617,616,615,614,611,610,609,607,606,605,604,603,602,601,598,597,595,593,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,574,572,571,570,569,567,562,559,558,557,556,555,554,553,551,550,548,546,545,542,537,535,534,533,532,531,529,528,526,525,524,523,522,521,520,519,513,511,510,509,508,507,506,505,504,503,500,497,495,493,489,487,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,460,457,455,452,451,441,440,439,438,437,436,435,434,433,432,431,428,427,425,423,422,421,420,419,418,417,414,411,410,408,407,405,404,400,399,398,396,395,394,393,390,389,388,386,385,379,378,375,374,372,370,369,368,367,366,364,362,361,359,356,355,354,353,348,347,346,345,344,343,342,341,340,339,338,337,336,334,333,332,329,327,326,324,319,318,317,316,314,310,307,304,302,300,299,298,297,296,295,294,293,292,291,290,286,285,283,282,280,274,273,272,271,270,269,268,267,266,265,264,261,257,255,249,248,245,241,240,239,238,237,236,235,234,233,231,230,227,226,225,224,223,222,221,220,219,218,214,213,211,210,207,203,201,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,145,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:33:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:33:45:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.17 22:33:45:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.17 22:39:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1427 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1427 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1427) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1427
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------

                    -- У ЧНУ розпочалася благодійна акція «Допоможи нашим військовим!»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розпочалася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1427
                        AND posts_tags.tag_id IN(5,7,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------

                    -- У ЧНУ розпочалася благодійна акція «Допоможи нашим військовим!»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('благодійна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1427
                        AND posts_tags.tag_id IN(5,7,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------

                    -- У ЧНУ розпочалася благодійна акція «Допоможи нашим військовим!»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«Допоможи')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1427
                        AND posts_tags.tag_id IN(5,7,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------

                    -- У ЧНУ розпочалася благодійна акція «Допоможи нашим військовим!»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('військовим!»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1427
                        AND posts_tags.tag_id IN(5,7,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3501 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3501 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3501) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1593 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1593 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1593) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 103 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 103 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (103) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2788 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2788 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2788) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1331 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1331 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1331) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:39:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '030142e38346ca0876d5623813632141', '77.88.47.83'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 4 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 4 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 110 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4240,4236,4235,4231,4230,4229,4228,4224,4221,4220) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b477ca1c8d8bce323575942be0e6a21', '5.255.250.167'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4378,4376) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394,4393) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4401) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4380,4377) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399,4398) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3507 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3507 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3507) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3507
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:38:
--------------------------------

                    -- На Уманщині працівниця банку привласнювала гроші вкладників
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3507
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------

                    -- На Уманщині працівниця банку привласнювала гроші вкладників
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('працівниця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3507
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------

                    -- На Уманщині працівниця банку привласнювала гроші вкладників
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('привласнювала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3507
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------

                    -- На Уманщині працівниця банку привласнювала гроші вкладників
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вкладників')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3507
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3781 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3781 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3781) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3864 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3864 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3864) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2755 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2755 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2755) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1445 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1445 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1445) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3597 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3597 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3597) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3149 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3149 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3149) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3149
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------

                    -- Черкаси засніжило
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаси')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3149
                        AND posts_tags.tag_id IN(4,5,6,7,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------

                    -- Черкаси засніжило
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('засніжило')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3149
                        AND posts_tags.tag_id IN(4,5,6,7,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1991) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:39:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:39:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b30063160b5b5fcde0234cb6514e529', '100.43.90.126'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1571 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1571 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1571) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1571
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------

                    -- У черкащан просять допомоги діткам із кризового центру
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1571
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------

                    -- У черкащан просять допомоги діткам із кризового центру
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('просять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1571
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------

                    -- У черкащан просять допомоги діткам із кризового центру
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('допомоги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1571
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------

                    -- У черкащан просять допомоги діткам із кризового центру
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('діткам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1571
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------

                    -- У черкащан просять допомоги діткам із кризового центру
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кризового')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1571
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------

                    -- У черкащан просять допомоги діткам із кризового центру
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('центру')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1571
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2101 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2101 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2101) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2630 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2630 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2630) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 371 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 373 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 373 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (373) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c278de52da42d2dd6d495bc7c1d6ecde', '100.43.90.165'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:55:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 12 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 12 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 330 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (756,751,746,737,736,729,725,688,676,664) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '00415f62b1fad454f7ecae051f4af7ad', '5.255.250.141'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:55:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 7 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 7 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4383,4382,4379,4374,4373,4372,4370,4369,4368,4367) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:55:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1334 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1334 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1334) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:50:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1334
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:50:
--------------------------------

                    -- У Києві з’явилася вулиця, названа на честь загиблого АТОвця з Черкащини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('з’явилася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1334
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:50:
--------------------------------

                    -- У Києві з’явилася вулиця, названа на честь загиблого АТОвця з Черкащини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вулиця,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1334
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:50:
--------------------------------

                    -- У Києві з’явилася вулиця, названа на честь загиблого АТОвця з Черкащини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('названа')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1334
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------

                    -- У Києві з’явилася вулиця, названа на честь загиблого АТОвця з Черкащини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('загиблого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1334
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------

                    -- У Києві з’явилася вулиця, названа на честь загиблого АТОвця з Черкащини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('АТОвця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1334
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------

                    -- У Києві з’явилася вулиця, названа на честь загиблого АТОвця з Черкащини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1334
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3349 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3349 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3349) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1008 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1008 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1008) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2453 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2453 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2453) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2675 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2675 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2675) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2525 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2525 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:55:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2525) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:55:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:55:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'fcfdda7ada2968d29d9ba2c78838c866', '37.9.87.181'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 22:56:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2577 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2577 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2577) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2577
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------

                    -- Тренінг “Команда високих досягнень” для черкаських енергетиків завершено
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Тренінг')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2577
                        AND posts_tags.tag_id IN(7,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------

                    -- Тренінг “Команда високих досягнень” для черкаських енергетиків завершено
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Команда')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2577
                        AND posts_tags.tag_id IN(7,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------

                    -- Тренінг “Команда високих досягнень” для черкаських енергетиків завершено
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('високих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2577
                        AND posts_tags.tag_id IN(7,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------

                    -- Тренінг “Команда високих досягнень” для черкаських енергетиків завершено
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('досягнень”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2577
                        AND posts_tags.tag_id IN(7,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------

                    -- Тренінг “Команда високих досягнень” для черкаських енергетиків завершено
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2577
                        AND posts_tags.tag_id IN(7,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------

                    -- Тренінг “Команда високих досягнень” для черкаських енергетиків завершено
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('енергетиків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2577
                        AND posts_tags.tag_id IN(7,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------

                    -- Тренінг “Команда високих досягнень” для черкаських енергетиків завершено
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('завершено')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2577
                        AND posts_tags.tag_id IN(7,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3912 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3912 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3912) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2156 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2156 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2156) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1068 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1068 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1068) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 791 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 791 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (791) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 235 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 235 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 22:56:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (235) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 22:56:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:10:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3411 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3411 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3411) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:28:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:28:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3411
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:28:
--------------------------------

                    -- Спецпризначенці – найспортивніші серед черкаських правоохоронців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Спецпризначенці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3411
                        AND posts_tags.tag_id IN(5,7,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:29:
--------------------------------

                    -- Спецпризначенці – найспортивніші серед черкаських правоохоронців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найспортивніші')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3411
                        AND posts_tags.tag_id IN(5,7,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:29:
--------------------------------

                    -- Спецпризначенці – найспортивніші серед черкаських правоохоронців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3411
                        AND posts_tags.tag_id IN(5,7,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:29:
--------------------------------

                    -- Спецпризначенці – найспортивніші серед черкаських правоохоронців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('правоохоронців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3411
                        AND posts_tags.tag_id IN(5,7,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 281 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'da3aa0cfe5c57f6194bf8ecd80e81e18', '93.158.166.129'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:10:29:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:31:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.17 23:10:31:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.17 23:10:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:10:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3429
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:52:
--------------------------------

                    -- Черкаський телеоператор потребує допомоги в боротьбі з недугом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3429
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:53:
--------------------------------

                    -- Черкаський телеоператор потребує допомоги в боротьбі з недугом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('телеоператор')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3429
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:53:
--------------------------------

                    -- Черкаський телеоператор потребує допомоги в боротьбі з недугом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('потребує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3429
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:53:
--------------------------------

                    -- Черкаський телеоператор потребує допомоги в боротьбі з недугом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('допомоги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3429
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:53:
--------------------------------

                    -- Черкаський телеоператор потребує допомоги в боротьбі з недугом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('боротьбі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3429
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:53:
--------------------------------

                    -- Черкаський телеоператор потребує допомоги в боротьбі з недугом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('недугом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3429
                        AND posts_tags.tag_id IN(4,5,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:10:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '437d4ced1a72a53b31fab17a953a4843', '93.158.161.7'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:11:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4228 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4228 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4228) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:50:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4228
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:50:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Гарячий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:50:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“таксі”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:50:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('санях:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('боролися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зимовою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('негодою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3936 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3936 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3936) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2382 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2382 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2382) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 33 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 33 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (33) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4224 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4224 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4224) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2341 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2341 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:11:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2341) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:11:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ebd2cf2ccabe546997847d08a1f1dfc6', '5.255.250.25'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:16:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2954 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2954 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2954) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2954
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------

                    -- Сніг і потепління – що на цьому тижні обіцяють черкащанам синопткии
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('потепління')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2954
                        AND posts_tags.tag_id IN(4,5,7,8,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------

                    -- Сніг і потепління – що на цьому тижні обіцяють черкащанам синопткии
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('обіцяють')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2954
                        AND posts_tags.tag_id IN(4,5,7,8,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------

                    -- Сніг і потепління – що на цьому тижні обіцяють черкащанам синопткии
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2954
                        AND posts_tags.tag_id IN(4,5,7,8,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------

                    -- Сніг і потепління – що на цьому тижні обіцяють черкащанам синопткии
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('синопткии')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2954
                        AND posts_tags.tag_id IN(4,5,7,8,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1143 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1143 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1143) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1250 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1250 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1250) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3013 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3013 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3013) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4275 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4275 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4275) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3405 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3405 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:16:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3405) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:16:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:26:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1636 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:26:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1636 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:26:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1636) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:37:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1636
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:37:
--------------------------------

                    -- Черкаські студенти зібрали 5 тисяч гривень на допомогу безпритульним тваринам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1636
                        AND posts_tags.tag_id IN(5,7,11,13,15,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:38:
--------------------------------

                    -- Черкаські студенти зібрали 5 тисяч гривень на допомогу безпритульним тваринам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('студенти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1636
                        AND posts_tags.tag_id IN(5,7,11,13,15,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:38:
--------------------------------

                    -- Черкаські студенти зібрали 5 тисяч гривень на допомогу безпритульним тваринам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зібрали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1636
                        AND posts_tags.tag_id IN(5,7,11,13,15,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:38:
--------------------------------

                    -- Черкаські студенти зібрали 5 тисяч гривень на допомогу безпритульним тваринам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гривень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1636
                        AND posts_tags.tag_id IN(5,7,11,13,15,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:38:
--------------------------------

                    -- Черкаські студенти зібрали 5 тисяч гривень на допомогу безпритульним тваринам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('допомогу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1636
                        AND posts_tags.tag_id IN(5,7,11,13,15,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:38:
--------------------------------

                    -- Черкаські студенти зібрали 5 тисяч гривень на допомогу безпритульним тваринам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('безпритульним')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1636
                        AND posts_tags.tag_id IN(5,7,11,13,15,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:39:
--------------------------------

                    -- Черкаські студенти зібрали 5 тисяч гривень на допомогу безпритульним тваринам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тваринам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1636
                        AND posts_tags.tag_id IN(5,7,11,13,15,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:26:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '437d4ced1a72a53b31fab17a953a4843', '93.158.161.7'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:27:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 76 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 76 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (76) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:04:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 76
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:04:
--------------------------------

                    -- В Одесі презентували можливості міжпланетних технологій (відео)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('презентували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 76
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:04:
--------------------------------

                    -- В Одесі презентували можливості міжпланетних технологій (відео)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('можливості')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 76
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------

                    -- В Одесі презентували можливості міжпланетних технологій (відео)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('міжпланетних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 76
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------

                    -- В Одесі презентували можливості міжпланетних технологій (відео)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('технологій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 76
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------

                    -- В Одесі презентували можливості міжпланетних технологій (відео)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('(відео)')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 76
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 646 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 646 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (646) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 145 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 145 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (145) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 162 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 162 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (162) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 478 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 478 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (478) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 990 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 990 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (990) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:27:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '31e5052d8386f7afe4c8c2ec3d2f157c', '5.255.250.13'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:27:05:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.17 23:30:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4207 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4207 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4207) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:25:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4207
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:25:
--------------------------------

                    -- 16 громад на Черкащині підлягають переформатуванню, – чиновник
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('громад')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4207
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------

                    -- 16 громад на Черкащині підлягають переформатуванню, – чиновник
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4207
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------

                    -- 16 громад на Черкащині підлягають переформатуванню, – чиновник
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('підлягають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4207
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------

                    -- 16 громад на Черкащині підлягають переформатуванню, – чиновник
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('переформатуванню,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4207
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------

                    -- 16 громад на Черкащині підлягають переформатуванню, – чиновник
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чиновник')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4207
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3499 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3499 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3499) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3564 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3564 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3564) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3537 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3537 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3537) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2570 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2570 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2570) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2555 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2555 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:30:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2555) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:30:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8763fe86999101bbc88f8d47c0a8a9c0', '66.249.65.175'::inet, 'Chrome' );
--------------------------------
2019.12.17 23:45:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1416 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1416 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1416) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:27:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1416
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:27:
--------------------------------

                    -- Зірковий черкащанин розсекретив назву концертної програми 2020 року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Зірковий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1416
                        AND posts_tags.tag_id IN(3,5,8,10,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:27:
--------------------------------

                    -- Зірковий черкащанин розсекретив назву концертної програми 2020 року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1416
                        AND posts_tags.tag_id IN(3,5,8,10,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:27:
--------------------------------

                    -- Зірковий черкащанин розсекретив назву концертної програми 2020 року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розсекретив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1416
                        AND posts_tags.tag_id IN(3,5,8,10,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:27:
--------------------------------

                    -- Зірковий черкащанин розсекретив назву концертної програми 2020 року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('концертної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1416
                        AND posts_tags.tag_id IN(3,5,8,10,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:28:
--------------------------------

                    -- Зірковий черкащанин розсекретив назву концертної програми 2020 року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('програми')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1416
                        AND posts_tags.tag_id IN(3,5,8,10,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2864 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2864 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2864) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2248 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2248 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2248) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 793 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 793 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (793) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 636 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 636 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (636) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:28:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:45:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 587 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 587 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (587) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 587
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:39:
--------------------------------

                    -- У Черкасах зникнуть ще кілька «одіозних» нелегальних кіосків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 587
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:39:
--------------------------------

                    -- У Черкасах зникнуть ще кілька «одіозних» нелегальних кіосків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зникнуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 587
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:39:
--------------------------------

                    -- У Черкасах зникнуть ще кілька «одіозних» нелегальних кіосків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кілька')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 587
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:39:
--------------------------------

                    -- У Черкасах зникнуть ще кілька «одіозних» нелегальних кіосків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«одіозних»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 587
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:39:
--------------------------------

                    -- У Черкасах зникнуть ще кілька «одіозних» нелегальних кіосків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нелегальних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 587
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:40:
--------------------------------

                    -- У Черкасах зникнуть ще кілька «одіозних» нелегальних кіосків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кіосків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 587
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1991) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:45:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:45:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '041b71d0e5cc69ada07c185bb281bac3', '5.255.250.62'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:46:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1539 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1539 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1539) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:13:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1539
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:13:
--------------------------------

                    -- Новопризначеному очільнику управління інспектування міста пошкодили авто
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Новопризначеному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1539
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:13:
--------------------------------

                    -- Новопризначеному очільнику управління інспектування міста пошкодили авто
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('очільнику')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1539
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:13:
--------------------------------

                    -- Новопризначеному очільнику управління інспектування міста пошкодили авто
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('управління')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1539
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------

                    -- Новопризначеному очільнику управління інспектування міста пошкодили авто
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('інспектування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1539
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------

                    -- Новопризначеному очільнику управління інспектування міста пошкодили авто
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пошкодили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1539
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 415 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 415 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (415) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 421 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 421 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (421) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 551 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 551 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (551) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1361 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1361 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1361) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 892 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 892 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:46:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (892) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:46:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0af7b5ea9363f487bd6ccf9baf660e15', '100.43.81.116'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.17 23:52:16:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1138,1137,1136,1135,1134,1133,1132,1131,1130,1129) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:17:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1a0d36373ed7a1d578ee56dab756da62', '66.249.65.146'::inet, 'Chrome' );
--------------------------------
2019.12.17 23:52:17:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,719,718,716,715,714,712,708,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,678,677,675,674,673,672,671,670,669,667,666,665,664,663,661,658,657,656,653,647,646,645,644,639,638,637,636,635,632,630,629,627,626,623,620,619,618,617,616,615,614,611,610,609,607,606,605,604,603,602,601,598,597,595,593,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,574,572,571,570,569,567,562,559,558,557,556,555,554,553,551,550,548,546,545,542,537,535,534,533,532,531,529,528,526,525,524,523,522,521,520,519,513,511,510,509,508,507,506,505,504,503,500,497,495,493,489,487,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,460,457,455,452,451,441,440,439,438,437,436,435,434,433,432,431,428,427,425,423,422,421,420,419,418,417,414,411,410,408,407,405,404,400,399,398,396,395,394,393,390,389,388,386,385,379,378,375,374,372,370,369,368,367,366,364,362,361,359,356,355,354,353,348,347,346,345,344,343,342,341,340,339,338,337,336,334,333,332,329,327,326,324,319,318,317,316,314,310,307,304,302,300,299,298,297,296,295,294,293,292,291,290,286,285,283,282,280,274,273,272,271,270,269,268,267,266,265,264,261,257,255,249,248,245,241,240,239,238,237,236,235,234,233,231,230,227,226,225,224,223,222,221,220,219,218,214,213,211,210,207,203,201,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,145,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 25,26,27,28,29,30,31,32,33,34,35 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 25,26,27,28,29,30,31,32,33,34,35 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (96,94) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1137) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 3;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1113,1112,1110) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1094) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 4;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1094,1076,1068,1058) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6,7 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6,7 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1137,1135,1134,1133,1132,1131,1130,1125,1124,1115) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:52:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:52:19:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 970 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 970 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (970) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 970
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------

                    -- Google Maps отримав нові функції для iOS та Android
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Google')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 970
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------

                    -- Google Maps отримав нові функції для iOS та Android
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('отримав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 970
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------

                    -- Google Maps отримав нові функції для iOS та Android
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('функції')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 970
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------

                    -- Google Maps отримав нові функції для iOS та Android
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Android')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 970
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 170 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 170 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (170) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1056 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1056 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1056) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 737 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 737 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (737) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 776 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 776 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (776) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1095 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1095 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:54:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1095) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:54:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.17 23:56:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1138 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1138 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1138) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:50:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1138
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:50:
--------------------------------

                    -- Представлено список 10-ти найкращих ґаджетів десятиліття від журналу Time
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Представлено')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1138
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:50:
--------------------------------

                    -- Представлено список 10-ти найкращих ґаджетів десятиліття від журналу Time
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('список')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1138
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:50:
--------------------------------

                    -- Представлено список 10-ти найкращих ґаджетів десятиліття від журналу Time
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найкращих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1138
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------

                    -- Представлено список 10-ти найкращих ґаджетів десятиліття від журналу Time
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ґаджетів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1138
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------

                    -- Представлено список 10-ти найкращих ґаджетів десятиліття від журналу Time
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('десятиліття')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1138
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------

                    -- Представлено список 10-ти найкращих ґаджетів десятиліття від журналу Time
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('журналу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1138
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 836 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 836 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (836) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 814 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 814 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (814) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 873 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 873 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (873) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1021 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1021 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1021) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 974 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 974 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.17 23:56:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (974) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.17 23:56:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 669 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 669 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (669) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 669
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Невтішні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('висновки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вчених:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('алкоголь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знищує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('погані')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('спогади,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тільки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------

                    -- Невтішні висновки вчених: алкоголь не знищує погані спогади, а тільки посилює їх
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('посилює')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 669
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1036 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1036 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1036) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 913 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 913 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (913) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 174 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 174 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (174) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 636 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 636 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (636) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 223 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 223 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (223) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'd0f2bbdbdc75b33e961b54b4abff5c08', '100.43.90.164'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 00:02:39:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.18 00:02:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1344 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1344 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:02:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1344) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1344
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:51:
--------------------------------

                    -- У Черкасах автівка зіткнулася з опорою
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1344
                        AND posts_tags.tag_id IN(4,5,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:51:
--------------------------------

                    -- У Черкасах автівка зіткнулася з опорою
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автівка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1344
                        AND posts_tags.tag_id IN(4,5,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:51:
--------------------------------

                    -- У Черкасах автівка зіткнулася з опорою
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зіткнулася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1344
                        AND posts_tags.tag_id IN(4,5,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:51:
--------------------------------

                    -- У Черкасах автівка зіткнулася з опорою
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('опорою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1344
                        AND posts_tags.tag_id IN(4,5,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:02:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9aa1a269534ea11c9fda025da7abb5fc', '141.8.188.141'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 00:02:51:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.18 00:04:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4203 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4203 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4203) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:30:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4203
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('5-річна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Поліна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чубенко')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('повертається')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('додому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('операції')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кількамісячної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('реабілітації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------

                    -- 5-річна Поліна Чубенко повертається додому після операції і кількамісячної реабілітації в Туреччині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Туреччині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4203
                        AND posts_tags.tag_id IN(5,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 969 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 969 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (969) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 856 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 856 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (856) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1583 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1583 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1583) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 362 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 362 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (362) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2573 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2573 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:04:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2573) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:04:31:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 00:08:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2744 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2744 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2744) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2744
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:02:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Економія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:02:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('матеріальне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:02:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('оснащення:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('теплий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('листопад')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('приніс')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сюрпризів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('навчальним')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('закладам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3510 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3510 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3510) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 943 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 943 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (943) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2247 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2247 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2247) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 285 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 285 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (285) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3759 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3759 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:08:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3759) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:08:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ebd2cf2ccabe546997847d08a1f1dfc6', '5.255.250.25'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 87 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 87 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (87) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 87
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------

                    -- Інженер NASA вигадав двигун для космічних подорожей без пального
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Інженер')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 87
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------

                    -- Інженер NASA вигадав двигун для космічних подорожей без пального
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вигадав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 87
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------

                    -- Інженер NASA вигадав двигун для космічних подорожей без пального
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('двигун')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 87
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------

                    -- Інженер NASA вигадав двигун для космічних подорожей без пального
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('космічних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 87
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------

                    -- Інженер NASA вигадав двигун для космічних подорожей без пального
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('подорожей')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 87
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------

                    -- Інженер NASA вигадав двигун для космічних подорожей без пального
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пального')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 87
                        AND posts_tags.tag_id IN(3,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 718 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 718 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (718) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 404 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 404 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (404) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 39 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 39 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (39) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 167 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 167 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (167) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 390 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 390 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:40:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (390) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:40:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '22c0d5084a923fb67d6d33decd929ce4', '77.88.47.13'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 00:41:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4204 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4204 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4204) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:10:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:10:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4204
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:10:
--------------------------------

                    -- Черкащани просять установити камери на пішохідних переходах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4204
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------

                    -- Черкащани просять установити камери на пішохідних переходах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('просять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4204
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------

                    -- Черкащани просять установити камери на пішохідних переходах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('установити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4204
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------

                    -- Черкащани просять установити камери на пішохідних переходах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('камери')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4204
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------

                    -- Черкащани просять установити камери на пішохідних переходах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пішохідних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4204
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------

                    -- Черкащани просять установити камери на пішохідних переходах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('переходах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4204
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1250 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1250 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1250) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4000 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4000 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4000) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2531 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2531 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2531) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1496 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1496 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1496) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2384 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2384 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2384) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8763fe86999101bbc88f8d47c0a8a9c0', '66.249.65.175'::inet, 'Chrome' );
--------------------------------
2019.12.18 00:41:11:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 00:41:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 00:41:13:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.18 01:04:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 5 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 5 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 440 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3783,3782,3781,3780,3777,3776,3775,3773,3770,3768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '024406f3331403a592fe99b422894059', '141.8.143.167'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 01:04:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4378,4376) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394,4393) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4401) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4380,4377) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399,4398) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:04:45:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.18 01:04:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b44edfc91d8c3364cc3bff12f405159', '5.255.250.56'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 844 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 844 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (844) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 844
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                    -- Гравець встановив світовий рекорд з місячної тривалості стрімів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Гравець')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 844
                        AND posts_tags.tag_id IN(3,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                    -- Гравець встановив світовий рекорд з місячної тривалості стрімів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('встановив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 844
                        AND posts_tags.tag_id IN(3,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                    -- Гравець встановив світовий рекорд з місячної тривалості стрімів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('світовий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 844
                        AND posts_tags.tag_id IN(3,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                    -- Гравець встановив світовий рекорд з місячної тривалості стрімів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('рекорд')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 844
                        AND posts_tags.tag_id IN(3,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                    -- Гравець встановив світовий рекорд з місячної тривалості стрімів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('місячної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 844
                        AND posts_tags.tag_id IN(3,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                    -- Гравець встановив світовий рекорд з місячної тривалості стрімів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тривалості')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 844
                        AND posts_tags.tag_id IN(3,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                    -- Гравець встановив світовий рекорд з місячної тривалості стрімів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('стрімів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 844
                        AND posts_tags.tag_id IN(3,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 588 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 588 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (588) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 72 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 72 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (72) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 691 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 691 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (691) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 876 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 876 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (876) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 327 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 327 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (327) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2f9cc2177bd44b1a689d0aca9dca34e0', '37.9.87.150'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 01:18:26:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,719,718,716,715,714,712,708,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,678,677,675,674,673,672,671,670,669,667,666,665,664,663,661,658,657,656,653,647,646,645,644,639,638,637,636,635,632,630,629,627,626,623,620,619,618,617,616,615,614,611,610,609,607,606,605,604,603,602,601,598,597,595,593,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,574,572,571,570,569,567,562,559,558,557,556,555,554,553,551,550,548,546,545,542,537,535,534,533,532,531,529,528,526,525,524,523,522,521,520,519,513,511,510,509,508,507,506,505,504,503,500,497,495,493,489,487,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,460,457,455,452,451,441,440,439,438,437,436,435,434,433,432,431,428,427,425,423,422,421,420,419,418,417,414,411,410,408,407,405,404,400,399,398,396,395,394,393,390,389,388,386,385,379,378,375,374,372,370,369,368,367,366,364,362,361,359,356,355,354,353,348,347,346,345,344,343,342,341,340,339,338,337,336,334,333,332,329,327,326,324,319,318,317,316,314,310,307,304,302,300,299,298,297,296,295,294,293,292,291,290,286,285,283,282,280,274,273,272,271,270,269,268,267,266,265,264,261,257,255,249,248,245,241,240,239,238,237,236,235,234,233,231,230,227,226,225,224,223,222,221,220,219,218,214,213,211,210,207,203,201,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,145,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:27:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.18 01:18:27:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 576 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 576 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (576) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 576
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------

                    -- Чоловіки почуваються щасливішими у батьківстві, ніж матері - дослідження
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чоловіки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 576
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------

                    -- Чоловіки почуваються щасливішими у батьківстві, ніж матері - дослідження
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('почуваються')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 576
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------

                    -- Чоловіки почуваються щасливішими у батьківстві, ніж матері - дослідження
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('щасливішими')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 576
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------

                    -- Чоловіки почуваються щасливішими у батьківстві, ніж матері - дослідження
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('батьківстві,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 576
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------

                    -- Чоловіки почуваються щасливішими у батьківстві, ніж матері - дослідження
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('матері')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 576
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------

                    -- Чоловіки почуваються щасливішими у батьківстві, ніж матері - дослідження
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дослідження')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 576
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 777 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 777 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (777) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 336 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 336 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (336) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 756 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 756 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (756) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 598 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 598 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (598) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 188 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 188 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:18:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (188) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:18:43:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'af0867a57bd84d5171ca60d9c5c5bc25', '141.8.143.193'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 01:20:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 6 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:20:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 6 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 410 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:20:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3717,3715,3709,3708,3707,3705,3704,3703,3702,3701) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:20:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'da3aa0cfe5c57f6194bf8ecd80e81e18', '93.158.166.129'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 8 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 8 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 260 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (366,362,359,356,355,354,347,342,341,340) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b79ebdb9a114be2f774f2dec81259de3', '77.88.47.72'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (96,94) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1137) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 3;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1113,1112,1110) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1094) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 4;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1094,1076,1068,1058) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6,7 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6,7 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1137,1135,1134,1133,1132,1131,1130,1125,1124,1115) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4303 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4303 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4303
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------

                    -- У Черкасах оновили вуличне освітлення на Козацькій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4303
                        AND posts_tags.tag_id IN(4,6,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------

                    -- У Черкасах оновили вуличне освітлення на Козацькій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('оновили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4303
                        AND posts_tags.tag_id IN(4,6,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------

                    -- У Черкасах оновили вуличне освітлення на Козацькій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вуличне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4303
                        AND posts_tags.tag_id IN(4,6,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------

                    -- У Черкасах оновили вуличне освітлення на Козацькій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('освітлення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4303
                        AND posts_tags.tag_id IN(4,6,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------

                    -- У Черкасах оновили вуличне освітлення на Козацькій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Козацькій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4303
                        AND posts_tags.tag_id IN(4,6,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1991 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1991) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '497f5f4d69dd27a50714d63b78111ff6', '66.249.65.176'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:21:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4224 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4224 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4224) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:28:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4224
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:28:
--------------------------------

                    -- П’ять будинків у Черкасах без гарячої води через пориви
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('будинків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4224
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:28:
--------------------------------

                    -- П’ять будинків у Черкасах без гарячої води через пориви
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4224
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:28:
--------------------------------

                    -- П’ять будинків у Черкасах без гарячої води через пориви
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гарячої')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4224
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:29:
--------------------------------

                    -- П’ять будинків у Черкасах без гарячої води через пориви
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пориви')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4224
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:21:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4304 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4304 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4304) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:32:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4304
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:32:
--------------------------------

                    -- В Черкасах поліцейські оперативно затримали групу вимагачів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4304
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:33:
--------------------------------

                    -- В Черкасах поліцейські оперативно затримали групу вимагачів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поліцейські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4304
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:33:
--------------------------------

                    -- В Черкасах поліцейські оперативно затримали групу вимагачів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('оперативно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4304
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:33:
--------------------------------

                    -- В Черкасах поліцейські оперативно затримали групу вимагачів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4304
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:33:
--------------------------------

                    -- В Черкасах поліцейські оперативно затримали групу вимагачів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вимагачів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4304
                        AND posts_tags.tag_id IN(4,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:21:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4274 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4274 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4274) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4274
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------

                    -- В Черкасах через порушення правил дорожнього руху сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4274
                        AND posts_tags.tag_id IN(4,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------

                    -- В Черкасах через порушення правил дорожнього руху сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('порушення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4274
                        AND posts_tags.tag_id IN(4,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------

                    -- В Черкасах через порушення правил дорожнього руху сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('правил')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4274
                        AND posts_tags.tag_id IN(4,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------

                    -- В Черкасах через порушення правил дорожнього руху сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дорожнього')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4274
                        AND posts_tags.tag_id IN(4,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------

                    -- В Черкасах через порушення правил дорожнього руху сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сталася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4274
                        AND posts_tags.tag_id IN(4,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2349 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2349 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2349) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4296 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4296 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4296) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4296
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------

                    -- Через несправну піч в Кумейках сталася пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('несправну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4296
                        AND posts_tags.tag_id IN(4,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------

                    -- Через несправну піч в Кумейках сталася пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Кумейках')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4296
                        AND posts_tags.tag_id IN(4,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------

                    -- Через несправну піч в Кумейках сталася пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сталася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4296
                        AND posts_tags.tag_id IN(4,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------

                    -- Через несправну піч в Кумейках сталася пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пожежа')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4296
                        AND posts_tags.tag_id IN(4,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2354 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2354 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2354) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1769 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1769 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1769) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1793 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1793 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1793) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2355 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2355 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2355) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3639 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3639 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3639) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4219 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4219 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4219) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4219
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------

                    -- На Черкащині горів житловий будинок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4219
                        AND posts_tags.tag_id IN(5,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------

                    -- На Черкащині горів житловий будинок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('житловий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4219
                        AND posts_tags.tag_id IN(5,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------

                    -- На Черкащині горів житловий будинок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('будинок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4219
                        AND posts_tags.tag_id IN(5,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 948 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 948 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (948) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1376 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1376 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1376) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1714 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1714 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1714) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1609 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1609 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1609) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 710 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 710 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (710) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:21:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4268 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4268 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4268) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4268
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:54:
--------------------------------

                    -- Бачити рух маршруток і тролейбусів у Черкасах можна буде через інтернет
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Бачити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4268
                        AND posts_tags.tag_id IN(4,5,6,7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:55:
--------------------------------

                    -- Бачити рух маршруток і тролейбусів у Черкасах можна буде через інтернет
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('маршруток')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4268
                        AND posts_tags.tag_id IN(4,5,6,7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:55:
--------------------------------

                    -- Бачити рух маршруток і тролейбусів у Черкасах можна буде через інтернет
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тролейбусів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4268
                        AND posts_tags.tag_id IN(4,5,6,7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:55:
--------------------------------

                    -- Бачити рух маршруток і тролейбусів у Черкасах можна буде через інтернет
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4268
                        AND posts_tags.tag_id IN(4,5,6,7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:55:
--------------------------------

                    -- Бачити рух маршруток і тролейбусів у Черкасах можна буде через інтернет
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('інтернет')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4268
                        AND posts_tags.tag_id IN(4,5,6,7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1945 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1945 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1945) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2376 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2376 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:21:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2376) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:21:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:22:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4260 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4260 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4260) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:03:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4260
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:03:
--------------------------------

                    -- В деяких освітніх закладах Черкащини заборонили використовувати воду в пластиковій тарі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('деяких')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4260
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:03:
--------------------------------

                    -- В деяких освітніх закладах Черкащини заборонили використовувати воду в пластиковій тарі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('освітніх')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4260
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:03:
--------------------------------

                    -- В деяких освітніх закладах Черкащини заборонили використовувати воду в пластиковій тарі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('закладах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4260
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------

                    -- В деяких освітніх закладах Черкащини заборонили використовувати воду в пластиковій тарі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4260
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------

                    -- В деяких освітніх закладах Черкащини заборонили використовувати воду в пластиковій тарі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('заборонили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4260
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------

                    -- В деяких освітніх закладах Черкащини заборонили використовувати воду в пластиковій тарі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('використовувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4260
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------

                    -- В деяких освітніх закладах Черкащини заборонили використовувати воду в пластиковій тарі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пластиковій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4260
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 416 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 416 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (416) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 683 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 683 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (683) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3802 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3802 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3802) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3795 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3795 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3795) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3789 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3789 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3789) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:22:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4307 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4307 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4307) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:12:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4307
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:12:
--------------------------------

                    -- Письменниця з Черкас у ролі ковдри розповіла про першу українку в Луврі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Письменниця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4307
                        AND posts_tags.tag_id IN(3,4,5,6,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:12:
--------------------------------

                    -- Письменниця з Черкас у ролі ковдри розповіла про першу українку в Луврі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4307
                        AND posts_tags.tag_id IN(3,4,5,6,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:13:
--------------------------------

                    -- Письменниця з Черкас у ролі ковдри розповіла про першу українку в Луврі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ковдри')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4307
                        AND posts_tags.tag_id IN(3,4,5,6,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:13:
--------------------------------

                    -- Письменниця з Черкас у ролі ковдри розповіла про першу українку в Луврі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповіла')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4307
                        AND posts_tags.tag_id IN(3,4,5,6,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:13:
--------------------------------

                    -- Письменниця з Черкас у ролі ковдри розповіла про першу українку в Луврі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('українку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4307
                        AND posts_tags.tag_id IN(3,4,5,6,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:22:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4245 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4245 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4245) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4245
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:21:
--------------------------------

                    -- У Черкасах група чоловіків напала на водія. Вимагали віддати автівку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4245
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:21:
--------------------------------

                    -- У Черкасах група чоловіків напала на водія. Вимагали віддати автівку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловіків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4245
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:21:
--------------------------------

                    -- У Черкасах група чоловіків напала на водія. Вимагали віддати автівку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('напала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4245
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:22:
--------------------------------

                    -- У Черкасах група чоловіків напала на водія. Вимагали віддати автівку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('водія.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4245
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:22:
--------------------------------

                    -- У Черкасах група чоловіків напала на водія. Вимагали віддати автівку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Вимагали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4245
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:22:
--------------------------------

                    -- У Черкасах група чоловіків напала на водія. Вимагали віддати автівку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('віддати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4245
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:22:
--------------------------------

                    -- У Черкасах група чоловіків напала на водія. Вимагали віддати автівку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автівку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4245
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2953 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2953 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2953) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:22:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4271 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4271 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4271) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:30:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4271
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:30:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Цьогорічний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4271
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:30:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грудень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4271
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:31:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4271
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:31:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найтепліших')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4271
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1812 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1812 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1812) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 301 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 301 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (301) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:31:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:22:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4286 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4286 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4286) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4286
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:39:
--------------------------------

                    -- Чорнобаївські “Вікінги” наприкінці року суттєво поповнили скарбничку перемог
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чорнобаївські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4286
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,12,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:39:
--------------------------------

                    -- Чорнобаївські “Вікінги” наприкінці року суттєво поповнили скарбничку перемог
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Вікінги”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4286
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,12,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:39:
--------------------------------

                    -- Чорнобаївські “Вікінги” наприкінці року суттєво поповнили скарбничку перемог
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('наприкінці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4286
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,12,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:39:
--------------------------------

                    -- Чорнобаївські “Вікінги” наприкінці року суттєво поповнили скарбничку перемог
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('суттєво')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4286
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,12,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------

                    -- Чорнобаївські “Вікінги” наприкінці року суттєво поповнили скарбничку перемог
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поповнили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4286
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,12,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------

                    -- Чорнобаївські “Вікінги” наприкінці року суттєво поповнили скарбничку перемог
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('скарбничку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4286
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,12,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------

                    -- Чорнобаївські “Вікінги” наприкінці року суттєво поповнили скарбничку перемог
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перемог')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4286
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,12,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2369 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2369 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2369) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 930 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 930 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (930) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1682 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1682 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1682) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1675 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1675 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1675) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3066 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3066 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3066) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1101 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1101 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1101) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1101
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------

                    -- Підводна акустика може врятувати коралові рифи від загибелі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Підводна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1101
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------

                    -- Підводна акустика може врятувати коралові рифи від загибелі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('акустика')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1101
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------

                    -- Підводна акустика може врятувати коралові рифи від загибелі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('врятувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1101
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------

                    -- Підводна акустика може врятувати коралові рифи від загибелі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('коралові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1101
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------

                    -- Підводна акустика може врятувати коралові рифи від загибелі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('загибелі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1101
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 980 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 980 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (980) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 781 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 781 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (781) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 693 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 693 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (693) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 49 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 49 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (49) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 620 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 620 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (620) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1a0d36373ed7a1d578ee56dab756da62', '66.249.65.146'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:22:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4301 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4301 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4301) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:48:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4301
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:48:
--------------------------------

                    -- Поблизу Канева браконьєр «наловив» риби на 13 тисяч
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Поблизу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4301
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:48:
--------------------------------

                    -- Поблизу Канева браконьєр «наловив» риби на 13 тисяч
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Канева')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4301
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------

                    -- Поблизу Канева браконьєр «наловив» риби на 13 тисяч
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('браконьєр')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4301
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------

                    -- Поблизу Канева браконьєр «наловив» риби на 13 тисяч
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«наловив»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4301
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4392 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4392 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4392) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3863 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3863 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3863) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 385 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 385 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (385) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3433 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3433 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3433) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 986 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 986 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (986) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:22:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4283 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4283 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:22:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4283) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4283
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:57:
--------------------------------

                    -- Більше 200 каратистів змагались у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Більше')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4283
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:57:
--------------------------------

                    -- Більше 200 каратистів змагались у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('каратистів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4283
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:57:
--------------------------------

                    -- Більше 200 каратистів змагались у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('змагались')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4283
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:57:
--------------------------------

                    -- Більше 200 каратистів змагались у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4283
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:22:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:23:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4256 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4256 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4256) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:06:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4256
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:06:
--------------------------------

                    -- В Уманському педуніверситеті визначили переможців турніру з гумору на Кубок ректора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4256
                        AND posts_tags.tag_id IN(3,6,11,13,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:06:
--------------------------------

                    -- В Уманському педуніверситеті визначили переможців турніру з гумору на Кубок ректора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('педуніверситеті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4256
                        AND posts_tags.tag_id IN(3,6,11,13,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:06:
--------------------------------

                    -- В Уманському педуніверситеті визначили переможців турніру з гумору на Кубок ректора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('визначили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4256
                        AND posts_tags.tag_id IN(3,6,11,13,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------

                    -- В Уманському педуніверситеті визначили переможців турніру з гумору на Кубок ректора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('переможців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4256
                        AND posts_tags.tag_id IN(3,6,11,13,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------

                    -- В Уманському педуніверситеті визначили переможців турніру з гумору на Кубок ректора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('турніру')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4256
                        AND posts_tags.tag_id IN(3,6,11,13,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1110 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1110 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1110) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1110
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------

                    -- На Афоні знайшли стародавнє поховання жінки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знайшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1110
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------

                    -- На Афоні знайшли стародавнє поховання жінки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('стародавнє')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1110
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------

                    -- В Уманському педуніверситеті визначили переможців турніру з гумору на Кубок ректора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гумору')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4256
                        AND posts_tags.tag_id IN(3,6,11,13,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------

                    -- На Афоні знайшли стародавнє поховання жінки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поховання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1110
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 646 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 646 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (646) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 800 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 800 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (800) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 678 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 678 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (678) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 183 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 183 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (183) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bbc73cf92656b27bd1280a5dceee4a98', '66.249.65.148'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:23:07:
--------------------------------

                    -- В Уманському педуніверситеті визначили переможців турніру з гумору на Кубок ректора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ректора')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4256
                        AND posts_tags.tag_id IN(3,6,11,13,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3646 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3646 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3646) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2214 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2214 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2214) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4287 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4287 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4287) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3693 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3693 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3693) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 991 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 991 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (991) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:23:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4238 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4238 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4238) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4238
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:15:
--------------------------------

                    -- На Черкащині аграрії блокують дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4238
                        AND posts_tags.tag_id IN(5,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:15:
--------------------------------

                    -- На Черкащині аграрії блокують дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('аграрії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4238
                        AND posts_tags.tag_id IN(5,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:15:
--------------------------------

                    -- На Черкащині аграрії блокують дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('блокують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4238
                        AND posts_tags.tag_id IN(5,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:15:
--------------------------------

                    -- На Черкащині аграрії блокують дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дорогу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4238
                        AND posts_tags.tag_id IN(5,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1096 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1096 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1096) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2019 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2019 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2019) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2516 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2516 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2516) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 738 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 738 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (738) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1092 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1092 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1092) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:23:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4232 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4232 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4232) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4232
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:24:
--------------------------------

                    -- У черкаських школах з’являться кар’єрні радники для учнів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4232
                        AND posts_tags.tag_id IN(3,5,7,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:24:
--------------------------------

                    -- У черкаських школах з’являться кар’єрні радники для учнів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('школах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4232
                        AND posts_tags.tag_id IN(3,5,7,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------

                    -- У черкаських школах з’являться кар’єрні радники для учнів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('з’являться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4232
                        AND posts_tags.tag_id IN(3,5,7,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------

                    -- У черкаських школах з’являться кар’єрні радники для учнів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кар’єрні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4232
                        AND posts_tags.tag_id IN(3,5,7,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------

                    -- У черкаських школах з’являться кар’єрні радники для учнів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('радники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4232
                        AND posts_tags.tag_id IN(3,5,7,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3537 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3537 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3537) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4305 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4305 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4305) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1323 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1323 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1323) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1353 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1353 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1353) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2727 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2727 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2727) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:23:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4216 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4216 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4216) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:33:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4216
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:33:
--------------------------------

                    -- Зірковий черкащанин розповів, як вірш Лесі Українки врятував його від депресії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Зірковий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4216
                        AND posts_tags.tag_id IN(3,4,5,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:33:
--------------------------------

                    -- Зірковий черкащанин розповів, як вірш Лесі Українки врятував його від депресії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4216
                        AND posts_tags.tag_id IN(3,4,5,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:33:
--------------------------------

                    -- Зірковий черкащанин розповів, як вірш Лесі Українки врятував його від депресії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповів,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4216
                        AND posts_tags.tag_id IN(3,4,5,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------

                    -- Зірковий черкащанин розповів, як вірш Лесі Українки врятував його від депресії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Українки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4216
                        AND posts_tags.tag_id IN(3,4,5,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------

                    -- Зірковий черкащанин розповів, як вірш Лесі Українки врятував його від депресії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('врятував')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4216
                        AND posts_tags.tag_id IN(3,4,5,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------

                    -- Зірковий черкащанин розповів, як вірш Лесі Українки врятував його від депресії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('депресії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4216
                        AND posts_tags.tag_id IN(3,4,5,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2665 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2665 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2665) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4307 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4307 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4307) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1756 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1756 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1756) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1820 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1820 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1820) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:23:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4309 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4309 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4309) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:42:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4309
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:42:
--------------------------------

                    -- Майже дві тисячі разів черкащани викликали швидку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тисячі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4309
                        AND posts_tags.tag_id IN(5,7,8,9,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:42:
--------------------------------

                    -- Майже дві тисячі разів черкащани викликали швидку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4309
                        AND posts_tags.tag_id IN(5,7,8,9,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:42:
--------------------------------

                    -- Майже дві тисячі разів черкащани викликали швидку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('викликали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4309
                        AND posts_tags.tag_id IN(5,7,8,9,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:43:
--------------------------------

                    -- Майже дві тисячі разів черкащани викликали швидку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('швидку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4309
                        AND posts_tags.tag_id IN(5,7,8,9,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4275 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4275 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4275) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1143 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1143 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1143) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3013 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3013 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3013) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3405 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3405 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3405) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:43:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1105 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1105 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1105) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1105
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------

                    -- Apple видалила додатки української компанії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('видалила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1105
                        AND posts_tags.tag_id IN(3,7,8,9,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------

                    -- Apple видалила додатки української компанії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('додатки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1105
                        AND posts_tags.tag_id IN(3,7,8,9,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------

                    -- Apple видалила додатки української компанії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('української')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1105
                        AND posts_tags.tag_id IN(3,7,8,9,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------

                    -- Apple видалила додатки української компанії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('компанії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1105
                        AND posts_tags.tag_id IN(3,7,8,9,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 63 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 63 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (63) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 820 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 820 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (820) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 753 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 753 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (753) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1120 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1120 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1120) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 571 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 571 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (571) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:23:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4310 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4310 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4310) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4310
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:51:
--------------------------------

                    -- Черкащани здобули три нагороди Кубку України зі змішаних єдиноборств MMA
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4310
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:51:
--------------------------------

                    -- Черкащани здобули три нагороди Кубку України зі змішаних єдиноборств MMA
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('здобули')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4310
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:51:
--------------------------------

                    -- Черкащани здобули три нагороди Кубку України зі змішаних єдиноборств MMA
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нагороди')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4310
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:51:
--------------------------------

                    -- Черкащани здобули три нагороди Кубку України зі змішаних єдиноборств MMA
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4310
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:51:
--------------------------------

                    -- Черкащани здобули три нагороди Кубку України зі змішаних єдиноборств MMA
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('змішаних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4310
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:52:
--------------------------------

                    -- Черкащани здобули три нагороди Кубку України зі змішаних єдиноборств MMA
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('єдиноборств')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4310
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 390 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 390 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (390) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 122 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 122 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (122) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3783 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3783 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3783) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3750 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3750 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:23:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3750) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:23:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4241 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4241 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4241) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4241
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------

                    -- У канівській лікарні запрацював кол-центр із безкоштовним номером
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('канівській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4241
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------

                    -- У канівській лікарні запрацював кол-центр із безкоштовним номером
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лікарні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4241
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------

                    -- У канівській лікарні запрацював кол-центр із безкоштовним номером
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('запрацював')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4241
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------

                    -- У канівській лікарні запрацював кол-центр із безкоштовним номером
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кол-центр')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4241
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------

                    -- У канівській лікарні запрацював кол-центр із безкоштовним номером
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('безкоштовним')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4241
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------

                    -- У канівській лікарні запрацював кол-центр із безкоштовним номером
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('номером')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4241
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 617 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 617 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (617) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 667 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 667 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (667) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3156 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3156 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3156) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1941 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1941 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 649 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 649 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (649) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:24:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4227 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4227 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4227) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:09:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4227
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:09:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('департаменті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:09:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('охорони')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:09:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('здоров’я')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:09:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('з’яcують,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:09:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поновити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('роботу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фізкабінету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поліклініці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------

                    -- У департаменті охорони здоров’я з’яcують, чи можна поновити роботу фізкабінету у поліклініці на Кобзарській
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Кобзарській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4227
                        AND posts_tags.tag_id IN(5,7,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1921 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1921 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1921) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2295 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2295 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2295) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 726 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 726 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (726) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 227 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 227 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (227) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 220 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 220 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (220) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:24:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 7 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 7 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 300 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3891,3889,3888,3884,3883,3880,3879,3877,3876,3875) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '67b87fa07e8233d256fe6e78941cfb09', '77.88.5.16'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 01:24:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4250 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4250 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4250) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:17:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4250
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------

                    -- Latexfauna – учасник ГайдаFest. Вчимо тексти разом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Latexfauna')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4250
                        AND posts_tags.tag_id IN(3,4,5,6,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------

                    -- Latexfauna – учасник ГайдаFest. Вчимо тексти разом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('учасник')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4250
                        AND posts_tags.tag_id IN(3,4,5,6,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------

                    -- Latexfauna – учасник ГайдаFest. Вчимо тексти разом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ГайдаFest.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4250
                        AND posts_tags.tag_id IN(3,4,5,6,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------

                    -- Latexfauna – учасник ГайдаFest. Вчимо тексти разом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тексти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4250
                        AND posts_tags.tag_id IN(3,4,5,6,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3387 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3387 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3387) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3316 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3316 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3316) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3312 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3312 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3312) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2152 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2152 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2152) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4319 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4319 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4319) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:24:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4229 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4229 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4229) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4229
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:27:
--------------------------------

                    -- У Черкасах сьогодні до +9? тепла
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4229
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:27:
--------------------------------

                    -- У Черкасах сьогодні до +9? тепла
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сьогодні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4229
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '497f5f4d69dd27a50714d63b78111ff6', '66.249.65.176'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1103 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1103 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1103) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1103
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------

                    -- У Китаї успішно випробували автономне вантажне судно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('успішно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1103
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------

                    -- У Китаї успішно випробували автономне вантажне судно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('випробували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1103
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------

                    -- У Китаї успішно випробували автономне вантажне судно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автономне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1103
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------

                    -- У Китаї успішно випробували автономне вантажне судно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вантажне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1103
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 50 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 50 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (50) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1065 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1065 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1065) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 221 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 221 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (221) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 483 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 483 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (483) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 48 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 48 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (48) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1a0d36373ed7a1d578ee56dab756da62', '66.249.65.146'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:24:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4315 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4315 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4315) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:35:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4315
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------

                    -- Черкаські самбісти здобули медалі на чемпіонаті світу в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4315
                        AND posts_tags.tag_id IN(5,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------

                    -- Черкаські самбісти здобули медалі на чемпіонаті світу в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('самбісти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4315
                        AND posts_tags.tag_id IN(5,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------

                    -- Черкаські самбісти здобули медалі на чемпіонаті світу в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('здобули')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4315
                        AND posts_tags.tag_id IN(5,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------

                    -- Черкаські самбісти здобули медалі на чемпіонаті світу в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('медалі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4315
                        AND posts_tags.tag_id IN(5,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------

                    -- Черкаські самбісти здобули медалі на чемпіонаті світу в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чемпіонаті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4315
                        AND posts_tags.tag_id IN(5,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3828 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3828 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3828) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 418 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 418 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (418) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2781 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2781 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2781) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 189 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 189 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (189) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2201 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2201 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2201) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:36:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:24:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4311 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4311
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:45:
--------------------------------

                    -- Синоптики розповіли про найхолоднішу та найтеплішу новорічну ніч у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Синоптики')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4311
                        AND posts_tags.tag_id IN(4,5,6,18,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:45:
--------------------------------

                    -- Синоптики розповіли про найхолоднішу та найтеплішу новорічну ніч у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4311
                        AND posts_tags.tag_id IN(4,5,6,18,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:45:
--------------------------------

                    -- Синоптики розповіли про найхолоднішу та найтеплішу новорічну ніч у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найхолоднішу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4311
                        AND posts_tags.tag_id IN(4,5,6,18,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:45:
--------------------------------

                    -- Синоптики розповіли про найхолоднішу та найтеплішу новорічну ніч у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найтеплішу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4311
                        AND posts_tags.tag_id IN(4,5,6,18,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:45:
--------------------------------

                    -- Синоптики розповіли про найхолоднішу та найтеплішу новорічну ніч у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('новорічну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4311
                        AND posts_tags.tag_id IN(4,5,6,18,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:46:
--------------------------------

                    -- Синоптики розповіли про найхолоднішу та найтеплішу новорічну ніч у Черкасах
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4311
                        AND posts_tags.tag_id IN(4,5,6,18,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:24:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4282 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:53:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4282 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4282) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:53:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4282
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------

                    -- Звенигородський лісівник накрав дерев майже на мільйон гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Звенигородський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4282
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------

                    -- Звенигородський лісівник накрав дерев майже на мільйон гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лісівник')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4282
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------

                    -- Звенигородський лісівник накрав дерев майже на мільйон гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('накрав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4282
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------

                    -- Звенигородський лісівник накрав дерев майже на мільйон гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мільйон')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4282
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------

                    -- Звенигородський лісівник накрав дерев майже на мільйон гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гривень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4282
                        AND posts_tags.tag_id IN(5,6,9,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2923 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2923 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2923) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 408 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 408 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (408) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2468 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2468 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2468) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2544 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2544 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:24:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2544) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:24:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:25:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4270 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4270 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4270) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4270
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:02:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тисячі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts_tags.tag_id IN(7,8,9,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:02:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('викликали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts_tags.tag_id IN(7,8,9,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:03:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“швидку”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts_tags.tag_id IN(7,8,9,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:03:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вихідними')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts_tags.tag_id IN(7,8,9,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:03:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts_tags.tag_id IN(7,8,9,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 311 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4067 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4067 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4067) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:25:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4257 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4257 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4257) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4257
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:11:
--------------------------------

                    -- Черкаські лісівники посилено охороняють плантації з новорічними ялинками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4257
                        AND posts_tags.tag_id IN(5,7,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------

                    -- Черкаські лісівники посилено охороняють плантації з новорічними ялинками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лісівники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4257
                        AND posts_tags.tag_id IN(5,7,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------

                    -- Черкаські лісівники посилено охороняють плантації з новорічними ялинками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('посилено')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4257
                        AND posts_tags.tag_id IN(5,7,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------

                    -- Черкаські лісівники посилено охороняють плантації з новорічними ялинками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('охороняють')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4257
                        AND posts_tags.tag_id IN(5,7,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------

                    -- Черкаські лісівники посилено охороняють плантації з новорічними ялинками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('плантації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4257
                        AND posts_tags.tag_id IN(5,7,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------

                    -- Черкаські лісівники посилено охороняють плантації з новорічними ялинками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('новорічними')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4257
                        AND posts_tags.tag_id IN(5,7,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------

                    -- Черкаські лісівники посилено охороняють плантації з новорічними ялинками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ялинками')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4257
                        AND posts_tags.tag_id IN(5,7,9,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3950 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3950 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3950) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3955 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3955 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3955) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1099 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1099 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1099) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1099
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------

                    -- Експерти назвали найпопулярніші і ненадійні паролі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Експерти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1099
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------

                    -- Експерти назвали найпопулярніші і ненадійні паролі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('назвали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1099
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------

                    -- Експерти назвали найпопулярніші і ненадійні паролі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найпопулярніші')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1099
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------

                    -- Експерти назвали найпопулярніші і ненадійні паролі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ненадійні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1099
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------

                    -- Експерти назвали найпопулярніші і ненадійні паролі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('паролі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1099
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 658 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 658 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (658) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 822 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 822 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (822) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1046 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1046 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1046) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 917 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 917 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (917) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 122 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 122 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (122) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1a0d36373ed7a1d578ee56dab756da62', '66.249.65.146'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:25:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4252 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4252 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4252) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:20:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4252
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:20:
--------------------------------

                    -- Вночі у центрі Черкас сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('центрі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4252
                        AND posts_tags.tag_id IN(4,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:20:
--------------------------------

                    -- Вночі у центрі Черкас сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4252
                        AND posts_tags.tag_id IN(4,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:20:
--------------------------------

                    -- Вночі у центрі Черкас сталася ДТП
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сталася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4252
                        AND posts_tags.tag_id IN(4,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:25:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4263 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4263 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4263) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4263
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:29:
--------------------------------

                    -- Двоє черкащан увійшли до комітету Національної Федерації Бодібілдігу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4263
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:29:
--------------------------------

                    -- Двоє черкащан увійшли до комітету Національної Федерації Бодібілдігу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('увійшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4263
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:29:
--------------------------------

                    -- Двоє черкащан увійшли до комітету Національної Федерації Бодібілдігу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('комітету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4263
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:29:
--------------------------------

                    -- Двоє черкащан увійшли до комітету Національної Федерації Бодібілдігу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Національної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4263
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:30:
--------------------------------

                    -- Двоє черкащан увійшли до комітету Національної Федерації Бодібілдігу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Федерації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4263
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:30:
--------------------------------

                    -- Двоє черкащан увійшли до комітету Національної Федерації Бодібілдігу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Бодібілдігу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4263
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:30:
--------------------------------

                    -- Двоє черкащан увійшли до комітету Національної Федерації Бодібілдігу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4263
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '497f5f4d69dd27a50714d63b78111ff6', '66.249.65.176'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:25:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4272 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4272 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4272) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4272
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:38:
--------------------------------

                    -- Остапчук озвучив серію “Книги-мандрівки”. Сценарій писала черкаська письменниця
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Остапчук')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4272
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:38:
--------------------------------

                    -- Остапчук озвучив серію “Книги-мандрівки”. Сценарій писала черкаська письменниця
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('озвучив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4272
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:39:
--------------------------------

                    -- Остапчук озвучив серію “Книги-мандрівки”. Сценарій писала черкаська письменниця
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Книги-мандрівки”.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4272
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:39:
--------------------------------

                    -- Остапчук озвучив серію “Книги-мандрівки”. Сценарій писала черкаська письменниця
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Сценарій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4272
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:39:
--------------------------------

                    -- Остапчук озвучив серію “Книги-мандрівки”. Сценарій писала черкаська письменниця
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('писала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4272
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:39:
--------------------------------

                    -- Остапчук озвучив серію “Книги-мандрівки”. Сценарій писала черкаська письменниця
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4272
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:40:
--------------------------------

                    -- Остапчук озвучив серію “Книги-мандрівки”. Сценарій писала черкаська письменниця
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('письменниця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4272
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 721 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 721 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (721) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4095 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4095 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4095) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 524 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1748 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1748 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1748) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4371 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:25:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4292 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4292 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4292) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:47:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4292
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:47:
--------------------------------

                    -- Уманчанин Остапчук провів майстер-клас для студентів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманчанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4292
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:47:
--------------------------------

                    -- Уманчанин Остапчук провів майстер-клас для студентів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Остапчук')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4292
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:47:
--------------------------------

                    -- Уманчанин Остапчук провів майстер-клас для студентів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('провів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4292
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:48:
--------------------------------

                    -- Уманчанин Остапчук провів майстер-клас для студентів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('майстер-клас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4292
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:48:
--------------------------------

                    -- Уманчанин Остапчук провів майстер-клас для студентів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('студентів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4292
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 458 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 458 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (458) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 188 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 188 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (188) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 312 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 312 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (312) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:25:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4221 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4221 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4221) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4221
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:56:
--------------------------------

                    -- У Черкаській ОДА прозвітували про ремонти на автодорогах місцевого значення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4221
                        AND posts_tags.tag_id IN(4,5,7,8,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:56:
--------------------------------

                    -- У Черкаській ОДА прозвітували про ремонти на автодорогах місцевого значення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('прозвітували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4221
                        AND posts_tags.tag_id IN(4,5,7,8,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:56:
--------------------------------

                    -- У Черкаській ОДА прозвітували про ремонти на автодорогах місцевого значення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ремонти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4221
                        AND posts_tags.tag_id IN(4,5,7,8,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:56:
--------------------------------

                    -- У Черкаській ОДА прозвітували про ремонти на автодорогах місцевого значення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автодорогах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4221
                        AND posts_tags.tag_id IN(4,5,7,8,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:56:
--------------------------------

                    -- У Черкаській ОДА прозвітували про ремонти на автодорогах місцевого значення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('місцевого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4221
                        AND posts_tags.tag_id IN(4,5,7,8,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:57:
--------------------------------

                    -- У Черкаській ОДА прозвітували про ремонти на автодорогах місцевого значення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('значення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4221
                        AND posts_tags.tag_id IN(4,5,7,8,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2936 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2936 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2936) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4163 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4163 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:25:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4163) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:25:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1107 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1107 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1107) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1107
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------

                    -- Philips 499P9H/00: огляд вражаючого 48.8” монітора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Philips')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1107
                        AND posts_tags.tag_id IN(4,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------

                    -- Philips 499P9H/00: огляд вражаючого 48.8” монітора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('499P9H/00:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1107
                        AND posts_tags.tag_id IN(4,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------

                    -- Philips 499P9H/00: огляд вражаючого 48.8” монітора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вражаючого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1107
                        AND posts_tags.tag_id IN(4,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------

                    -- Philips 499P9H/00: огляд вражаючого 48.8” монітора
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('монітора')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1107
                        AND posts_tags.tag_id IN(4,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 828 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 828 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (828) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 973 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 973 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (973) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1096 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1096 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1096) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 911 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 911 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (911) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1014 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1014 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1014) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4255 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4255 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4255) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4255
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------

                    -- На Золотоніщині аграрії перекрили дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Золотоніщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4255
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------

                    -- На Золотоніщині аграрії перекрили дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('аграрії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4255
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------

                    -- На Золотоніщині аграрії перекрили дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перекрили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4255
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------

                    -- На Золотоніщині аграрії перекрили дорогу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дорогу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4255
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 742 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 742 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (742) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 378 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 378 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (378) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:26:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4277 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4277 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4277) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:14:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4277
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:14:
--------------------------------

                    -- У 12-ти освітніх закладах Черкащини заборонено використовувати воду з власних джерел
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('освітніх')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4277
                        AND posts_tags.tag_id IN(4,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:14:
--------------------------------

                    -- У 12-ти освітніх закладах Черкащини заборонено використовувати воду з власних джерел
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('закладах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4277
                        AND posts_tags.tag_id IN(4,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:14:
--------------------------------

                    -- У 12-ти освітніх закладах Черкащини заборонено використовувати воду з власних джерел
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4277
                        AND posts_tags.tag_id IN(4,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:14:
--------------------------------

                    -- У 12-ти освітніх закладах Черкащини заборонено використовувати воду з власних джерел
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('заборонено')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4277
                        AND posts_tags.tag_id IN(4,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:14:
--------------------------------

                    -- У 12-ти освітніх закладах Черкащини заборонено використовувати воду з власних джерел
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('використовувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4277
                        AND posts_tags.tag_id IN(4,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:15:
--------------------------------

                    -- У 12-ти освітніх закладах Черкащини заборонено використовувати воду з власних джерел
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('власних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4277
                        AND posts_tags.tag_id IN(4,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:15:
--------------------------------

                    -- У 12-ти освітніх закладах Черкащини заборонено використовувати воду з власних джерел
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('джерел')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4277
                        AND posts_tags.tag_id IN(4,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:26:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4215 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4215 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4215) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:23:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4215
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:23:
--------------------------------

                    -- У Черкасах затримали водія, який бив іншого молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4215
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:23:
--------------------------------

                    -- У Черкасах затримали водія, який бив іншого молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4215
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:23:
--------------------------------

                    -- У Черкасах затримали водія, який бив іншого молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('водія,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4215
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:23:
--------------------------------

                    -- У Черкасах затримали водія, який бив іншого молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('іншого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4215
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:23:
--------------------------------

                    -- У Черкасах затримали водія, який бив іншого молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('молотком')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4215
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:26:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4288 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4288 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4288) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:32:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4288
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:32:
--------------------------------

                    -- В Черкасах водії не змогли розібратися, кому проїжджати першому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4288
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:32:
--------------------------------

                    -- В Черкасах водії не змогли розібратися, кому проїжджати першому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('змогли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4288
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:32:
--------------------------------

                    -- В Черкасах водії не змогли розібратися, кому проїжджати першому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розібратися,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4288
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:32:
--------------------------------

                    -- В Черкасах водії не змогли розібратися, кому проїжджати першому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('проїжджати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4288
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:32:
--------------------------------

                    -- В Черкасах водії не змогли розібратися, кому проїжджати першому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('першому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4288
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '497f5f4d69dd27a50714d63b78111ff6', '66.249.65.176'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:26:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4265 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4265 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4265) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4265
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:41:
--------------------------------

                    -- У Черкасах ВАЗ протаранив “Volkswagen”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4265
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:41:
--------------------------------

                    -- У Черкасах ВАЗ протаранив “Volkswagen”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('протаранив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4265
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:41:
--------------------------------

                    -- У Черкасах ВАЗ протаранив “Volkswagen”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Volkswagen”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4265
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1109 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1109 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1109) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1109
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------

                    -- Бетмен від Telltale повертається в оновленому вигляді
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Бетмен')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1109
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------

                    -- Бетмен від Telltale повертається в оновленому вигляді
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Telltale')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1109
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------

                    -- Бетмен від Telltale повертається в оновленому вигляді
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('повертається')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1109
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------

                    -- Бетмен від Telltale повертається в оновленому вигляді
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('оновленому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1109
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------

                    -- Бетмен від Telltale повертається в оновленому вигляді
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вигляді')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1109
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 62 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 62 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (62) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 657 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 657 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (657) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 590 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 590 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (590) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1035 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1035 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1035) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 24 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 24 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (24) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bbc73cf92656b27bd1280a5dceee4a98', '66.249.65.148'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4236 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4236 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4236) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4236
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------

                    -- Справа уманського прокурора понад рік перебуває в касаційному суді без розгляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Справа')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4236
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------

                    -- Справа уманського прокурора понад рік перебуває в касаційному суді без розгляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('уманського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4236
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------

                    -- Справа уманського прокурора понад рік перебуває в касаційному суді без розгляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('прокурора')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4236
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------

                    -- Справа уманського прокурора понад рік перебуває в касаційному суді без розгляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перебуває')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4236
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------

                    -- Справа уманського прокурора понад рік перебуває в касаційному суді без розгляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('касаційному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4236
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------

                    -- Справа уманського прокурора понад рік перебуває в касаційному суді без розгляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розгляду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4236
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4087 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4087 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4087) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2343 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2343 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2343) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3107 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3107 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3107) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:26:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4264 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4264 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:26:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4264) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:59:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4264
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:59:
--------------------------------

                    -- В облраді хочуть змістити голову бюджетної комісії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('облраді')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4264
                        AND posts_tags.tag_id IN(4,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:59:
--------------------------------

                    -- В облраді хочуть змістити голову бюджетної комісії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('хочуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4264
                        AND posts_tags.tag_id IN(4,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:59:
--------------------------------

                    -- В облраді хочуть змістити голову бюджетної комісії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('змістити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4264
                        AND posts_tags.tag_id IN(4,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:59:
--------------------------------

                    -- В облраді хочуть змістити голову бюджетної комісії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('голову')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4264
                        AND posts_tags.tag_id IN(4,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:26:59:
--------------------------------

                    -- В облраді хочуть змістити голову бюджетної комісії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бюджетної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4264
                        AND posts_tags.tag_id IN(4,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:00:
--------------------------------

                    -- В облраді хочуть змістити голову бюджетної комісії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('комісії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4264
                        AND posts_tags.tag_id IN(4,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3880 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3880 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3880) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1765 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1765 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1765) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 653 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 653 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (653) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2457 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2457 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2457) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1653 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1653 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1653) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:27:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4312 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4312 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4312) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4312
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------

                    -- На Черкащині визначили найкращих в області знавців української мови
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4312
                        AND posts_tags.tag_id IN(3,4,5,7,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------

                    -- На Черкащині визначили найкращих в області знавців української мови
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('визначили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4312
                        AND posts_tags.tag_id IN(3,4,5,7,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------

                    -- На Черкащині визначили найкращих в області знавців української мови
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найкращих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4312
                        AND posts_tags.tag_id IN(3,4,5,7,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------

                    -- На Черкащині визначили найкращих в області знавців української мови
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4312
                        AND posts_tags.tag_id IN(3,4,5,7,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------

                    -- На Черкащині визначили найкращих в області знавців української мови
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знавців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4312
                        AND posts_tags.tag_id IN(3,4,5,7,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------

                    -- На Черкащині визначили найкращих в області знавців української мови
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('української')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4312
                        AND posts_tags.tag_id IN(3,4,5,7,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2944 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2944 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2944) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:27:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4230 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4230 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4230) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:16:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4230
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:17:
--------------------------------

                    -- В Черкасах провайдер масово вимкне інтернет через ремонт
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4230
                        AND posts_tags.tag_id IN(4,6,7,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:17:
--------------------------------

                    -- В Черкасах провайдер масово вимкне інтернет через ремонт
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('провайдер')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4230
                        AND posts_tags.tag_id IN(4,6,7,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:17:
--------------------------------

                    -- В Черкасах провайдер масово вимкне інтернет через ремонт
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('масово')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4230
                        AND posts_tags.tag_id IN(4,6,7,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:17:
--------------------------------

                    -- В Черкасах провайдер масово вимкне інтернет через ремонт
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вимкне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4230
                        AND posts_tags.tag_id IN(4,6,7,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:17:
--------------------------------

                    -- В Черкасах провайдер масово вимкне інтернет через ремонт
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('інтернет')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4230
                        AND posts_tags.tag_id IN(4,6,7,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:18:
--------------------------------

                    -- В Черкасах провайдер масово вимкне інтернет через ремонт
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ремонт')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4230
                        AND posts_tags.tag_id IN(4,6,7,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:27:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4243 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4243 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4243) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:25:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4243
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:26:
--------------------------------

                    -- Уманська велосипедистка стала чемпіонкою України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4243
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:26:
--------------------------------

                    -- Уманська велосипедистка стала чемпіонкою України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('велосипедистка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4243
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:26:
--------------------------------

                    -- Уманська велосипедистка стала чемпіонкою України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чемпіонкою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4243
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:26:
--------------------------------

                    -- Уманська велосипедистка стала чемпіонкою України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4243
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '497f5f4d69dd27a50714d63b78111ff6', '66.249.65.176'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:27:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1106 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1106 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1106) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:32:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1106
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:32:
--------------------------------

                    -- Творці голів на острові Пасхи могли вірити, що скульптури покращують врожай
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Творці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:32:
--------------------------------

                    -- Творці голів на острові Пасхи могли вірити, що скульптури покращують врожай
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('острові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:32:
--------------------------------

                    -- Творці голів на острові Пасхи могли вірити, що скульптури покращують врожай
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вірити,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:32:
--------------------------------

                    -- Творці голів на острові Пасхи могли вірити, що скульптури покращують врожай
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('скульптури')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:32:
--------------------------------

                    -- Творці голів на острові Пасхи могли вірити, що скульптури покращують врожай
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('покращують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:33:
--------------------------------

                    -- Творці голів на острові Пасхи могли вірити, що скульптури покращують врожай
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('врожай')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 269 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 269 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (269) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 300 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 300 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (300) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 987 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 987 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (987) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 939 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 939 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (939) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 908 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 908 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (908) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:27:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4262 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4262 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4262) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:34:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4262
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------

                    -- Уманчани зможуть повідомити про незаконні рубки ялинок на «гарячу лінію»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманчани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4262
                        AND posts_tags.tag_id IN(6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------

                    -- Уманчани зможуть повідомити про незаконні рубки ялинок на «гарячу лінію»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зможуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4262
                        AND posts_tags.tag_id IN(6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------

                    -- Уманчани зможуть повідомити про незаконні рубки ялинок на «гарячу лінію»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('повідомити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4262
                        AND posts_tags.tag_id IN(6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------

                    -- Уманчани зможуть повідомити про незаконні рубки ялинок на «гарячу лінію»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('незаконні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4262
                        AND posts_tags.tag_id IN(6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------

                    -- Уманчани зможуть повідомити про незаконні рубки ялинок на «гарячу лінію»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ялинок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4262
                        AND posts_tags.tag_id IN(6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------

                    -- Уманчани зможуть повідомити про незаконні рубки ялинок на «гарячу лінію»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«гарячу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4262
                        AND posts_tags.tag_id IN(6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------

                    -- Уманчани зможуть повідомити про незаконні рубки ялинок на «гарячу лінію»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лінію»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4262
                        AND posts_tags.tag_id IN(6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3936 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3936 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3936) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2382 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2382 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2382) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3638 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3638 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3638) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4224 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4224 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4224) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2341 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2341 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2341) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:27:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4295 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4295 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4295) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4295
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------

                    -- Минулого тижня на Черкащині сталося 16 пожеж
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Минулого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4295
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------

                    -- Минулого тижня на Черкащині сталося 16 пожеж
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4295
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------

                    -- Минулого тижня на Черкащині сталося 16 пожеж
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сталося')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4295
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 791 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 791 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (791) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3766 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3766 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3766) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1519 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1519 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1519) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1297 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1297 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1297) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:27:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4298 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4298 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:27:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4298) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4298
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:53:
--------------------------------

                    -- Лісівники Черкащини охороняють ялинкові плантації у посиленому режимі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Лісівники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4298
                        AND posts_tags.tag_id IN(4,5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:53:
--------------------------------

                    -- Лісівники Черкащини охороняють ялинкові плантації у посиленому режимі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4298
                        AND posts_tags.tag_id IN(4,5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:53:
--------------------------------

                    -- Лісівники Черкащини охороняють ялинкові плантації у посиленому режимі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('охороняють')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4298
                        AND posts_tags.tag_id IN(4,5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:53:
--------------------------------

                    -- Лісівники Черкащини охороняють ялинкові плантації у посиленому режимі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ялинкові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4298
                        AND posts_tags.tag_id IN(4,5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:53:
--------------------------------

                    -- Лісівники Черкащини охороняють ялинкові плантації у посиленому режимі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('плантації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4298
                        AND posts_tags.tag_id IN(4,5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:54:
--------------------------------

                    -- Лісівники Черкащини охороняють ялинкові плантації у посиленому режимі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('посиленому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4298
                        AND posts_tags.tag_id IN(4,5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:54:
--------------------------------

                    -- Лісівники Черкащини охороняють ялинкові плантації у посиленому режимі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('режимі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4298
                        AND posts_tags.tag_id IN(4,5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:27:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:28:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4285 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4285 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4285) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:01:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4285
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:01:
--------------------------------

                    -- В одному з медзакладів Черкас мало не виникла пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('одному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4285
                        AND posts_tags.tag_id IN(4,6,8,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:02:
--------------------------------

                    -- В одному з медзакладів Черкас мало не виникла пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('медзакладів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4285
                        AND posts_tags.tag_id IN(4,6,8,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:02:
--------------------------------

                    -- В одному з медзакладів Черкас мало не виникла пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4285
                        AND posts_tags.tag_id IN(4,6,8,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:02:
--------------------------------

                    -- В одному з медзакладів Черкас мало не виникла пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('виникла')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4285
                        AND posts_tags.tag_id IN(4,6,8,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:02:
--------------------------------

                    -- В одному з медзакладів Черкас мало не виникла пожежа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пожежа')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4285
                        AND posts_tags.tag_id IN(4,6,8,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:28:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4259 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4259 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4259) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:10:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4259
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:10:
--------------------------------

                    -- У черкаському водоканалі розповіли, де можна сплатити без комісії за надані послуги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4259
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:10:
--------------------------------

                    -- У черкаському водоканалі розповіли, де можна сплатити без комісії за надані послуги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('водоканалі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4259
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:10:
--------------------------------

                    -- У черкаському водоканалі розповіли, де можна сплатити без комісії за надані послуги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4259
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:10:
--------------------------------

                    -- У черкаському водоканалі розповіли, де можна сплатити без комісії за надані послуги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сплатити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4259
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:10:
--------------------------------

                    -- У черкаському водоканалі розповіли, де можна сплатити без комісії за надані послуги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('комісії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4259
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:11:
--------------------------------

                    -- У черкаському водоканалі розповіли, де можна сплатити без комісії за надані послуги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('надані')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4259
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:11:
--------------------------------

                    -- У черкаському водоканалі розповіли, де можна сплатити без комісії за надані послуги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('послуги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4259
                        AND posts_tags.tag_id IN(7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3912 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3912 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3912) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3052 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3052 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3052) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3065 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3065 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3065) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3063 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3063 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3063) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:11:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1108 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1108 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1108) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1108
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------

                    -- Халява від GOG: Postal 2 роздають безкоштовно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Халява')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1108
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------

                    -- Халява від GOG: Postal 2 роздають безкоштовно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Postal')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1108
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------

                    -- Халява від GOG: Postal 2 роздають безкоштовно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('роздають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1108
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------

                    -- Халява від GOG: Postal 2 роздають безкоштовно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('безкоштовно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1108
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 529 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 529 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (529) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 935 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 935 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (935) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 388 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 388 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (388) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1038 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1038 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1038) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 610 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 610 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (610) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bbc73cf92656b27bd1280a5dceee4a98', '66.249.65.148'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:28:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4249 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4249 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4249) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:19:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4249
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:19:
--------------------------------

                    -- На Тальнівщині хочуть врятувати лебедів, що живуть на ставку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Тальнівщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4249
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------

                    -- На Тальнівщині хочуть врятувати лебедів, що живуть на ставку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('хочуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4249
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------

                    -- На Тальнівщині хочуть врятувати лебедів, що живуть на ставку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('врятувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4249
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------

                    -- На Тальнівщині хочуть врятувати лебедів, що живуть на ставку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лебедів,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4249
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------

                    -- На Тальнівщині хочуть врятувати лебедів, що живуть на ставку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('живуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4249
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------

                    -- На Тальнівщині хочуть врятувати лебедів, що живуть на ставку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ставку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4249
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4048 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4048 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4048) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2486 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2486 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2486) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 875 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 875 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (875) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1001 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1001 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1001) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1039 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1039 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1039) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:28:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4302 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4302 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4302) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:28:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4302
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:28:
--------------------------------

                    -- Черкащани вибороли срібло і бронзу Чемпіонату світу з бойового самбо в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4302
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:28:
--------------------------------

                    -- Черкащани вибороли срібло і бронзу Чемпіонату світу з бойового самбо в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вибороли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4302
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:28:
--------------------------------

                    -- Черкащани вибороли срібло і бронзу Чемпіонату світу з бойового самбо в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('срібло')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4302
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:29:
--------------------------------

                    -- Черкащани вибороли срібло і бронзу Чемпіонату світу з бойового самбо в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бронзу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4302
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:29:
--------------------------------

                    -- Черкащани вибороли срібло і бронзу Чемпіонату світу з бойового самбо в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чемпіонату')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4302
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:29:
--------------------------------

                    -- Черкащани вибороли срібло і бронзу Чемпіонату світу з бойового самбо в Росії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бойового')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4302
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3039 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3039 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3039) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '497f5f4d69dd27a50714d63b78111ff6', '66.249.65.176'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:28:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4220 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4220 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4220) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:37:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4220
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:37:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:37:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:37:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вимагачів,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:37:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відібрали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:38:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловіка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:38:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('змусили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:38:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('написати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:38:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('боргову')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:38:
--------------------------------

                    -- У Черкасах затримали вимагачів, які відібрали у чоловіка авто і змусили написати боргову розписку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розписку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4220
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:38:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:28:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4305 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4305 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4305) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:46:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4305
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:46:
--------------------------------

                    -- У школах Черкащини з’являться “добрі” плакати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('школах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4305
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:46:
--------------------------------

                    -- У школах Черкащини з’являться “добрі” плакати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4305
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:46:
--------------------------------

                    -- У школах Черкащини з’являться “добрі” плакати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('з’являться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4305
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:46:
--------------------------------

                    -- У школах Черкащини з’являться “добрі” плакати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“добрі”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4305
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:46:
--------------------------------

                    -- У школах Черкащини з’являться “добрі” плакати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('плакати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4305
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3258 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3258 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3258) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:28:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4276 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4276 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:28:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4276) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:55:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4276
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:55:
--------------------------------

                    -- 40 надзвичайних подій сталося в області за тиждень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('надзвичайних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4276
                        AND posts_tags.tag_id IN(4,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:55:
--------------------------------

                    -- 40 надзвичайних подій сталося в області за тиждень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сталося')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4276
                        AND posts_tags.tag_id IN(4,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:55:
--------------------------------

                    -- 40 надзвичайних подій сталося в області за тиждень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4276
                        AND posts_tags.tag_id IN(4,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:55:
--------------------------------

                    -- 40 надзвичайних подій сталося в області за тиждень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тиждень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4276
                        AND posts_tags.tag_id IN(4,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:28:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1111 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1111 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1111) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1111
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:02:
--------------------------------

                    -- До нових крісел Hator клавіатура у подарунок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('крісел')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1111
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:02:
--------------------------------

                    -- До нових крісел Hator клавіатура у подарунок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('клавіатура')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1111
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:02:
--------------------------------

                    -- До нових крісел Hator клавіатура у подарунок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('подарунок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1111
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4237 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4237 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4237) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4237
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------

                    -- В Умані пройде День відкритих дверей від Української дитячої академії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пройде')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4237
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------

                    -- В Умані пройде День відкритих дверей від Української дитячої академії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відкритих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4237
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------

                    -- В Умані пройде День відкритих дверей від Української дитячої академії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дверей')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4237
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------

                    -- В Умані пройде День відкритих дверей від Української дитячої академії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Української')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4237
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------

                    -- В Умані пройде День відкритих дверей від Української дитячої академії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дитячої')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4237
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------

                    -- В Умані пройде День відкритих дверей від Української дитячої академії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('академії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4237
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2537 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2537 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2537) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1762 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1762 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1762) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1905 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1905 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1905) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 651 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 651 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (651) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1575 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1575 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1575) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:29:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4218 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4218 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4218) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4218
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------

                    -- Черкащан просять проголосувати за слоган для бренду області
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4218
                        AND posts_tags.tag_id IN(4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------

                    -- Черкащан просять проголосувати за слоган для бренду області
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('просять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4218
                        AND posts_tags.tag_id IN(4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------

                    -- Черкащан просять проголосувати за слоган для бренду області
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('проголосувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4218
                        AND posts_tags.tag_id IN(4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------

                    -- Черкащан просять проголосувати за слоган для бренду області
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('слоган')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4218
                        AND posts_tags.tag_id IN(4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------

                    -- Черкащан просять проголосувати за слоган для бренду області
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бренду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4218
                        AND posts_tags.tag_id IN(4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------

                    -- Черкащан просять проголосувати за слоган для бренду області
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4218
                        AND posts_tags.tag_id IN(4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4172 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4172 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4172) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:29:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:29:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4284 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4284 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4284) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:22:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4284
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:22:
--------------------------------

                    -- Черкаських школярів годуватимуть по-старому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4284
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:22:
--------------------------------

                    -- Черкаських школярів годуватимуть по-старому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('школярів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4284
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:22:
--------------------------------

                    -- Черкаських школярів годуватимуть по-старому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('годуватимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4284
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:23:
--------------------------------

                    -- Черкаських школярів годуватимуть по-старому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('по-старому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4284
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4057 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4057 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4057) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3878 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3878 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3878) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4299 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4299 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4299) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:31:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4299
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:31:
--------------------------------

                    -- В Черкасах у маршрутці тяжко травмувалась жінка: шукають свідків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4299
                        AND posts_tags.tag_id IN(4,6,7,9,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:31:
--------------------------------

                    -- В Черкасах у маршрутці тяжко травмувалась жінка: шукають свідків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('маршрутці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4299
                        AND posts_tags.tag_id IN(4,6,7,9,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:31:
--------------------------------

                    -- В Черкасах у маршрутці тяжко травмувалась жінка: шукають свідків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('травмувалась')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4299
                        AND posts_tags.tag_id IN(4,6,7,9,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:32:
--------------------------------

                    -- В Черкасах у маршрутці тяжко травмувалась жінка: шукають свідків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('жінка:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4299
                        AND posts_tags.tag_id IN(4,6,7,9,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:32:
--------------------------------

                    -- В Черкасах у маршрутці тяжко травмувалась жінка: шукають свідків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('шукають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4299
                        AND posts_tags.tag_id IN(4,6,7,9,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:32:
--------------------------------

                    -- В Черкасах у маршрутці тяжко травмувалась жінка: шукають свідків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('свідків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4299
                        AND posts_tags.tag_id IN(4,6,7,9,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4248 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4248 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4248) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4248
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

                    -- Нові правила користування громадським транспортом мають зробити  контролерів ввічливими
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('правила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4248
                        AND posts_tags.tag_id IN(4,5,6,7,9,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

                    -- Нові правила користування громадським транспортом мають зробити  контролерів ввічливими
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('користування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4248
                        AND posts_tags.tag_id IN(4,5,6,7,9,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

                    -- Нові правила користування громадським транспортом мають зробити  контролерів ввічливими
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('громадським')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4248
                        AND posts_tags.tag_id IN(4,5,6,7,9,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

                    -- Нові правила користування громадським транспортом мають зробити  контролерів ввічливими
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('транспортом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4248
                        AND posts_tags.tag_id IN(4,5,6,7,9,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

                    -- Нові правила користування громадським транспортом мають зробити  контролерів ввічливими
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зробити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4248
                        AND posts_tags.tag_id IN(4,5,6,7,9,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

                    -- Нові правила користування громадським транспортом мають зробити  контролерів ввічливими
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('контролерів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4248
                        AND posts_tags.tag_id IN(4,5,6,7,9,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------

                    -- Нові правила користування громадським транспортом мають зробити  контролерів ввічливими
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ввічливими')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4248
                        AND posts_tags.tag_id IN(4,5,6,7,9,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3963 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3963 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3963) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1379 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1379 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1379) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2186 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2186 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2186) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4297 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4297 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4297) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4297
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------

                    -- На Черкащині затримали грабіжників із Вінниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4297
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------

                    -- На Черкащині затримали грабіжників із Вінниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4297
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------

                    -- На Черкащині затримали грабіжників із Вінниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грабіжників')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4297
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------

                    -- На Черкащині затримали грабіжників із Вінниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Вінниччини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4297
                        AND posts_tags.tag_id IN(4,5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4220 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4220 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4220) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1025 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1025 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1025) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3221 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3221 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3221) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1032 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1032 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1032) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1096 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1096 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1096) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1096
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:49:
--------------------------------

                    -- Time склав рейтинг ТОП-10 гаджетів десятиліття
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('рейтинг')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1096
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------

                    -- Time склав рейтинг ТОП-10 гаджетів десятиліття
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ТОП-10')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1096
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------

                    -- Time склав рейтинг ТОП-10 гаджетів десятиліття
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гаджетів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1096
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------

                    -- Time склав рейтинг ТОП-10 гаджетів десятиліття
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('десятиліття')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1096
                        AND posts_tags.tag_id IN(3,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 873 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 873 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (873) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 836 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 836 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (836) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 814 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 814 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (814) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 51 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 51 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (51) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 907 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 907 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (907) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bbc73cf92656b27bd1280a5dceee4a98', '66.249.65.148'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1094 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1094 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1094) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1094
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

                    -- Міжнародна IT-компанія ESET представила основні тенденції розвитку кіберзагроз у 2020 році
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Міжнародна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1094
                        AND posts_tags.tag_id IN(3,5,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

                    -- Міжнародна IT-компанія ESET представила основні тенденції розвитку кіберзагроз у 2020 році
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('IT-компанія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1094
                        AND posts_tags.tag_id IN(3,5,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

                    -- Міжнародна IT-компанія ESET представила основні тенденції розвитку кіберзагроз у 2020 році
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('представила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1094
                        AND posts_tags.tag_id IN(3,5,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

                    -- Міжнародна IT-компанія ESET представила основні тенденції розвитку кіберзагроз у 2020 році
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('основні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1094
                        AND posts_tags.tag_id IN(3,5,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

                    -- Міжнародна IT-компанія ESET представила основні тенденції розвитку кіберзагроз у 2020 році
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тенденції')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1094
                        AND posts_tags.tag_id IN(3,5,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

                    -- Міжнародна IT-компанія ESET представила основні тенденції розвитку кіберзагроз у 2020 році
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розвитку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1094
                        AND posts_tags.tag_id IN(3,5,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------

                    -- Міжнародна IT-компанія ESET представила основні тенденції розвитку кіберзагроз у 2020 році
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кіберзагроз')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1094
                        AND posts_tags.tag_id IN(3,5,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 54 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 54 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (54) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 230 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 230 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (230) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 52 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 52 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (52) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1130 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1130 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1130) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2bb0623b98d143afc0f4a5df9542f533', '66.249.65.150'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4314 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4314 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4314) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4314
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

                    -- В Уманському будинку культури запрацювала резиденція Святого Миколая
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4314
                        AND posts_tags.tag_id IN(3,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

                    -- В Уманському будинку культури запрацювала резиденція Святого Миколая
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('будинку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4314
                        AND posts_tags.tag_id IN(3,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

                    -- В Уманському будинку культури запрацювала резиденція Святого Миколая
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('культури')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4314
                        AND posts_tags.tag_id IN(3,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

                    -- В Уманському будинку культури запрацювала резиденція Святого Миколая
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('запрацювала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4314
                        AND posts_tags.tag_id IN(3,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

                    -- В Уманському будинку культури запрацювала резиденція Святого Миколая
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('резиденція')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4314
                        AND posts_tags.tag_id IN(3,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

                    -- В Уманському будинку культури запрацювала резиденція Святого Миколая
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Святого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4314
                        AND posts_tags.tag_id IN(3,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------

                    -- В Уманському будинку культури запрацювала резиденція Святого Миколая
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Миколая')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4314
                        AND posts_tags.tag_id IN(3,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2769 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2769 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2769) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1162 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1162 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1162) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 946 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 946 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (946) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2435 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2435 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:29:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2435) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:29:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:30:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4281 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:06:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4281
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------

                    -- На Черкащині чоловік убив дружину качалкою і два місяці жив поруч із її трупом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4281
                        AND posts_tags.tag_id IN(5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------

                    -- На Черкащині чоловік убив дружину качалкою і два місяці жив поруч із її трупом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловік')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4281
                        AND posts_tags.tag_id IN(5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------

                    -- На Черкащині чоловік убив дружину качалкою і два місяці жив поруч із її трупом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дружину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4281
                        AND posts_tags.tag_id IN(5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------

                    -- На Черкащині чоловік убив дружину качалкою і два місяці жив поруч із її трупом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('качалкою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4281
                        AND posts_tags.tag_id IN(5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------

                    -- На Черкащині чоловік убив дружину качалкою і два місяці жив поруч із її трупом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('місяці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4281
                        AND posts_tags.tag_id IN(5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------

                    -- На Черкащині чоловік убив дружину качалкою і два місяці жив поруч із її трупом
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('трупом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4281
                        AND posts_tags.tag_id IN(5,6,7,9,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1437 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1437 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1437) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1829 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1829 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1829) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1306 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1306 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1306) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1725 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1725 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1725) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4222 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4222 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4222) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4222
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------

                    -- На Черкащині зросли тарифи на житло, медикаменти та алкоголь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4222
                        AND posts_tags.tag_id IN(9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------

                    -- На Черкащині зросли тарифи на житло, медикаменти та алкоголь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зросли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4222
                        AND posts_tags.tag_id IN(9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------

                    -- На Черкащині зросли тарифи на житло, медикаменти та алкоголь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тарифи')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4222
                        AND posts_tags.tag_id IN(9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------

                    -- На Черкащині зросли тарифи на житло, медикаменти та алкоголь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('житло,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4222
                        AND posts_tags.tag_id IN(9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------

                    -- На Черкащині зросли тарифи на житло, медикаменти та алкоголь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('медикаменти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4222
                        AND posts_tags.tag_id IN(9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------

                    -- На Черкащині зросли тарифи на житло, медикаменти та алкоголь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('алкоголь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4222
                        AND posts_tags.tag_id IN(9,10,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2581 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2581 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2581) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1795 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1795 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1795) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1728 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1728 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1728) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4300 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4300 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4300) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4300
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:19:
--------------------------------

                    -- Поблизу Черкас зник чоловік
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Поблизу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4300
                        AND posts_tags.tag_id IN(4,5,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:19:
--------------------------------

                    -- Поблизу Черкас зник чоловік
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4300
                        AND posts_tags.tag_id IN(4,5,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:19:
--------------------------------

                    -- Поблизу Черкас зник чоловік
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловік')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4300
                        AND posts_tags.tag_id IN(4,5,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4240 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4240 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4240) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:25:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4240
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:25:
--------------------------------

                    -- Сьогодні на Черкащині сиро, але дощу не передбачається
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Сьогодні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4240
                        AND posts_tags.tag_id IN(4,5,6,7,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:25:
--------------------------------

                    -- Сьогодні на Черкащині сиро, але дощу не передбачається
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4240
                        AND posts_tags.tag_id IN(4,5,6,7,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:25:
--------------------------------

                    -- Сьогодні на Черкащині сиро, але дощу не передбачається
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('передбачається')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4240
                        AND posts_tags.tag_id IN(4,5,6,7,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3586 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3586 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3586) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 781 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 781 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (781) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '497f5f4d69dd27a50714d63b78111ff6', '66.249.65.176'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2ce768051fa78a4fd44f57904fed7995', '66.249.65.174'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:30:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1112 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1112 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1112) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1112
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------

                    -- Інфрачервоне випромінювання виявило татуювання на єгипетських муміях
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Інфрачервоне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1112
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------

                    -- Інфрачервоне випромінювання виявило татуювання на єгипетських муміях
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('випромінювання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1112
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------

                    -- Інфрачервоне випромінювання виявило татуювання на єгипетських муміях
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('виявило')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1112
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------

                    -- Інфрачервоне випромінювання виявило татуювання на єгипетських муміях
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('татуювання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1112
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------

                    -- Інфрачервоне випромінювання виявило татуювання на єгипетських муміях
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('єгипетських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1112
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------

                    -- Інфрачервоне випромінювання виявило татуювання на єгипетських муміях
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('муміях')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1112
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 271 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 271 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (271) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 712 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 712 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (712) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 830 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 830 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (830) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 472 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 472 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (472) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1059 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1059 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1059) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bbc73cf92656b27bd1280a5dceee4a98', '66.249.65.148'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:30:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4214 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4214 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4214) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:42:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4214
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:42:
--------------------------------

                    -- Благодійний ярмарок провели у черкаському виші
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Благодійний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4214
                        AND posts_tags.tag_id IN(3,7,10,12,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:43:
--------------------------------

                    -- Благодійний ярмарок провели у черкаському виші
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ярмарок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4214
                        AND posts_tags.tag_id IN(3,7,10,12,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:43:
--------------------------------

                    -- Благодійний ярмарок провели у черкаському виші
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('провели')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4214
                        AND posts_tags.tag_id IN(3,7,10,12,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:43:
--------------------------------

                    -- Благодійний ярмарок провели у черкаському виші
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4214
                        AND posts_tags.tag_id IN(3,7,10,12,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 926 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 926 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (926) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 915 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 915 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (915) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:43:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:43:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8f28fd5ac2a37abe61e215cf2ce4deff', '66.249.65.148'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:30:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4235 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4235 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:30:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4235) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4235
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:51:
--------------------------------

                    -- У Черкасах не розминулися два легковики
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4235
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:52:
--------------------------------

                    -- У Черкасах не розминулися два легковики
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розминулися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4235
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:52:
--------------------------------

                    -- У Черкасах не розминулися два легковики
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('легковики')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4235
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:30:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:30:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:31:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4280 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4280 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4280) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4280
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------

                    -- Цієї ночі два населені пункти на Черкащині залишаться без Інтернету
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('населені')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4280
                        AND posts_tags.tag_id IN(5,6,7,15,19,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------

                    -- Цієї ночі два населені пункти на Черкащині залишаться без Інтернету
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пункти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4280
                        AND posts_tags.tag_id IN(5,6,7,15,19,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------

                    -- Цієї ночі два населені пункти на Черкащині залишаться без Інтернету
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4280
                        AND posts_tags.tag_id IN(5,6,7,15,19,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------

                    -- Цієї ночі два населені пункти на Черкащині залишаться без Інтернету
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('залишаться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4280
                        AND posts_tags.tag_id IN(5,6,7,15,19,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------

                    -- Цієї ночі два населені пункти на Черкащині залишаться без Інтернету
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Інтернету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4280
                        AND posts_tags.tag_id IN(5,6,7,15,19,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 704 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 704 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (704) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 195 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 195 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (195) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2497 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2497 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2497) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:31:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4244 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4244 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4244) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:09:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4244
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:09:
--------------------------------

                    -- У Черкасах відновлюють найстаріший спортивний комплекс
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4244
                        AND posts_tags.tag_id IN(4,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:09:
--------------------------------

                    -- У Черкасах відновлюють найстаріший спортивний комплекс
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відновлюють')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4244
                        AND posts_tags.tag_id IN(4,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:10:
--------------------------------

                    -- У Черкасах відновлюють найстаріший спортивний комплекс
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найстаріший')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4244
                        AND posts_tags.tag_id IN(4,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:10:
--------------------------------

                    -- У Черкасах відновлюють найстаріший спортивний комплекс
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('спортивний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4244
                        AND posts_tags.tag_id IN(4,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:10:
--------------------------------

                    -- У Черкасах відновлюють найстаріший спортивний комплекс
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('комплекс')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4244
                        AND posts_tags.tag_id IN(4,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:31:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:31:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4242 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4242 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4242) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4242
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:18:
--------------------------------

                    -- У Черкасах демонстрували роботу наземних пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4242
                        AND posts_tags.tag_id IN(4,5,6,7,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:18:
--------------------------------

                    -- У Черкасах демонстрували роботу наземних пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('демонстрували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4242
                        AND posts_tags.tag_id IN(4,5,6,7,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:18:
--------------------------------

                    -- У Черкасах демонстрували роботу наземних пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('роботу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4242
                        AND posts_tags.tag_id IN(4,5,6,7,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:19:
--------------------------------

                    -- У Черкасах демонстрували роботу наземних пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('наземних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4242
                        AND posts_tags.tag_id IN(4,5,6,7,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:19:
--------------------------------

                    -- У Черкасах демонстрували роботу наземних пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пожежних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4242
                        AND posts_tags.tag_id IN(4,5,6,7,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:19:
--------------------------------

                    -- У Черкасах демонстрували роботу наземних пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гідрантів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4242
                        AND posts_tags.tag_id IN(4,5,6,7,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:31:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2ce768051fa78a4fd44f57904fed7995', '66.249.65.174'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:31:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4291 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4291 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4291) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:27:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4291
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:27:
--------------------------------

                    -- У Звенигородці вночі згоріла автівка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Звенигородці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4291
                        AND posts_tags.tag_id IN(4,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:27:
--------------------------------

                    -- У Звенигородці вночі згоріла автівка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('згоріла')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4291
                        AND posts_tags.tag_id IN(4,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:28:
--------------------------------

                    -- У Звенигородці вночі згоріла автівка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автівка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4291
                        AND posts_tags.tag_id IN(4,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2883 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2883 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2883) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2607 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2607 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2607) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3009 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3009 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1543 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1543 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1543) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2220 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2220 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2220) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:28:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:31:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4275 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4275 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4275) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:36:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4275
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:36:
--------------------------------

                    -- Шоумен із Умані озвучив мультфільм про відому українську художницю
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Шоумен')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4275
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:36:
--------------------------------

                    -- Шоумен із Умані озвучив мультфільм про відому українську художницю
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('озвучив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4275
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------

                    -- Шоумен із Умані озвучив мультфільм про відому українську художницю
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мультфільм')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4275
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------

                    -- Шоумен із Умані озвучив мультфільм про відому українську художницю
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4275
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------

                    -- Шоумен із Умані озвучив мультфільм про відому українську художницю
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('українську')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4275
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------

                    -- Шоумен із Умані озвучив мультфільм про відому українську художницю
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('художницю')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4275
                        AND posts_tags.tag_id IN(5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 815 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 815 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (815) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1165 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1165 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1165) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3438 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3438 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3438) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2252 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2252 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2252) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2857 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2857 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2857) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:31:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1104 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1104 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1104) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1104
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:43:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Українські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:44:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('почали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:44:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тестування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:44:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мобільного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:44:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('додатка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bbc73cf92656b27bd1280a5dceee4a98', '66.249.65.148'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:31:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4278 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4278 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4278) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:45:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4278
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:45:
--------------------------------

                    -- На Черкащині затримали двох чоловіків, що роз’їжджали містом “під наркотиками”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4278
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:45:
--------------------------------

                    -- На Черкащині затримали двох чоловіків, що роз’їжджали містом “під наркотиками”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4278
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------

                    -- На Черкащині затримали двох чоловіків, що роз’їжджали містом “під наркотиками”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловіків,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4278
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------

                    -- На Черкащині затримали двох чоловіків, що роз’їжджали містом “під наркотиками”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('роз’їжджали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4278
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------

                    -- На Черкащині затримали двох чоловіків, що роз’їжджали містом “під наркотиками”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('містом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4278
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------

                    -- На Черкащині затримали двох чоловіків, що роз’їжджали містом “під наркотиками”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('наркотиками”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4278
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2450 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2450 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2450) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2037 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2037 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2037) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1899 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1899 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1899) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:31:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4258 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4258 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4258) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4258
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------

                    -- Депутата Уманської міської ради притягнуто до адміністративної відповідальності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Депутата')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4258
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------

                    -- Депутата Уманської міської ради притягнуто до адміністративної відповідальності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманської')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4258
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------

                    -- Депутата Уманської міської ради притягнуто до адміністративної відповідальності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('міської')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4258
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------

                    -- Депутата Уманської міської ради притягнуто до адміністративної відповідальності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('притягнуто')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4258
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------

                    -- Депутата Уманської міської ради притягнуто до адміністративної відповідальності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('адміністративної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4258
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------

                    -- Депутата Уманської міської ради притягнуто до адміністративної відповідальності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відповідальності')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4258
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3843 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3843 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3843) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3682 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3682 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3682) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3678 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3678 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3678) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4091 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4091 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4091) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3038 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3038 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:31:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3038) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:31:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:31:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:32:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8f28fd5ac2a37abe61e215cf2ce4deff', '66.249.65.148'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4234 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4234 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4234) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:03:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4234
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:04:
--------------------------------

                    -- Рідкісну ікону можна буде побачити у черкаському музеї
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Рідкісну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4234
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:04:
--------------------------------

                    -- Рідкісну ікону можна буде побачити у черкаському музеї
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('побачити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4234
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:04:
--------------------------------

                    -- Рідкісну ікону можна буде побачити у черкаському музеї
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4234
                        AND posts_tags.tag_id IN(5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 281 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:32:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4231 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4231 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4231) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:12:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4231
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:12:
--------------------------------

                    -- Танцюристи з Черкас здобули 15 кубків чемпіонату світу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Танцюристи')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4231
                        AND posts_tags.tag_id IN(3,4,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:12:
--------------------------------

                    -- Танцюристи з Черкас здобули 15 кубків чемпіонату світу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4231
                        AND posts_tags.tag_id IN(3,4,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:12:
--------------------------------

                    -- Танцюристи з Черкас здобули 15 кубків чемпіонату світу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('здобули')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4231
                        AND posts_tags.tag_id IN(3,4,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:12:
--------------------------------

                    -- Танцюристи з Черкас здобули 15 кубків чемпіонату світу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кубків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4231
                        AND posts_tags.tag_id IN(3,4,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:12:
--------------------------------

                    -- Танцюристи з Черкас здобули 15 кубків чемпіонату світу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чемпіонату')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4231
                        AND posts_tags.tag_id IN(3,4,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4293 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4293 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4293) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4293
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:21:
--------------------------------

                    -- У Дніпро біля Черкас злили невідому речовину: є результати досліджень води
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Дніпро')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4293
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:21:
--------------------------------

                    -- У Дніпро біля Черкас злили невідому речовину: є результати досліджень води
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4293
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:21:
--------------------------------

                    -- У Дніпро біля Черкас злили невідому речовину: є результати досліджень води
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('невідому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4293
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:22:
--------------------------------

                    -- У Дніпро біля Черкас злили невідому речовину: є результати досліджень води
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('речовину:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4293
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:22:
--------------------------------

                    -- У Дніпро біля Черкас злили невідому речовину: є результати досліджень води
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('результати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4293
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:22:
--------------------------------

                    -- У Дніпро біля Черкас злили невідому речовину: є результати досліджень води
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('досліджень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4293
                        AND posts_tags.tag_id IN(4,6,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:32:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:32:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4266 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:30:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4266
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:30:
--------------------------------

                    -- У Черкасах продемонстрували роботу нових пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4266
                        AND posts_tags.tag_id IN(4,5,6,7,8,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:30:
--------------------------------

                    -- У Черкасах продемонстрували роботу нових пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('продемонстрували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4266
                        AND posts_tags.tag_id IN(4,5,6,7,8,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:30:
--------------------------------

                    -- У Черкасах продемонстрували роботу нових пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('роботу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4266
                        AND posts_tags.tag_id IN(4,5,6,7,8,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:30:
--------------------------------

                    -- У Черкасах продемонстрували роботу нових пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пожежних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4266
                        AND posts_tags.tag_id IN(4,5,6,7,8,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:30:
--------------------------------

                    -- У Черкасах продемонстрували роботу нових пожежних гідрантів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гідрантів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4266
                        AND posts_tags.tag_id IN(4,5,6,7,8,11,23,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4289 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4289 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4289) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4289
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:39:
--------------------------------

                    -- Черкаських аграріїв внесуть в єдиний онлайн-реєстр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4289
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:39:
--------------------------------

                    -- Черкаських аграріїв внесуть в єдиний онлайн-реєстр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('аграріїв')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4289
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:39:
--------------------------------

                    -- Черкаських аграріїв внесуть в єдиний онлайн-реєстр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('внесуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4289
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:39:
--------------------------------

                    -- Черкаських аграріїв внесуть в єдиний онлайн-реєстр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('єдиний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4289
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:39:
--------------------------------

                    -- Черкаських аграріїв внесуть в єдиний онлайн-реєстр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('онлайн-реєстр')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4289
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4247 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4247 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4247) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:48:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4247
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:48:
--------------------------------

                    -- У Черкасах зіштовхнулися два легковика.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4247
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:48:
--------------------------------

                    -- У Черкасах зіштовхнулися два легковика.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зіштовхнулися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4247
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:48:
--------------------------------

                    -- У Черкасах зіштовхнулися два легковика.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('легковика.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4247
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4269 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4269 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4269) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4269
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:57:
--------------------------------

                    -- У Черкасах вимагачі відібрали в чоловіка машину
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4269
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:57:
--------------------------------

                    -- У Черкасах вимагачі відібрали в чоловіка машину
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вимагачі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4269
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:57:
--------------------------------

                    -- У Черкасах вимагачі відібрали в чоловіка машину
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відібрали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4269
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:57:
--------------------------------

                    -- У Черкасах вимагачі відібрали в чоловіка машину
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловіка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4269
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:57:
--------------------------------

                    -- У Черкасах вимагачі відібрали в чоловіка машину
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('машину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4269
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:32:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:32:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4226 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4226 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4226) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:06:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4226
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:06:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:06:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('спортсменка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:06:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('складі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:06:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('національної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:06:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('збірної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:06:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('команди')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:07:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:07:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('візьме')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:07:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('участь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:07:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('міжнародному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:07:
--------------------------------

                    -- Черкаська спортсменка у складі національної збірної команди України візьме участь у міжнародному турнірі з боксу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('турнірі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4226
                        AND posts_tags.tag_id IN(5,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:33:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4267 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4267 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4267) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4267
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:15:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших за всі роки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Цьогорічний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4267
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:15:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших за всі роки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грудень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4267
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:15:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших за всі роки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4267
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:15:
--------------------------------

                    -- Цьогорічний грудень на Черкащині може стати одним із найтепліших за всі роки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найтепліших')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4267
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:33:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2bb0623b98d143afc0f4a5df9542f533', '66.249.65.150'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:33:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4239 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4239 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4239
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:24:
--------------------------------

                    -- Депутат Уманської міськради порушив закон «Про запобігання корупції»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Депутат')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4239
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:24:
--------------------------------

                    -- Депутат Уманської міськради порушив закон «Про запобігання корупції»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманської')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4239
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:24:
--------------------------------

                    -- Депутат Уманської міськради порушив закон «Про запобігання корупції»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('міськради')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4239
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:24:
--------------------------------

                    -- Депутат Уманської міськради порушив закон «Про запобігання корупції»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('порушив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4239
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:25:
--------------------------------

                    -- Депутат Уманської міськради порушив закон «Про запобігання корупції»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('запобігання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4239
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:25:
--------------------------------

                    -- Депутат Уманської міськради порушив закон «Про запобігання корупції»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('корупції»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4239
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 515 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 515 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (515) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3695 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3695 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3695) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4072 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4072 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4072) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:33:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4253 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4253 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4253) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:32:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4253
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------

                    -- Уже відсидів за вбивство: що відомо про чоловіка, якого затримали за напад з молотком на водія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відсидів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4253
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------

                    -- Уже відсидів за вбивство: що відомо про чоловіка, якого затримали за напад з молотком на водія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вбивство:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4253
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------

                    -- Уже відсидів за вбивство: що відомо про чоловіка, якого затримали за напад з молотком на водія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відомо')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4253
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------

                    -- Уже відсидів за вбивство: що відомо про чоловіка, якого затримали за напад з молотком на водія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чоловіка,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4253
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------

                    -- Уже відсидів за вбивство: що відомо про чоловіка, якого затримали за напад з молотком на водія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4253
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------

                    -- Уже відсидів за вбивство: що відомо про чоловіка, якого затримали за напад з молотком на водія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('молотком')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4253
                        AND posts_tags.tag_id IN(4,5,6,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2271 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2271 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2271) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 887 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 887 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (887) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3634 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3634 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3634) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:33:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4213 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4213 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4213) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4213
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

                    -- Знаменита журналістка презентувала іменитий ювелірний бренд в сукні черкаської майстрині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Знаменита')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4213
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

                    -- Знаменита журналістка презентувала іменитий ювелірний бренд в сукні черкаської майстрині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('журналістка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4213
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

                    -- Знаменита журналістка презентувала іменитий ювелірний бренд в сукні черкаської майстрині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('презентувала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4213
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

                    -- Знаменита журналістка презентувала іменитий ювелірний бренд в сукні черкаської майстрині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('іменитий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4213
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

                    -- Знаменита журналістка презентувала іменитий ювелірний бренд в сукні черкаської майстрині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ювелірний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4213
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

                    -- Знаменита журналістка презентувала іменитий ювелірний бренд в сукні черкаської майстрині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаської')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4213
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------

                    -- Знаменита журналістка презентувала іменитий ювелірний бренд в сукні черкаської майстрині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('майстрині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4213
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 142 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 142 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (142) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 143 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 143 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (143) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4186 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4186 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4186) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 279 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 279 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (279) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:33:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4279 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4279 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4279) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:50:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4279
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:51:
--------------------------------

                    -- У Черкасах водія лімузину побили молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4279
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:51:
--------------------------------

                    -- У Черкасах водія лімузину побили молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лімузину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4279
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:51:
--------------------------------

                    -- У Черкасах водія лімузину побили молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('побили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4279
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:51:
--------------------------------

                    -- У Черкасах водія лімузину побили молотком
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('молотком')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4279
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3999 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3999 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3999) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:33:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:33:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4251 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4251 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:33:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4251) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:59:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4251
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:33:59:
--------------------------------

                    -- Золотоноша та Зорівська громада співпрацюватимуть у освітньо-культурній сфері
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Золотоноша')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4251
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------

                    -- Золотоноша та Зорівська громада співпрацюватимуть у освітньо-культурній сфері
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Зорівська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4251
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------

                    -- Золотоноша та Зорівська громада співпрацюватимуть у освітньо-культурній сфері
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('громада')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4251
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------

                    -- Золотоноша та Зорівська громада співпрацюватимуть у освітньо-культурній сфері
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('співпрацюватимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4251
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------

                    -- Золотоноша та Зорівська громада співпрацюватимуть у освітньо-культурній сфері
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('освітньо-культурній')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4251
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1157 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1157 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1157) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4016 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4016 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4016) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3146 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3146 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3146) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2730 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2730 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2730) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4101 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4101 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4101) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:34:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4290 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4290 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4290) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:08:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4290
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:08:
--------------------------------

                    -- Труднощі ОТГізації: Дубіївка просить її не ігнорувати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Труднощі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4290
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11,13,15,19,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------

                    -- Труднощі ОТГізації: Дубіївка просить її не ігнорувати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ОТГізації:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4290
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11,13,15,19,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------

                    -- Труднощі ОТГізації: Дубіївка просить її не ігнорувати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Дубіївка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4290
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11,13,15,19,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------

                    -- Труднощі ОТГізації: Дубіївка просить її не ігнорувати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('просить')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4290
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11,13,15,19,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------

                    -- Труднощі ОТГізації: Дубіївка просить її не ігнорувати
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ігнорувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4290
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,11,13,15,19,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1368 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1368 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1368) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3815 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3815 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3815) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 819 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 819 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (819) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2976 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2976 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2976) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2441 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2441 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2441) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:09:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:34:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:34:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:34:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4225 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4225 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4225) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:17:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4225
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:17:
--------------------------------

                    -- Воронов: передумов для карантину у школах немає
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Воронов:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4225
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------

                    -- Воронов: передумов для карантину у школах немає
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('передумов')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4225
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------

                    -- Воронов: передумов для карантину у школах немає
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('карантину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4225
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------

                    -- Воронов: передумов для карантину у школах немає
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('школах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4225
                        AND posts_tags.tag_id IN(3,5,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3035 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3035 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3035) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2322 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2322 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2322) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2331 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2331 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2331) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 808 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 808 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (808) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 945 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 945 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (945) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:34:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:34:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:34:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4287 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4287 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4287) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4287
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:26:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грудня')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:26:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('проводився')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('турнір')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('присвячений')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Миколая')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Новорічно-різдвяним')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('святам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«Миколай')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('збирає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------

                    -- 14-15 грудня в м. Шпола проводився турнір , присвячений Дню св.. Миколая та Новорічно-різдвяним святам «Миколай збирає друзів».
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('друзів».')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4287
                        AND posts_tags.tag_id IN(3,6,10)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3487 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3487 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3487) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3814 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3814 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3814) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2985 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2985 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2985) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1952 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1952 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1952) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:34:28:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:34:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:34:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4313 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4313 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4313) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:35:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4313
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:35:
--------------------------------

                    -- Прес-релізи – основне джерело новин для черкаських онлайн-медіа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Прес-релізи')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4313
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:35:
--------------------------------

                    -- Прес-релізи – основне джерело новин для черкаських онлайн-медіа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('основне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4313
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:35:
--------------------------------

                    -- Прес-релізи – основне джерело новин для черкаських онлайн-медіа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('джерело')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4313
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:36:
--------------------------------

                    -- Прес-релізи – основне джерело новин для черкаських онлайн-медіа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4313
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:36:
--------------------------------

                    -- Прес-релізи – основне джерело новин для черкаських онлайн-медіа
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('онлайн-медіа')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4313
                        AND posts_tags.tag_id IN(3,4,5,6,8,9,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:36:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:34:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1092 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1092 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1092) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1092
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:38:
--------------------------------

                    -- Штучний інтелект завершить десяту симфонію Бетховена
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Штучний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1092
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:38:
--------------------------------

                    -- Штучний інтелект завершить десяту симфонію Бетховена
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('інтелект')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1092
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:38:
--------------------------------

                    -- Штучний інтелект завершить десяту симфонію Бетховена
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('завершить')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1092
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:38:
--------------------------------

                    -- Штучний інтелект завершить десяту симфонію Бетховена
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('десяту')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1092
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:38:
--------------------------------

                    -- Штучний інтелект завершить десяту симфонію Бетховена
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('симфонію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1092
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:39:
--------------------------------

                    -- Штучний інтелект завершить десяту симфонію Бетховена
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Бетховена')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1092
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 774 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 774 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (774) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 478 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 478 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (478) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 933 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 933 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (933) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 197 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 197 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (197) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 696 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 696 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (696) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8f28fd5ac2a37abe61e215cf2ce4deff', '66.249.65.148'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1113 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1113 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1113) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1113
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------

                    -- На Одещині викрили зловмисника, який зламував Instagram-акаунти
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Одещині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1113
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------

                    -- На Одещині викрили зловмисника, який зламував Instagram-акаунти
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('викрили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1113
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------

                    -- На Одещині викрили зловмисника, який зламував Instagram-акаунти
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зловмисника,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1113
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------

                    -- На Одещині викрили зловмисника, який зламував Instagram-акаунти
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зламував')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1113
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------

                    -- На Одещині викрили зловмисника, який зламував Instagram-акаунти
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Instagram-акаунти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1113
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 38 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 38 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (38) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 972 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 972 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (972) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1125 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1125 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1125) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 96 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 96 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (96) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 77 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 77 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (77) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2d2e8e6ab88742154eade31e44c21e75', '66.249.65.150'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:34:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4228 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4228 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4228) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4228
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:44:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Гарячий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:44:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“таксі”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:44:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('санях:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:45:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('боролися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:45:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зимовою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:45:
--------------------------------

                    -- Гарячий сніг і “таксі” на санях: як боролися з зимовою негодою 100 років тому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('негодою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4228
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,18,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 33 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 33 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (33) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:34:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4223 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:53:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4223 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:34:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4223) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:53:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4223
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:53:
--------------------------------

                    -- “Слуга народу” назвав черкаського депутата “хлопчиком”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Слуга')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4223
                        AND posts_tags.tag_id IN(5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:53:
--------------------------------

                    -- “Слуга народу” назвав черкаського депутата “хлопчиком”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('народу”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4223
                        AND posts_tags.tag_id IN(5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:53:
--------------------------------

                    -- “Слуга народу” назвав черкаського депутата “хлопчиком”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('назвав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4223
                        AND posts_tags.tag_id IN(5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:53:
--------------------------------

                    -- “Слуга народу” назвав черкаського депутата “хлопчиком”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4223
                        AND posts_tags.tag_id IN(5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:54:
--------------------------------

                    -- “Слуга народу” назвав черкаського депутата “хлопчиком”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('депутата')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4223
                        AND posts_tags.tag_id IN(5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:54:
--------------------------------

                    -- “Слуга народу” назвав черкаського депутата “хлопчиком”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“хлопчиком”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4223
                        AND posts_tags.tag_id IN(5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:34:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4273 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4273 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4273) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4273
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:02:
--------------------------------

                    -- Стало відомо, на які небезпечні інфекційні захворювання хворіли черкащани протягом року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відомо,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4273
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:02:
--------------------------------

                    -- Стало відомо, на які небезпечні інфекційні захворювання хворіли черкащани протягом року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('небезпечні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4273
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:03:
--------------------------------

                    -- Стало відомо, на які небезпечні інфекційні захворювання хворіли черкащани протягом року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('інфекційні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4273
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:03:
--------------------------------

                    -- Стало відомо, на які небезпечні інфекційні захворювання хворіли черкащани протягом року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('захворювання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4273
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:03:
--------------------------------

                    -- Стало відомо, на які небезпечні інфекційні захворювання хворіли черкащани протягом року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('хворіли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4273
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:03:
--------------------------------

                    -- Стало відомо, на які небезпечні інфекційні захворювання хворіли черкащани протягом року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4273
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:03:
--------------------------------

                    -- Стало відомо, на які небезпечні інфекційні захворювання хворіли черкащани протягом року
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('протягом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4273
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4233 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4233 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4233) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4233
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:12:
--------------------------------

                    -- На Черкащині продукти подешевшали, а компослуги подорожчали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4233
                        AND posts_tags.tag_id IN(5,7,9,10,12,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:12:
--------------------------------

                    -- На Черкащині продукти подешевшали, а компослуги подорожчали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('продукти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4233
                        AND posts_tags.tag_id IN(5,7,9,10,12,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:12:
--------------------------------

                    -- На Черкащині продукти подешевшали, а компослуги подорожчали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('подешевшали,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4233
                        AND posts_tags.tag_id IN(5,7,9,10,12,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:12:
--------------------------------

                    -- На Черкащині продукти подешевшали, а компослуги подорожчали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('компослуги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4233
                        AND posts_tags.tag_id IN(5,7,9,10,12,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:13:
--------------------------------

                    -- На Черкащині продукти подешевшали, а компослуги подорожчали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('подорожчали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4233
                        AND posts_tags.tag_id IN(5,7,9,10,12,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4271 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4271 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4271) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4267 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4267 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4267) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4261 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4261 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4261) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4261
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:15:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:15:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('увійшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:15:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тренерського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:15:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('комітету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:15:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Національної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:16:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Федерації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:16:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Бодібілдігу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:16:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Фітнесу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:16:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts_tags.tag_id IN(4,5,6,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4294 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4294 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4294) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4294
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------

                    -- На Черкащині затримали водія та пасажира в стані наркотичного сп’яніння
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4294
                        AND posts_tags.tag_id IN(5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------

                    -- На Черкащині затримали водія та пасажира в стані наркотичного сп’яніння
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4294
                        AND posts_tags.tag_id IN(5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------

                    -- На Черкащині затримали водія та пасажира в стані наркотичного сп’яніння
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пасажира')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4294
                        AND posts_tags.tag_id IN(5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------

                    -- На Черкащині затримали водія та пасажира в стані наркотичного сп’яніння
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('наркотичного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4294
                        AND posts_tags.tag_id IN(5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------

                    -- На Черкащині затримали водія та пасажира в стані наркотичного сп’яніння
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сп’яніння')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4294
                        AND posts_tags.tag_id IN(5,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1153 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1153 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1153) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1225 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1225 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1225) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1140 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1140 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1140) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1000 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1000 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1000) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4254 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4254 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4254) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4254
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:29:
--------------------------------

                    -- На Черкащині вщент згорів будинок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4254
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:29:
--------------------------------

                    -- На Черкащині вщент згорів будинок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('згорів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4254
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:29:
--------------------------------

                    -- На Черкащині вщент згорів будинок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('будинок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4254
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a7ea22848eeb80a3c7d3c6cd9d1332b6', '66.249.65.174'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4308 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4308 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4308) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4308
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:39:
--------------------------------

                    -- В Монастирищі затримали квартирних крадіїв з Винниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Монастирищі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4308
                        AND posts_tags.tag_id IN(5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:39:
--------------------------------

                    -- В Монастирищі затримали квартирних крадіїв з Винниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4308
                        AND posts_tags.tag_id IN(5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:39:
--------------------------------

                    -- В Монастирищі затримали квартирних крадіїв з Винниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('квартирних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4308
                        AND posts_tags.tag_id IN(5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:39:
--------------------------------

                    -- В Монастирищі затримали квартирних крадіїв з Винниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('крадіїв')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4308
                        AND posts_tags.tag_id IN(5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:39:
--------------------------------

                    -- В Монастирищі затримали квартирних крадіїв з Винниччини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Винниччини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4308
                        AND posts_tags.tag_id IN(5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 232 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 232 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (232) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4306 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4306 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4306) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:47:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4306
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------

                    -- Цьогорічний грудень може стати найтеплішим за всю історію метеоспостережень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Цьогорічний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4306
                        AND posts_tags.tag_id IN(4,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------

                    -- Цьогорічний грудень може стати найтеплішим за всю історію метеоспостережень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грудень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4306
                        AND posts_tags.tag_id IN(4,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------

                    -- Цьогорічний грудень може стати найтеплішим за всю історію метеоспостережень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найтеплішим')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4306
                        AND posts_tags.tag_id IN(4,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------

                    -- Цьогорічний грудень може стати найтеплішим за всю історію метеоспостережень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('історію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4306
                        AND posts_tags.tag_id IN(4,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------

                    -- Цьогорічний грудень може стати найтеплішим за всю історію метеоспостережень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('метеоспостережень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4306
                        AND posts_tags.tag_id IN(4,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 629 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 629 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (629) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3982 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3982 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3982) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4147 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4147 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4147) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 685 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 685 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (685) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4326 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4326 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4326) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:35:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8f28fd5ac2a37abe61e215cf2ce4deff', '66.249.65.148'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4217 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4217 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:35:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4217) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4217
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------

                    -- Чоловіка, який у середмісті Черкас побив людину молотком, затримали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чоловіка,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4217
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------

                    -- Чоловіка, який у середмісті Черкас побив людину молотком, затримали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('середмісті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4217
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------

                    -- Чоловіка, який у середмісті Черкас побив людину молотком, затримали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4217
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------

                    -- Чоловіка, який у середмісті Черкас побив людину молотком, затримали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('людину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4217
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------

                    -- Чоловіка, який у середмісті Черкас побив людину молотком, затримали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('молотком,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4217
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------

                    -- Чоловіка, який у середмісті Черкас побив людину молотком, затримали
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4217
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:35:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:35:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4246 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4246 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4246) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:06:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4246
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:06:
--------------------------------

                    -- До +15: синоптики розповіли, чого в найближчі дні чекати від погоди
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('синоптики')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4246
                        AND posts_tags.tag_id IN(5,7,11,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------

                    -- До +15: синоптики розповіли, чого в найближчі дні чекати від погоди
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4246
                        AND posts_tags.tag_id IN(5,7,11,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------

                    -- До +15: синоптики розповіли, чого в найближчі дні чекати від погоди
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найближчі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4246
                        AND posts_tags.tag_id IN(5,7,11,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------

                    -- До +15: синоптики розповіли, чого в найближчі дні чекати від погоди
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чекати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4246
                        AND posts_tags.tag_id IN(5,7,11,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------

                    -- До +15: синоптики розповіли, чого в найближчі дні чекати від погоди
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('погоди')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4246
                        AND posts_tags.tag_id IN(5,7,11,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4362 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 4362 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4362) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2360 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2360 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2360) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3464 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3464 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3464) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1097 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1097 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1097) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3801 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3801 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:36:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3801) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:36:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:36:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:09:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:11:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b82e9cbcca384a4b83bcdc90fe156d8a', '66.249.65.172'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:36:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:36:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:37:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:37:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2bb0623b98d143afc0f4a5df9542f533', '66.249.65.150'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:37:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:37:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2ce768051fa78a4fd44f57904fed7995', '66.249.65.174'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:37:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:37:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4371 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:37:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:37:58:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4371
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:37:59:
--------------------------------

                    -- У Черкасах перша пересадка кісткового мозку завершилася успішно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4371
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:37:59:
--------------------------------

                    -- У Черкасах перша пересадка кісткового мозку завершилася успішно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пересадка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4371
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:37:59:
--------------------------------

                    -- У Черкасах перша пересадка кісткового мозку завершилася успішно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кісткового')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4371
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:37:59:
--------------------------------

                    -- У Черкасах перша пересадка кісткового мозку завершилася успішно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('завершилася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4371
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:37:59:
--------------------------------

                    -- У Черкасах перша пересадка кісткового мозку завершилася успішно
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('успішно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4371
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:37:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2ce768051fa78a4fd44f57904fed7995', '66.249.65.174'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:09:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:38:33:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1104
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:38:33:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Українські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:38:33:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('почали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:38:33:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тестування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:38:33:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мобільного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:38:33:
--------------------------------

                    -- Українські водії почали тестування мобільного додатка Дія
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('додатка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1104
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:38:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'efad7981a1534c3b8a89dec9cb356a18', '66.249.65.146'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:38:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:11:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4392 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4392 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4392) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:16:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4392
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:16:
--------------------------------

                    -- На Черкащині браконьєр нарибалив майже на 85 тисяч грн
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4392
                        AND posts_tags.tag_id IN(4,5,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:17:
--------------------------------

                    -- На Черкащині браконьєр нарибалив майже на 85 тисяч грн
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('браконьєр')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4392
                        AND posts_tags.tag_id IN(4,5,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:17:
--------------------------------

                    -- На Черкащині браконьєр нарибалив майже на 85 тисяч грн
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нарибалив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4392
                        AND posts_tags.tag_id IN(4,5,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3692 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3692 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3692) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2463 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2463 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2463) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 598 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 598 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (598) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:17:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '810c799b39df967c881051ce4d95bdac', '66.249.65.176'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 946 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 946 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (946) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 946
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------

                    -- На Черкащині вже відзначили День працівника культури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 946
                        AND posts_tags.tag_id IN(3,4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------

                    -- На Черкащині вже відзначили День працівника культури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відзначили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 946
                        AND posts_tags.tag_id IN(3,4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------

                    -- На Черкащині вже відзначили День працівника культури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('працівника')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 946
                        AND posts_tags.tag_id IN(3,4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------

                    -- На Черкащині вже відзначили День працівника культури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('культури')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 946
                        AND posts_tags.tag_id IN(3,4,5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1706 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1706 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1706) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 965 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 965 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (965) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1327 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1327 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1327) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1098 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1098 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1098) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1098
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------

                    -- Samsung Galaxy Note10 Lite підтримуватиме нову функцію S Pen
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Samsung')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1098
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------

                    -- Samsung Galaxy Note10 Lite підтримуватиме нову функцію S Pen
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Galaxy')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1098
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------

                    -- Samsung Galaxy Note10 Lite підтримуватиме нову функцію S Pen
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Note10')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1098
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------

                    -- Samsung Galaxy Note10 Lite підтримуватиме нову функцію S Pen
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('підтримуватиме')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1098
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------

                    -- Samsung Galaxy Note10 Lite підтримуватиме нову функцію S Pen
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('функцію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1098
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1023 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1023 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1023) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1010 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1010 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1010) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1056 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1056 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1056) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 766 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 766 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (766) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8f28fd5ac2a37abe61e215cf2ce4deff', '66.249.65.148'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4319 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4319 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4319) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4319
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:53:
--------------------------------

                    -- Учасники IT Kids побачили життя черкаських айтішників зсередини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Учасники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4319
                        AND posts_tags.tag_id IN(4,5,6,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:53:
--------------------------------

                    -- Учасники IT Kids побачили життя черкаських айтішників зсередини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('побачили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4319
                        AND posts_tags.tag_id IN(4,5,6,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:53:
--------------------------------

                    -- Учасники IT Kids побачили життя черкаських айтішників зсередини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4319
                        AND posts_tags.tag_id IN(4,5,6,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:53:
--------------------------------

                    -- Учасники IT Kids побачили життя черкаських айтішників зсередини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('айтішників')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4319
                        AND posts_tags.tag_id IN(4,5,6,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:53:
--------------------------------

                    -- Учасники IT Kids побачили життя черкаських айтішників зсередини
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зсередини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4319
                        AND posts_tags.tag_id IN(4,5,6,7,10,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 120 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 120 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (120) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 120
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Науковці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розгадали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('останній')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('маршрут')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('5300-річної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('крижаної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('завдяки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------

                    -- Науковці розгадали останній маршрут 5300-річної крижаної мумії завдяки моху (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('(фото)')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 120
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 749 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 749 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (749) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 248 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 248 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (248) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 785 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 785 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (785) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 222 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 222 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (222) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 109 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 109 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:39:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (109) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:39:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bbc73cf92656b27bd1280a5dceee4a98', '66.249.65.148'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4362 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4362 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4362) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4362
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:43:
--------------------------------

                    -- Тумани та дощі: по області утримається тепла погода
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Тумани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4362
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:43:
--------------------------------

                    -- Тумани та дощі: по області утримається тепла погода
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4362
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:43:
--------------------------------

                    -- Тумани та дощі: по області утримається тепла погода
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('утримається')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4362
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:43:
--------------------------------

                    -- Тумани та дощі: по області утримається тепла погода
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('погода')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4362
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2460 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2460 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2460) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2267 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2267 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2267) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 461 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 461 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:40:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (461) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:40:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:40:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2ce768051fa78a4fd44f57904fed7995', '66.249.65.174'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:41:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:41:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1097 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:41:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1097 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:41:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1097) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:12:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1097
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:12:
--------------------------------

                    -- Rowenta презентувала нову серію бездротових пилососів AIR FORCE 360
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Rowenta')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1097
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:12:
--------------------------------

                    -- Rowenta презентувала нову серію бездротових пилососів AIR FORCE 360
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('презентувала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1097
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:12:
--------------------------------

                    -- Rowenta презентувала нову серію бездротових пилососів AIR FORCE 360
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бездротових')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1097
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:12:
--------------------------------

                    -- Rowenta презентувала нову серію бездротових пилососів AIR FORCE 360
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пилососів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1097
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'efad7981a1534c3b8a89dec9cb356a18', '66.249.65.146'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:41:30:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5ecb74d59132e9e64cd8e33cc31ee13e', '66.249.65.173'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:41:30:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:41:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:41:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:41:32:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.18 01:41:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5ecb74d59132e9e64cd8e33cc31ee13e', '66.249.65.173'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:42:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '65d9cf2f8a7a570ed6bc872141461e64', '66.249.65.171'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:42:35:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1111
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:42:35:
--------------------------------

                    -- До нових крісел Hator клавіатура у подарунок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('крісел')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1111
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:42:35:
--------------------------------

                    -- До нових крісел Hator клавіатура у подарунок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('клавіатура')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1111
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:42:35:
--------------------------------

                    -- До нових крісел Hator клавіатура у подарунок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('подарунок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1111
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:42:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2bb0623b98d143afc0f4a5df9542f533', '66.249.65.150'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1100 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 1100 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1100) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1100
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------

                    -- Nokia 2720 отримала дату презентації
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('отримала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1100
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------

                    -- Nokia 2720 отримала дату презентації
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('презентації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1100
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1116 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1116 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1116) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 909 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 909 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (909) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1117 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1117 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1117) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1128 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1128 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1128) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8f28fd5ac2a37abe61e215cf2ce4deff', '66.249.65.148'::inet, '[Bot] Googlebot' );
--------------------------------
2019.12.18 01:44:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4326 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 4326 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:44:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4326) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:36:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 4326
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:36:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Історія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:36:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('одного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:37:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('будинку:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:37:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:37:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поштамт')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:37:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вважався')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:37:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('передових')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:37:
--------------------------------

                    -- Історія одного будинку: черкаський поштамт вважався серед передових в країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('країні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4326
                        AND posts_tags.tag_id IN(3,4,5,6,7,10,11,12,13,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:44:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '65d9cf2f8a7a570ed6bc872141461e64', '66.249.65.171'::inet, 'Chrome' );
--------------------------------
2019.12.18 01:46:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 3 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:46:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id = 3 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 40 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 01:46:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1032,1030,1029,1025,1024,1020,1019,1012,1004,1002) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 01:46:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b30edf373aedebbabd3ea616e865837b', '77.88.47.88'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.18 02:11:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403,4402,4401,4400,4399,4398,4397,4396,4395) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2846eeb0c7740d654c593c59f9e198c5', '34.210.54.142'::inet, 'Other (Unknown)' );
--------------------------------
2019.12.18 02:11:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1138,1137,1136,1135,1134,1133,1132,1131,1130,1129) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4403) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4378,4376) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4394,4393) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4404,4401) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4380,4377) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:53:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:11:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4399,4398) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:11:53:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3873 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3873 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3873) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3873
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

                    -- Черкаські освітяни без тендеру злили 2 мільйони на дезінфекцію, мийні засоби та півтисячі швабр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3873
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

                    -- Черкаські освітяни без тендеру злили 2 мільйони на дезінфекцію, мийні засоби та півтисячі швабр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('освітяни')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3873
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

                    -- Черкаські освітяни без тендеру злили 2 мільйони на дезінфекцію, мийні засоби та півтисячі швабр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тендеру')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3873
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

                    -- Черкаські освітяни без тендеру злили 2 мільйони на дезінфекцію, мийні засоби та півтисячі швабр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мільйони')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3873
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

                    -- Черкаські освітяни без тендеру злили 2 мільйони на дезінфекцію, мийні засоби та півтисячі швабр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дезінфекцію,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3873
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

                    -- Черкаські освітяни без тендеру злили 2 мільйони на дезінфекцію, мийні засоби та півтисячі швабр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('засоби')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3873
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------

                    -- Черкаські освітяни без тендеру злили 2 мільйони на дезінфекцію, мийні засоби та півтисячі швабр
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('півтисячі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3873
                        AND posts_tags.tag_id IN(3,4,5,6,11,13,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3630 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3630 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3630) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3631 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3631 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.18 02:12:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3631) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.18 02:12:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5ecb74d59132e9e64cd8e33cc31ee13e', '66.249.65.173'::inet, 'Chrome' );
--------------------------------
