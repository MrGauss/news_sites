2019.12.09 19:17:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2057 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2057 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2057) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2057
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------

                    -- Мороз і вітер: черкащан попереджають про зміну погодних умов
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вітер:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2057
                        AND posts_tags.tag_id IN(5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------

                    -- Мороз і вітер: черкащан попереджають про зміну погодних умов
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2057
                        AND posts_tags.tag_id IN(5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------

                    -- Мороз і вітер: черкащан попереджають про зміну погодних умов
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('попереджають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2057
                        AND posts_tags.tag_id IN(5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------

                    -- Мороз і вітер: черкащан попереджають про зміну погодних умов
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('погодних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2057
                        AND posts_tags.tag_id IN(5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1208 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1208 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1208) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1313 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1313 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1313) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1993 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 1993 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1993) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3033 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3033 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3033) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2994 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2994 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.09 19:17:25:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:17:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:17:26:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.12.09 19:17:26:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.12.09 19:19:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2744 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 2744 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2744) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:06:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 2744
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:06:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Економія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:06:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('матеріальне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:06:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('оснащення:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('теплий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('листопад')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('приніс')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сюрпризів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('навчальним')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------

                    -- Економія та матеріальне оснащення: теплий листопад приніс ряд сюрпризів навчальним закладам міста
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('закладам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2744
                        AND posts_tags.tag_id IN(3,4,5,6,7,13,15,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3510 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3510 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3510) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 943 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 943 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (943) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 285 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 285 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (285) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2247 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2247 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2247) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3444 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 3444 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3444) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ef598c258dab8e422e5a5aca2656dc3e', '100.43.91.130'::inet, '[Bot] Yandex' );
--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3509 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.id = 3509 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3509) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 3509
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------

                    -- Черкащан запрошують долучитися до флешмобу #ДійПротиНасильства
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3509
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------

                    -- Черкащан запрошують долучитися до флешмобу #ДійПротиНасильства
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('запрошують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3509
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------

                    -- Черкащан запрошують долучитися до флешмобу #ДійПротиНасильства
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('долучитися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3509
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------

                    -- Черкащан запрошують долучитися до флешмобу #ДійПротиНасильства
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('флешмобу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3509
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------

                    -- Черкащан запрошують долучитися до флешмобу #ДійПротиНасильства
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('#ДійПротиНасильства')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3509
                        AND posts_tags.tag_id IN(4,5,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2361 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 2361 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2361) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 823 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.id = 823 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.12.09 19:19:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (823) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.12.09 19:19:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '172440599149d4375d52117fea76336a', '66.249.65.172'::inet, 'Chrome' );
--------------------------------
