2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 16:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-cherkashhyni-rozvyvayut-instytut-pryjomnogo-vyhovannya/%' OR title ='На Черкащині розвивають інститут прийомного виховання' ;
--------------------------------
2019.11.10 16:45:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 16:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 16:53:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 16:54:39:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 16:54:39:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '1630299bfc6cd8696bed4e9aee54ba0e', '1', '2019-11-10_16-53-03_713.png', '2019-11-10 16:54:39', '1');
--------------------------------
2019.11.10 16:55:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 81 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 81 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (81) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:13:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:13:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 81
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:14:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('замість')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:15:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гарбуза,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:16:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('молитви')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:17:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('померлих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:19:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('жебраки:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:20:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:21:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('науковець')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:22:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розказав,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:23:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Halloween')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:25:
--------------------------------

                    -- Ріпа замість гарбуза, молитви до померлих та жебраки: черкаський науковець розказав, яким був Halloween раніше
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('раніше')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 81
                        AND posts_tags.tag_id IN(3,5,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (915) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (926) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 791 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 791 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (791) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 16:55:26:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:55:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:55:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (927,926,925,924,923,922,921,920,919,918,917,916) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:07:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 16:56:07:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 16:56:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 20 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (981,979,978,977,974,973,972,971,970,969) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 16:56:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1008,1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (991,990) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1009,1008) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (995,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007,1005) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 19 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 19 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 16:56:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (833,831,823,803,795,794,791,789,750,747) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 16:56:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 16:56:47:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 16:56:47:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'df2f2e85d3b31a018f155375caf9812e', '1', '2019-11-10_16-54-39_63.png', '2019-11-10 16:56:47', '1');
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 16:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-cherkashhyni-rozvyvayut-instytut-pryjomnogo-vyhovannya/%' OR title ='На Черкащині розвивають інститут прийомного виховання' ;
--------------------------------
2019.11.10 16:58:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 17:03:01:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:03:01:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:03:01:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 17:03:01:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:03:01:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 17:03:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 17:04:38:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-cherkashhyni-rozvyvayut-instytut-pryjomnogo-vyhovannya/%' OR title ='На Черкащині розвивають інститут прийомного виховання' ;
--------------------------------
2019.11.10 17:05:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 17:06:46:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 17:06:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 697 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 697 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (697) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 697
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:01:
--------------------------------

                    -- Черкащину відвідав європейський експерт з питань регіонального розвитку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 697
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:02:
--------------------------------

                    -- Черкащину відвідав європейський експерт з питань регіонального розвитку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відвідав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 697
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:03:
--------------------------------

                    -- Черкащину відвідав європейський експерт з питань регіонального розвитку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('європейський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 697
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:04:
--------------------------------

                    -- Черкащину відвідав європейський експерт з питань регіонального розвитку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('експерт')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 697
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 330 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 330 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (330) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 330
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------

                    -- Sony може випустити мобільну консоль PlayStation
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('випустити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 330
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------

                    -- Черкащину відвідав європейський експерт з питань регіонального розвитку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('питань')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 697
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------

                    -- Sony може випустити мобільну консоль PlayStation
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мобільну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 330
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------

                    -- Sony може випустити мобільну консоль PlayStation
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('консоль')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 330
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------

                    -- Sony може випустити мобільну консоль PlayStation
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('PlayStation')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 330
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 94 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 94 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (94) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 284 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 284 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (284) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 96 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 96 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (96) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 215 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 215 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (215) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 83 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 83 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (83) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '29570445d1945033ec765d236ae46112', '66.249.64.90'::inet, 'Chrome' );
--------------------------------
2019.11.10 17:07:06:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:06:
--------------------------------

                    -- Черкащину відвідав європейський експерт з питань регіонального розвитку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('регіонального')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 697
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:07:
--------------------------------

                    -- Черкащину відвідав європейський експерт з питань регіонального розвитку
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розвитку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 697
                        AND posts_tags.tag_id IN(4,5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 416 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 416 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (416) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 683 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 683 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (683) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 189 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 189 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (189) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 872 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 872 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (872) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 821 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 821 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (821) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '74ececf7cd3c9212e0aae101e502bdc8', '66.249.64.144'::inet, 'Chrome' );
--------------------------------
2019.11.10 17:07:08:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 17:07:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:07:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:07:15:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 17:07:15:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 17:08:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1201 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:08:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1201 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:08:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 17:13:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 17:14:38:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 17:15:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title = 'Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження';
--------------------------------
2019.11.10 17:16:30:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='b486b88f4a5d4e483bb40fd8f3d50b00';
--------------------------------
2019.11.10 17:16:30:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'b486b88f4a5d4e483bb40fd8f3d50b00', '1', '2019-11-10_17-15-03_246.png', '2019-11-10 17:16:30', '1');
--------------------------------
2019.11.10 17:16:30:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження', 'a998f324963d37d174bbab9290754fcc', 'Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження', 'Прокуратурою Черкаської області за результатами розгляду матеріалів обґрунтованого висновку Національного агентства з питань запобігання корупції  (далі НАЗК) 06.11.2019 внесено відомості до ЄРДР за фактом умисного неподання колишнім працівником управління патрульної поліції в місті Черкаси Департаменту патрульної поліції Національної поліції України декларації особи, уповноваженої на виконання функцій держави. Установлено, що інспектор патрульної поліції, будучи звільненим зі служби в органах Національної поліції України, умисно не подав при звільненні з посади декларацію особи, уповноваженої на виконання функцій держави, чим порушив вимоги Закону України «Про запобігання корупції». У подальшому, незважаючи на отримане від НАЗК відповідне повідомлення,  умисно не подав зазначену декларацію у передбачений законодавством строк. Проведення досудового розслідування у вказаному кримінальному провадженні доручено слідчим територіального управління Державного бюро розслідувань, розташованого у м. Києві. Наразі процесуальним керівником прокуратури Черкаської області надано низку вказівок, спрямованих на встановлення фактичних обставин події, вживаються заходи щодо забезпечення прийняття законного й неупередженого процесуального рішення. Довідково: за вчинене кримінальне правопорушення особі загрожує покарання у вигляді штрафу від двох тисяч п’ятисот до трьох тисяч неоподатковуваних мінімумів доходів громадян або громадських робіт на строк від ста п’ятдесяти до двохсот сорока годин, або позбавлення волі на строк до двох років, з позбавленням права обіймати певні посади чи займатися певною діяльністю на строк до трьох років. Повідомляє прес-служба  прокуратури Черкаської області.', '<p class=\"bb_p\">Прокуратурою Черкаської області за результатами розгляду матеріалів обґрунтованого висновку Національного агентства з питань запобігання корупції  (далі НАЗК) 06.11.2019 внесено відомості до ЄРДР за фактом умисного неподання колишнім працівником управління патрульної поліції в місті Черкаси Департаменту патрульної поліції Національної поліції України декларації особи, уповноваженої на виконання функцій держави.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_17-15-03_246.png" alt="" title="" /></p>
<p class=\"bb_p\">Установлено, що інспектор патрульної поліції, будучи звільненим зі служби в органах Національної поліції України, умисно не подав при звільненні з посади декларацію особи, уповноваженої на виконання функцій держави, чим порушив вимоги Закону України «Про запобігання корупції».</p>
<p class=\"bb_p\">У подальшому, незважаючи на отримане від НАЗК відповідне повідомлення,  умисно не подав зазначену декларацію у передбачений законодавством строк.</p>
<p class=\"bb_p\">Проведення досудового розслідування у вказаному кримінальному провадженні доручено слідчим територіального управління Державного бюро розслідувань, розташованого у м. Києві.</p>
<p class=\"bb_p\">Наразі процесуальним керівником прокуратури Черкаської області надано низку вказівок, спрямованих на встановлення фактичних обставин події, вживаються заходи щодо забезпечення прийняття законного й неупередженого процесуального рішення.</p>
<p class=\"bb_p\">Довідково: за вчинене кримінальне правопорушення особі загрожує покарання у вигляді штрафу від двох тисяч п’ятисот до трьох тисяч неоподатковуваних мінімумів доходів громадян або громадських робіт на строк від ста п’ятдесяти до двохсот сорока годин, або позбавлення волі на строк до двох років, з позбавленням права обіймати певні посади чи займатися певною діяльністю на строк до трьох років.</p>
<p class=\"bb_p\">Повідомляє прес-служба  прокуратури Черкаської області.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/" target="_blank">За матеріалами "dzvin.media"</a></p></div>', 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 17:16:30:
--------------------------------
UPDATE images SET post_id=1018 WHERE post_id=0;
--------------------------------
2019.11.10 17:16:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1018 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:16:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1018 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:16:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1018) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:16:31:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1018';
--------------------------------
2019.11.10 17:16:31:
--------------------------------
UPDATE images SET post_id=1018 WHERE md5='b486b88f4a5d4e483bb40fd8f3d50b00' AND post_id=0;
--------------------------------
2019.11.10 17:16:31:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 17:16:47:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 17:17:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 8 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 8 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 70 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (705,704,701,693,679,674,671,666,664,660) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1008,1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (991,990) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1009,1008) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (995,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007,1005) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (928,927,926,925,924,923,922,921,920,919,918,917) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:17:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1267 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1267 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:17:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 17:23:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 17:24:38:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 17:25:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 17:25:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 17:26:46:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 17:29:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 434 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 434 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (434) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:14:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 434
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:14:
--------------------------------

                    -- На Черкащині за допомогою камер спостереження привчають людей не смітити
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 434
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:15:
--------------------------------

                    -- На Черкащині за допомогою камер спостереження привчають людей не смітити
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('допомогою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 434
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:15:
--------------------------------

                    -- На Черкащині за допомогою камер спостереження привчають людей не смітити
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('спостереження')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 434
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:16:
--------------------------------

                    -- На Черкащині за допомогою камер спостереження привчають людей не смітити
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('привчають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 434
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:16:
--------------------------------

                    -- На Черкащині за допомогою камер спостереження привчають людей не смітити
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('смітити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 434
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 371 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 373 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 373 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (373) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 77 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 77 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (77) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 76 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 76 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (76) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 845 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 845 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:29:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (845) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:29:17:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 17:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 17:33:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 17:34:39:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 17:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 17:35:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 17:36:48:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 17:37:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 310 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 310 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (310) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:04:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 310
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:04:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найближчому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('майбутньому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('побудувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('неможливо')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 159 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 159 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (159) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 160 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 160 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (160) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 165 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 165 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (165) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 148 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 148 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (148) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 298 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 298 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (298) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:37:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 80 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (888,887,886,885,884,883,881,880,879,878) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:37:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 181 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 181 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (181) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 181
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:30:
--------------------------------

                    -- Завтра у Черкасах відкриють колесо огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Завтра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 181
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:30:
--------------------------------

                    -- Завтра у Черкасах відкриють колесо огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 181
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:31:
--------------------------------

                    -- Завтра у Черкасах відкриють колесо огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відкриють')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 181
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:31:
--------------------------------

                    -- Завтра у Черкасах відкриють колесо огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('колесо')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 181
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:32:
--------------------------------

                    -- Завтра у Черкасах відкриють колесо огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('огляду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 181
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 131 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 131 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (131) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:37:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 243 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 243 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (243) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:34:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 243
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:35:
--------------------------------

                    -- Перше листопада 1918 року: Інститут нацпам’яті випустив навчальний ролик
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('листопада')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 243
                        AND posts_tags.tag_id IN(3,4,5,7,11,13,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:35:
--------------------------------

                    -- Перше листопада 1918 року: Інститут нацпам’яті випустив навчальний ролик
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Інститут')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 243
                        AND posts_tags.tag_id IN(3,4,5,7,11,13,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:36:
--------------------------------

                    -- Перше листопада 1918 року: Інститут нацпам’яті випустив навчальний ролик
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нацпам’яті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 243
                        AND posts_tags.tag_id IN(3,4,5,7,11,13,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:36:
--------------------------------

                    -- Перше листопада 1918 року: Інститут нацпам’яті випустив навчальний ролик
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('випустив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 243
                        AND posts_tags.tag_id IN(3,4,5,7,11,13,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:37:
--------------------------------

                    -- Перше листопада 1918 року: Інститут нацпам’яті випустив навчальний ролик
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('навчальний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 243
                        AND posts_tags.tag_id IN(3,4,5,7,11,13,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 760 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 760 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (760) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 989 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 989 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (989) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 740 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 740 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (740) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 612 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 612 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (612) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 149 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 149 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:37:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (149) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:37:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 17:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 17:43:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 17:44:39:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 17:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 17:45:04:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 17:46:48:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 17:47:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1232 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:47:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1232 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:47:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:47:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1049 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:47:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1049 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:47:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:51:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 710 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:51:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 710 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:51:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 17:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 17:53:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 17:54:39:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 17:56:47:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 17:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 17:58:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 17:59:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1079 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:59:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1079 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:59:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 17:59:15:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:59:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:59:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 17:59:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:59:41:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 17:59:49:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 18:00:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 874 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 874 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (874) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:06:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 874
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:07:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вересень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:07:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 895 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:08:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('митниця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 895 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (895) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:08:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 895
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:08:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перерахувала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:09:
--------------------------------

                    -- У Черкасах хочуть зробити проїзд по 6 гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 895
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,15,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:09:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('державного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:09:
--------------------------------

                    -- У Черкасах хочуть зробити проїзд по 6 гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('хочуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 895
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,15,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:10:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бюджету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:10:
--------------------------------

                    -- У Черкасах хочуть зробити проїзд по 6 гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зробити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 895
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,15,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:10:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мільйона')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:10:
--------------------------------

                    -- У Черкасах хочуть зробити проїзд по 6 гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('проїзд')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 895
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,15,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гривень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------

                    -- У Черкасах хочуть зробити проїзд по 6 гривень
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гривень')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 895
                        AND posts_tags.tag_id IN(4,5,6,7,8,9,10,11,15,18)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 119 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 119 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (119) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------

                    -- За вересень Черкаська митниця ДФС перерахувала до державного бюджету 218,7 мільйона гривень податків
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('податків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 874
                        AND posts_tags.tag_id IN(4,5,7,11,15,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (915) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (926) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 791 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 791 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:00:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (791) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:00:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '12fd46555653af2f09327f1d8f6d427b', '141.8.144.33'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 18:00:12:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 18:00:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ec13c9b9083f3f587d155cdcc007a674', '66.249.64.139'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 18:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 18:03:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 18:04:45:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 18:05:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 18:07:01:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 18:12:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 681 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:12:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 681 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:12:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (681) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 681
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:45:
--------------------------------

                    -- У черкаському суді почали розгляд позову містян до “Нової Якості”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 681
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:45:
--------------------------------

                    -- У черкаському суді почали розгляд позову містян до “Нової Якості”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('почали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 681
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:46:
--------------------------------

                    -- У черкаському суді почали розгляд позову містян до “Нової Якості”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розгляд')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 681
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:47:
--------------------------------

                    -- У черкаському суді почали розгляд позову містян до “Нової Якості”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('позову')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 681
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:48:
--------------------------------

                    -- У черкаському суді почали розгляд позову містян до “Нової Якості”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('містян')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 681
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:48:
--------------------------------

                    -- У черкаському суді почали розгляд позову містян до “Нової Якості”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Нової')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 681
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:49:
--------------------------------

                    -- У черкаському суді почали розгляд позову містян до “Нової Якості”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Якості”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 681
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 620 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:12:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 620 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:12:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (620) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:12:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ec13c9b9083f3f587d155cdcc007a674', '66.249.64.139'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 18:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 18:13:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 18:14:42:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 18:15:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 18:16:51:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 18:18:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 527 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 527 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 18:18:04:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:09:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:12:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 18:18:12:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 18:18:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 6 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 6 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (871,870,869,868,865,864,863,862,861,857) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 18:18:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1008,1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (991,990) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1009,1008) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (995,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007,1005) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:18:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:18:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (928,927,926,925,924,923,922,921,920,919,918,917) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 18:23:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 18:23:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 323 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 323 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (323) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:55:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 323
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:55:
--------------------------------

                    -- Instagram приховає лайки у ще одній країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Instagram')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 323
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:55:
--------------------------------

                    -- Instagram приховає лайки у ще одній країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('приховає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 323
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:55:
--------------------------------

                    -- Instagram приховає лайки у ще одній країні
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('країні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 323
                        AND posts_tags.tag_id IN(14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (328) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 83 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 83 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (83) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 103 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 103 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (103) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 108 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 108 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (108) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 230 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 230 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:23:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (230) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:23:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b67872b6718a11247f82dced738e8954', '66.249.64.82'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:24:42:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 18:25:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 18:26:59:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 18:29:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 625 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 625 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (625) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 625
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:39:
--------------------------------

                    -- Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Уманські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 625
                        AND posts_tags.tag_id IN(3,6,7,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:40:
--------------------------------

                    -- Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вчителі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 625
                        AND posts_tags.tag_id IN(3,6,7,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:41:
--------------------------------

                    -- Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пройшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 625
                        AND posts_tags.tag_id IN(3,6,7,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:42:
--------------------------------

                    -- Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тренінг')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 625
                        AND posts_tags.tag_id IN(3,6,7,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:43:
--------------------------------

                    -- Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('роботи')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 625
                        AND posts_tags.tag_id IN(3,6,7,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:44:
--------------------------------

                    -- Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('особливими')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 625
                        AND posts_tags.tag_id IN(3,6,7,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:45:
--------------------------------

                    -- Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дітьми')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 625
                        AND posts_tags.tag_id IN(3,6,7,10,12,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 235 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 235 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (235) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 726 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 726 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (726) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 220 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 220 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (220) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 227 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 227 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (227) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 719 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 719 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:29:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (719) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:29:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ec13c9b9083f3f587d155cdcc007a674', '66.249.64.139'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 18:33:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 18:34:44:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 18:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 18:35:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 18:37:00:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 18:37:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 19 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:38:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 19 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:38:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992,977,968,962,950,942,917,908,843) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:38:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 18:39:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 302 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 302 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (302) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:27:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 302
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:27:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зробили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:27:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відкриття,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:28:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('докорінно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:28:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('змінює')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:28:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('уявлення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('полювання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('первісних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мамонта')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 173 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 173 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (173) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 38 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 38 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (38) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 23 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 23 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (23) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 66 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 66 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (66) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 18:39:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 6 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 6 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 140 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:39:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (792,791,790,789,787,785,784,783,782,780) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:39:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 18:40:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1342 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:40:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1342 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:40:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '71f8024566f11cb5dec85e8cce218973', '66.249.64.142'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 18:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 18:43:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 18:44:41:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 18:45:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 18:46:57:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 18:51:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 983 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:51:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 983 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:51:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (983) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:51:35:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 983
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:51:36:
--------------------------------

                    -- Черкаський автовокзал перетворили на салон меблів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 983
                        AND posts_tags.tag_id IN(5,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:51:37:
--------------------------------

                    -- Черкаський автовокзал перетворили на салон меблів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автовокзал')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 983
                        AND posts_tags.tag_id IN(5,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:51:38:
--------------------------------

                    -- Черкаський автовокзал перетворили на салон меблів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перетворили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 983
                        AND posts_tags.tag_id IN(5,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:51:39:
--------------------------------

                    -- Черкаський автовокзал перетворили на салон меблів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('меблів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 983
                        AND posts_tags.tag_id IN(5,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:51:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:52:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 982 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:52:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 982 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:52:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (982) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:52:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 982
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:52:58:
--------------------------------

                    -- Цьогорічна осінь на Черкащині стала найпосушливішою за останні 30 років
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Цьогорічна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 982
                        AND posts_tags.tag_id IN(4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:52:58:
--------------------------------

                    -- Цьогорічна осінь на Черкащині стала найпосушливішою за останні 30 років
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 982
                        AND posts_tags.tag_id IN(4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:52:59:
--------------------------------

                    -- Цьогорічна осінь на Черкащині стала найпосушливішою за останні 30 років
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найпосушливішою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 982
                        AND posts_tags.tag_id IN(4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:53:00:
--------------------------------

                    -- Цьогорічна осінь на Черкащині стала найпосушливішою за останні 30 років
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('останні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 982
                        AND posts_tags.tag_id IN(4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 301 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 301 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (301) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:53:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (710) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:53:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '71f8024566f11cb5dec85e8cce218973', '66.249.64.142'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 18:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 18:53:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 18:54:45:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 18:55:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 986 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 986 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (986) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:45:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 986
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:46:
--------------------------------

                    -- Громадський бюджет Канева: у голосуванні візьмуть участь 15 проєктів з 21-го
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Громадський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 986
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:46:
--------------------------------

                    -- Громадський бюджет Канева: у голосуванні візьмуть участь 15 проєктів з 21-го
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бюджет')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 986
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:47:
--------------------------------

                    -- Громадський бюджет Канева: у голосуванні візьмуть участь 15 проєктів з 21-го
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Канева:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 986
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:47:
--------------------------------

                    -- Громадський бюджет Канева: у голосуванні візьмуть участь 15 проєктів з 21-го
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('голосуванні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 986
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:48:
--------------------------------

                    -- Громадський бюджет Канева: у голосуванні візьмуть участь 15 проєктів з 21-го
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('візьмуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 986
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:48:
--------------------------------

                    -- Громадський бюджет Канева: у голосуванні візьмуть участь 15 проєктів з 21-го
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('участь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 986
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:49:
--------------------------------

                    -- Громадський бюджет Канева: у голосуванні візьмуть участь 15 проєктів з 21-го
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('проєктів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 986
                        AND posts_tags.tag_id IN(4,5,7,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 874 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 874 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (874) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 849 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 849 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (849) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 319 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 319 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (319) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 995 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 995 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (995) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 159 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 159 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 18:55:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (159) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 18:55:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '71f8024566f11cb5dec85e8cce218973', '66.249.64.142'::inet, 'Chrome' );
--------------------------------
2019.11.10 18:57:01:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 18:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 18:58:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 19:00:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 782 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 782 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (782) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:11:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 782
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:12:
--------------------------------

                    -- Вночі у Смілі стався вибух у гральному закладі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('стався')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 782
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:13:
--------------------------------

                    -- Вночі у Смілі стався вибух у гральному закладі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гральному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 782
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------

                    -- Вночі у Смілі стався вибух у гральному закладі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('закладі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 782
                        AND posts_tags.tag_id IN(4,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 970 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 970 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (970) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (117) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 532 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 532 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (532) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 641 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 641 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (641) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 745 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 745 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (745) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b13d20b6e8a1381c539d809bc3aba9c', '5.255.250.7'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:00:14:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 705 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 705 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (705) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:37:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 705
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:38:
--------------------------------

                    -- Одна з вулиць Черкас стала односторонньою
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вулиць')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 705
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:39:
--------------------------------

                    -- Одна з вулиць Черкас стала односторонньою
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 705
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:39:
--------------------------------

                    -- Одна з вулиць Черкас стала односторонньою
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('односторонньою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 705
                        AND posts_tags.tag_id IN(4,5,6,7,8,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (134) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 291 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'dd562c484c633cdf2aeb3670bb0b8c1c', '66.249.64.143'::inet, 'Chrome' );
--------------------------------
2019.11.10 19:00:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 291 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (291) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 291
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:41:
--------------------------------

                    -- Вчені створили штучні &quot;соняшники&quot;, які обертаються за Сонцем і генерують енергію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('створили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 291
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:42:
--------------------------------

                    -- Вчені створили штучні &quot;соняшники&quot;, які обертаються за Сонцем і генерують енергію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('штучні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 291
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:42:
--------------------------------

                    -- Вчені створили штучні &quot;соняшники&quot;, які обертаються за Сонцем і генерують енергію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('&quot;соняшники&quot;,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 291
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:42:
--------------------------------

                    -- Вчені створили штучні &quot;соняшники&quot;, які обертаються за Сонцем і генерують енергію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('обертаються')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 291
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:43:
--------------------------------

                    -- Вчені створили штучні &quot;соняшники&quot;, які обертаються за Сонцем і генерують енергію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Сонцем')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 291
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:43:
--------------------------------

                    -- Вчені створили штучні &quot;соняшники&quot;, які обертаються за Сонцем і генерують енергію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('генерують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 291
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:43:
--------------------------------

                    -- Вчені створили штучні &quot;соняшники&quot;, які обертаються за Сонцем і генерують енергію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('енергію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 291
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 265 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 265 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (265) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 67 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 67 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (67) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 126 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 126 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (126) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 210 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 210 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (210) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 169 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 169 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (169) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3039a3b8e0ea3e6e68f6be0a5ba2a7bd', '77.88.47.2'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:00:44:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 19:00:47:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 19:00:47:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 19:00:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 12 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 12 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1003,993,970,953,932,923,881,880,878,870) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5d38df1da31b907877f8a32c57a23ca3', '93.158.166.138'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:00:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 730 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 730 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (730) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 730
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:53:
--------------------------------

                    -- Жива чи штучна: черкащани знову дискутують про “більшу екологічність” новорічних красунь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('штучна:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 730
                        AND posts_tags.tag_id IN(4,6,8,11,13,15,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:53:
--------------------------------

                    -- Жива чи штучна: черкащани знову дискутують про “більшу екологічність” новорічних красунь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 730
                        AND posts_tags.tag_id IN(4,6,8,11,13,15,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:54:
--------------------------------

                    -- Жива чи штучна: черкащани знову дискутують про “більшу екологічність” новорічних красунь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дискутують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 730
                        AND posts_tags.tag_id IN(4,6,8,11,13,15,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:54:
--------------------------------

                    -- Жива чи штучна: черкащани знову дискутують про “більшу екологічність” новорічних красунь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“більшу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 730
                        AND posts_tags.tag_id IN(4,6,8,11,13,15,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:55:
--------------------------------

                    -- Жива чи штучна: черкащани знову дискутують про “більшу екологічність” новорічних красунь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('екологічність”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 730
                        AND posts_tags.tag_id IN(4,6,8,11,13,15,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:55:
--------------------------------

                    -- Жива чи штучна: черкащани знову дискутують про “більшу екологічність” новорічних красунь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('новорічних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 730
                        AND posts_tags.tag_id IN(4,6,8,11,13,15,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:56:
--------------------------------

                    -- Жива чи штучна: черкащани знову дискутують про “більшу екологічність” новорічних красунь
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('красунь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 730
                        AND posts_tags.tag_id IN(4,6,8,11,13,15,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (758) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (27) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 484 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 484 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (484) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 344 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 344 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (344) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 801 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 801 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:00:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (801) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:00:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'adeb8cb50ea9544c384118af130f5143', '93.158.161.35'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 19:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 19:03:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 19:04:45:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title ='Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди' ;
--------------------------------
2019.11.10 19:05:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/yistivni-stakanchyky-i-trubochky-z-zhyta-yak-kafe-na-cherkashhyni-zaprovadzhuye-ekotrendy-foto/%' OR title = 'Їстівні стаканчики і трубочки з жита: як кафе на Черкащині запроваджує екотренди';
--------------------------------
2019.11.10 19:05:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 772 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:05:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 772 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:05:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a994ddb9d230387cbf673531f5e63cf6', '37.9.87.185'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:05:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c7aa92ee313087f80aecf0047e126ee8', '100.43.85.111'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:07:01:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 19:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 19:13:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 19:13:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:13:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'cfd36e241988a2ba4a040a01e4bbfdf9', '66.249.64.80'::inet, '[Bot] Googlebot' );
--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 25,26,27,28,29,30,31,32,33,34,35 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 25,26,27,28,29,30,31,32,33,34,35 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (77,65) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 8 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 3;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (303,302,299) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (328) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 5,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 4;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (328,321,315,242) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:13:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6,7 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6,7 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:13:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (339,336,331,329,318,316,310,304,302,300) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:14:46:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 19:15:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title = 'Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»';
--------------------------------
2019.11.10 19:16:09:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='5d6d5041d7ed247c81c174476ab2b0ec';
--------------------------------
2019.11.10 19:16:09:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '5d6d5041d7ed247c81c174476ab2b0ec', '1', '2019-11-10_19-15-05_464.png', '2019-11-10 19:16:09', '1');
--------------------------------
2019.11.10 19:16:09:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»', 'ab2c049f7078eb65b3c26909f032b4d6', 'Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»', 'Про це днями в ході наради за участі представників структурних підрозділів виконавчого комітету та інших організацій і установ міста,  які опікуються питаннями дітей, повідомила заступник міського голови Канева Наталія Матінова. Започаткована ініціатива Дитячим фондом Організації Об’єднаних Націй (ЮНІСЕФ) у 1996 році. На сьогодні до руху долучилися вже понад 3000 муніципальних округів у 38 країнах на п’яти континентах, що загалом охоплює понад 30 мільйонів дітей. Україна приєдналася до ініціативи у 2018 році. На сьогодні стати дружніми до дітей та молоді висловили бажання понад 160 громад, 30 з яких вже здійснили відповідні заходи та отримали технічну підтримку від ЮНІСЕФ, а 17 громадам  надано статус кандидата в учасники. – На стані отримання такого статусу й три громади Черкащини – Умань, Білозірська ОТГ і місто Черкаси. Якщо інші можуть, то й ми зможемо!, – наголосила Н.Матінова. – Більше того, подібні заходи вже передбачені в новому стратегічному плані розвитку Канівської ОТГ, що зараз напрацьовується. Утім, участь в Ініціативі передбачає проведення певної процедури. Так, на засідання сесії Канівської міської ради в листопаді ц.р. планується винесення відповідного рішення про приєднання Канева до Ініціативи «Громада, дружня до дітей та молоді» та затвердження робочої групи. Потому має бути проведений ситуаційний аналіз, який дасть змогу вивчити думку дітей і молоді, а також їх батьків стосовно роботи влади, їхніх проблем та потреб, які потребують вирішення, тощо. Ініціатива передбачає роботу за 5-ма напрямами: право на визнання, повагу та справедливе ставлення; право бути почутим; право на охорону здоров’я, освіту та соціальний захист; право на безпеку; право на дитинство. Долучити до впровадження Ініціативи планують й самих представників молоді, зокрема, активних старшокласників та студентів Канівського ВПУ, коледжу культури і мистецтв. Усі представники молодого покоління, які бажають змін у нашому місті, запрошуються до співпраці. За інформацією звертатись до заступника міського голови Наталії Андріївної Матінової особисто або за тел.3-30-60.', '<p class=\"bb_p\">Про це днями в ході наради за участі представників структурних підрозділів виконавчого комітету та інших організацій і установ міста,  які опікуються питаннями дітей, повідомила заступник міського голови Канева Наталія Матінова.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-15-05_464.png" alt="" title="" /></p>
<p class=\"bb_p\">Започаткована ініціатива Дитячим фондом Організації Об’єднаних Націй (ЮНІСЕФ) у 1996 році. На сьогодні до руху долучилися вже понад 3000 муніципальних округів у 38 країнах на п’яти континентах, що загалом охоплює понад 30 мільйонів дітей.</p>
<p class=\"bb_p\">Україна приєдналася до ініціативи у 2018 році. На сьогодні стати дружніми до дітей та молоді висловили бажання понад 160 громад, 30 з яких вже здійснили відповідні заходи та отримали технічну підтримку від ЮНІСЕФ, а 17 громадам  надано статус кандидата в учасники.</p>
<p class=\"bb_p\">– На стані отримання такого статусу й три громади Черкащини – Умань, Білозірська ОТГ і місто Черкаси. Якщо інші можуть, то й ми зможемо!, – наголосила Н.Матінова. – Більше того, подібні заходи вже передбачені в новому стратегічному плані розвитку Канівської ОТГ, що зараз напрацьовується.</p>
<p class=\"bb_p\">Утім, участь в Ініціативі передбачає проведення певної процедури. Так, на засідання сесії Канівської міської ради в листопаді ц.р. планується винесення відповідного рішення про приєднання Канева до Ініціативи «Громада, дружня до дітей та молоді» та затвердження робочої групи.</p>
<p class=\"bb_p\">Потому має бути проведений ситуаційний аналіз, який дасть змогу вивчити думку дітей і молоді, а також їх батьків стосовно роботи влади, їхніх проблем та потреб, які потребують вирішення, тощо.</p>
<p class=\"bb_p\">Ініціатива передбачає роботу за 5-ма напрямами: право на визнання, повагу та справедливе ставлення; право бути почутим; право на охорону здоров’я, освіту та соціальний захист; право на безпеку; право на дитинство.</p>
<p class=\"bb_p\">Долучити до впровадження Ініціативи планують й самих представників молоді, зокрема, активних старшокласників та студентів Канівського ВПУ, коледжу культури і мистецтв.</p>
<p class=\"bb_p\">Усі представники молодого покоління, які бажають змін у нашому місті, запрошуються до співпраці. За інформацією звертатись до заступника міського голови Наталії Андріївної Матінової особисто або за тел.3-30-60.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/" target="_blank">За матеріалами "dzvin.media"</a></p></div>', 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:16:10:
--------------------------------
UPDATE images SET post_id=1019 WHERE post_id=0;
--------------------------------
2019.11.10 19:16:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1019 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:16:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1019 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:16:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1019) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:16:10:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1019';
--------------------------------
2019.11.10 19:16:10:
--------------------------------
UPDATE images SET post_id=1019 WHERE md5='5d6d5041d7ed247c81c174476ab2b0ec' AND post_id=0;
--------------------------------
2019.11.10 19:16:11:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 19:16:11:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 19:16:12:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 19:16:13:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 19:16:14:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 19:16:14:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 19:16:14:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 19:16:14:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 19:16:14:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 19:16:14:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 19:16:14:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title = 'Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців';
--------------------------------
2019.11.10 19:16:54:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='5506fecf4e40ba719bddb53f6bc146d9';
--------------------------------
2019.11.10 19:16:54:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '5506fecf4e40ba719bddb53f6bc146d9', '1', '2019-11-10_19-16-14_953.png', '2019-11-10 19:16:54', '1');
--------------------------------
2019.11.10 19:16:54:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців', '718fdd8b362f4c96434a729eb7c40b88', 'Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців', 'Взуття, одяг, аксесуари, дитячі іграшки – це далеко не повний перелік того, що купують в інтернет-магазинах споживачі. І популярність онлайн-закупівель зростає, адже це зручно. Придбати товар можна не залишаючи приміщення. По-друге, це швидко. Не потрібно витрачати години на візити до магазинів у пошуках потрібного товару. По-третє, це легко. Кількох кліків достатньо, аби  порівняти ціни на уподобаний товар, вивчити акційні пропозиції і зробити свій вибір. Чи реально онлайн-покупцеві убезпечити себе від шахраїв або неякісного товару? Нагадуємо: права споживача при купівлі товару через інтернет-магазин регулюються статтею 13 Закону України «Про захист прав споживачів». Закон визначає обсяг інформації, яку інтернет-магазини зобов’язані надати споживачеві до моменту замовлення товару. Так, перед покупкою товару в інтернет-магазині необхідно звернути увагу на наявність на сайті такої інформації: – найменування продавця, його місцезнаходження, порядок прийняття претензій; – основні характеристики продукції; – ціна, включаючи плату за доставку та умови оплати; – гарантійні зобов’язання; – інші умови поставки; – порядок розірвання договору. Як показує практика, споживач, купуючи товар через інтернет-магазин, у багатьох випадках не може реалізувати свої права, передбачені Законом України «Про захист прав споживачів», насамперед через  неможливість встановити найменування продавця та його місцезнаходження. Інша інформація, окрім адреси електронної пошти та номера мобільного телефону, на сайті інтернет-магазину не вказується, що фактично робить споживача безправним при придбанні неякісного товару. Слід зазначити, що законодавство України під найменуванням юридичної особи розуміє  його організаційно-правову форму та назву. Наприклад, ТОВ «АААА», ПП «ББББ», ПрАТ «ВВВВ», тощо. Для фізичної особи-підприємця – це прізвище, ім’я та по-батькові. І аж ніяк не може бути найменуванням продавця назва інтернет-магазину (сайту/домену). Крім того, у більшості випадків продавці не є власниками інтернет-магазинів. І навіть більше, через один інтернет-магазин реалізовувати товар можуть декілька десятків продавців. Щодо місцезнаходження продавця слід пам’ятати, що адреси, які вказуються у накладних, за якими споживач отримує замовлений товар, це зазвичай адреси розташування поштових відділень або відділення підприємства, що надає послуги з доставки відправлення. Також слід зазначити, що в разі покупки товару через інтернет-магазин споживач не має можливості безпосередньо ознайомиться з товаром, а орієнтується тільки на зображення товару, його текстовий або словесний опис. Користуючись цим, недобросовісні продавці можуть реалізовувати неякісний, фальсифікований або контрабандний товар, або взагалі після отримання коштів можуть: не надіслати товар;надіслати товар, який споживач не замовляв;надіслати товар, технічні характеристики якого не відповідають заявленим на сайті.Окремо необхідно зазначити, що відсутність інформації про найменування та місцезнаходження продавця унеможливлює проведення перевірок з боку Держпродспоживслужби за скаргами споживачів. Держпродспоживслужба не має повноважень на проведення розшукових дій. Тому, щоб убезпечити себе від невдалої покупки в інтернет-магазині,  зберегти кошти та нерви, радимо споживачам звертати увагу на наявність на сайті інформації, передбаченої статтею 13 Закону України «Про захист прав споживачів», зокрема найменування та місцезнаходження продавця. У разі їх відсутності варто взагалі відмовитися від придбання товару в інтернет-магазині.', '<p class=\"bb_p\"><b class=\"bb_b\">Взуття, одяг, аксесуари, дитячі іграшки – це далеко не повний перелік того, що купують в інтернет-магазинах споживачі. І популярність онлайн-закупівель зростає, адже це зручно. Придбати товар можна не залишаючи приміщення. По-друге, це швидко. Не потрібно витрачати години на візити до магазинів у пошуках потрібного товару. По-третє, це легко. Кількох кліків достатньо, аби  порівняти ціни на уподобаний товар, вивчити акційні пропозиції і зробити свій вибір.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-16-14_953.png" alt="" title="" /></p>
<p class=\"bb_p\">Чи реально онлайн-покупцеві убезпечити себе від шахраїв або неякісного товару?</p>
<p class=\"bb_p\">Нагадуємо: права споживача при купівлі товару через інтернет-магазин регулюються статтею 13 Закону України «Про захист прав споживачів».</p>
<p class=\"bb_p\">Закон визначає обсяг інформації, яку інтернет-магазини зобов’язані надати споживачеві до моменту замовлення товару.</p>
<p class=\"bb_p\">Так, перед покупкою товару в інтернет-магазині необхідно звернути увагу на наявність на сайті такої інформації:</p>
<p class=\"bb_p\">– найменування продавця, його місцезнаходження, порядок прийняття претензій;</p>
<p class=\"bb_p\">– основні характеристики продукції;</p>
<p class=\"bb_p\">– ціна, включаючи плату за доставку та умови оплати;</p>
<p class=\"bb_p\">– гарантійні зобов’язання;</p>
<p class=\"bb_p\">– інші умови поставки;</p>
<p class=\"bb_p\">– порядок розірвання договору.</p>
<p class=\"bb_p\">Як показує практика, споживач, купуючи товар через інтернет-магазин, у багатьох випадках не може реалізувати свої права, передбачені Законом України «Про захист прав споживачів», насамперед через  неможливість встановити найменування продавця та його місцезнаходження. Інша інформація, окрім адреси електронної пошти та номера мобільного телефону, на сайті інтернет-магазину не вказується, що фактично робить споживача безправним при придбанні неякісного товару.</p>
<p class=\"bb_p\">Слід зазначити, що законодавство України під найменуванням юридичної особи розуміє  його організаційно-правову форму та назву. Наприклад, ТОВ «АААА», ПП «ББББ», ПрАТ «ВВВВ», тощо.</p>
<p class=\"bb_p\">Для фізичної особи-підприємця – це прізвище, ім’я та по-батькові.</p>
<p class=\"bb_p\">І аж ніяк не може бути найменуванням продавця назва інтернет-магазину (сайту/домену).</p>
<p class=\"bb_p\">Крім того, у більшості випадків продавці не є власниками інтернет-магазинів. І навіть більше, через один інтернет-магазин реалізовувати товар можуть декілька десятків продавців.</p>
<p class=\"bb_p\">Щодо місцезнаходження продавця слід пам’ятати, що адреси, які вказуються у накладних, за якими споживач отримує замовлений товар, це зазвичай адреси розташування поштових відділень або відділення підприємства, що надає послуги з доставки відправлення.</p>
<p class=\"bb_p\">Також слід зазначити, що в разі покупки товару через інтернет-магазин споживач не має можливості безпосередньо ознайомиться з товаром, а орієнтується тільки на зображення товару, його текстовий або словесний опис.</p>
<p class=\"bb_p\">Користуючись цим, недобросовісні продавці можуть реалізовувати неякісний, фальсифікований або контрабандний товар, або взагалі після отримання коштів можуть:</p>
<p class=\"bb_p\">не надіслати товар;надіслати товар, який споживач не замовляв;надіслати товар, технічні характеристики якого не відповідають заявленим на сайті.Окремо необхідно зазначити, що відсутність інформації про найменування та місцезнаходження продавця унеможливлює проведення перевірок з боку Держпродспоживслужби за скаргами споживачів. Держпродспоживслужба не має повноважень на проведення розшукових дій.</p>
<p class=\"bb_p\">Тому, щоб убезпечити себе від невдалої покупки в інтернет-магазині,  зберегти кошти та нерви, радимо споживачам звертати увагу на наявність на сайті інформації, передбаченої статтею 13 Закону України «Про захист прав споживачів», зокрема найменування та місцезнаходження продавця. У разі їх відсутності варто взагалі відмовитися від придбання товару в інтернет-магазині.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/" target="_blank">За матеріалами "18000.com.ua"</a></p></div>', 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/
Стрічка новин', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:16:54:
--------------------------------
UPDATE images SET post_id=1020 WHERE post_id=0;
--------------------------------
2019.11.10 19:16:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1020 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:16:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1020 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:16:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1020) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:16:54:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1020';
--------------------------------
2019.11.10 19:16:54:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:16:54:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1020'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1020'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:16:54:
--------------------------------
UPDATE images SET post_id=1020 WHERE md5='5506fecf4e40ba719bddb53f6bc146d9' AND post_id=0;
--------------------------------
2019.11.10 19:16:54:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title = 'Більше двох сотень строковиків поповнили лави прикордонників';
--------------------------------
2019.11.10 19:17:02:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 19:18:03:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='24a6699ffeb03c72bcc0b56d7de1dae0';
--------------------------------
2019.11.10 19:18:03:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '24a6699ffeb03c72bcc0b56d7de1dae0', '1', '2019-11-10_19-16-54_524.png', '2019-11-10 19:18:03', '1');
--------------------------------
2019.11.10 19:18:03:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Більше двох сотень строковиків поповнили лави прикордонників', 'd1ae682821d105cd7bf8de5f7dda0033', 'Більше двох сотень строковиків поповнили лави прикордонників', 'Учора на вірність Україні присягнули 211 військовослужбовців строкової служби в Головному центрі підготовки особового складу Держприкордонслужби України ім. генерал-майора І. Момота. Про це інформують у прес-службі Черкаської ОДА. Навчання у Центрі проходили хлопці з різних областей України. Молоді бійці пройшли курс загальновійськової підготовки, опанувавши теорію та практику прикордонного контролю, тактики прикордонної служби, основ безпеки застосування сил, інженерно-технічної підготовки тощо. За словами начальника управління професійної підготовки адміністрації Держприкордонслужби України полковника Олега Фігура, Центр за роки існування підготував понад 100 тисяч охоронців для підрозділів державного кордону. Більше тисячі осіб закладу взяли участь в антитерористичній операції. Із них 58 відзначили державними нагородами. 14 військовослужбовців Головного центру віддали життя, захищаючи Україну. Загалом прикордонна служба втратила 70 воїнів, понад 400 отримали поранення.', '<p class=\"bb_p\"><b class=\"bb_b\">Учора на вірність Україні присягнули 211 військовослужбовців строкової служби в Головному центрі підготовки особового складу Держприкордонслужби України ім. генерал-майора І. Момота.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-16-54_524.png" alt="" title="" /></p>
<p class=\"bb_p\">Про це інформують у прес-службі Черкаської ОДА.</p>
<p class=\"bb_p\">Навчання у Центрі проходили хлопці з різних областей України. Молоді бійці пройшли курс загальновійськової підготовки, опанувавши теорію та практику прикордонного контролю, тактики прикордонної служби, основ безпеки застосування сил, інженерно-технічної підготовки тощо.</p>
<p class=\"bb_p\">За словами <b class=\"bb_b\">начальника управління професійної підготовки адміністрації Держприкордонслужби України полковника Олега Фігура</b>, Центр за роки існування підготував понад 100 тисяч охоронців для підрозділів державного кордону. Більше тисячі осіб закладу взяли участь в антитерористичній операції. Із них 58 відзначили державними нагородами.</p>
<p class=\"bb_p\">14 військовослужбовців Головного центру віддали життя, захищаючи Україну. Загалом прикордонна служба втратила 70 воїнів, понад 400 отримали поранення.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/" target="_blank">За матеріалами "18000.com.ua"</a></p></div>', 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/
Стрічка новин', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:18:03:
--------------------------------
UPDATE images SET post_id=1021 WHERE post_id=0;
--------------------------------
2019.11.10 19:18:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1021 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:18:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1021 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:18:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1021) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:18:03:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1021';
--------------------------------
2019.11.10 19:18:03:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:18:03:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1021'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1021'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:18:03:
--------------------------------
UPDATE images SET post_id=1021 WHERE md5='24a6699ffeb03c72bcc0b56d7de1dae0' AND post_id=0;
--------------------------------
2019.11.10 19:18:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title = 'Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом';
--------------------------------
2019.11.10 19:18:35:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='63f52bb51a75fe396e950aa6975908e7';
--------------------------------
2019.11.10 19:18:35:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом', '92eaae6977a027b3f7143ee94e76fa8e', 'Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом', 'Чоловік перевозив вогнепальну зброю у своєму авто. Вона була обладнана глушником і оптичним прицілом, споряджена магазином з набоями 7,62мм. Від пояснень черкасець відмовився. Про це інформують у прес-службі ГУНП в Черкаській області. Гвинтівку Мосіна часів Другої світової війни в задовільному стані правоохоронці виявили на задньому сидінні “Фольксвагена”. Дозвільних документів на зброю чоловік не надав. Походження гвинтівки та куди направлявся чоловік вночі зі зброєю з’ясовують оперативні працівники та слідчі. Речові докази вилучено. Чорнобаївським відділенням поліції відкрито кримінальне провадження за частиною 1 статті 263 (Незаконне поводження зі зброєю, бойовими припасами або вибуховими речовинами) ККУ. Санкція статті передбачає покарання у вигляді позбавлення волі на строк до семи років. ', '<p class=\"bb_p\"><b class=\"bb_b\">Чоловік перевозив вогнепальну зброю у своєму авто. Вона була обладнана глушником і оптичним прицілом, споряджена магазином з набоями 7,62мм. Від пояснень черкасець відмовився.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-18-03_243.png" alt="" title="" /></p>
<p class=\"bb_p\">Про це інформують у прес-службі ГУНП в Черкаській області.</p>
<p class=\"bb_p\">Гвинтівку Мосіна часів Другої світової війни в задовільному стані правоохоронці виявили на задньому сидінні “Фольксвагена”. Дозвільних документів на зброю чоловік не надав. Походження гвинтівки та куди направлявся чоловік вночі зі зброєю з’ясовують оперативні працівники та слідчі.</p>
<p class=\"bb_p\">Речові докази вилучено. Чорнобаївським відділенням поліції відкрито кримінальне провадження за частиною 1 статті 263 (Незаконне поводження зі зброєю, бойовими припасами або вибуховими речовинами) ККУ. Санкція статті передбачає покарання у вигляді позбавлення волі на строк до семи років. </p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/" target="_blank">За матеріалами "18000.com.ua"</a></p></div>', 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/
Стрічка новин', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:18:35:
--------------------------------
UPDATE images SET post_id=1022 WHERE post_id=0;
--------------------------------
2019.11.10 19:18:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1022 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:18:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1022 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:18:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1022) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:18:35:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1022';
--------------------------------
2019.11.10 19:18:35:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:18:35:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1022'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1022'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:18:35:
--------------------------------
UPDATE images SET post_id=1022 WHERE md5='63f52bb51a75fe396e950aa6975908e7' AND post_id=0;
--------------------------------
2019.11.10 19:18:35:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title = 'З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?';
--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 8 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 8 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007,1002,1001,997,985,984,979,977,971,969) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1008,1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (991,990) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1009,1008) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (995,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007,1005) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (932,931,930,929,928,927,926,925,924,923,922,921) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:22:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1261 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1261 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:22:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c64f8e474703506f389ab6821811f1c6', '77.88.5.44'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 19:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 19:23:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 19:24:47:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 19:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 19:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 19:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 19:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 19:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 19:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 19:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 19:25:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title = 'З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?';
--------------------------------
2019.11.10 19:27:04:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 19:27:53:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='22a503b7f51e61a188c9ecb8c95f896b';
--------------------------------
2019.11.10 19:27:53:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '22a503b7f51e61a188c9ecb8c95f896b', '1', '2019-11-10_19-25-05_584.png', '2019-11-10 19:27:53', '1');
--------------------------------
2019.11.10 19:27:53:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?', '7ba4eb77b345ffae690b98ad6642bdd1', 'З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?', 'Заїхала на чигиринську Орбіту, в Буцький каньйон, відвідала канівську майстерню Ігоря з ексклюзивними машинами та побувала у гуртожитку золотоніського  технікуму. В першому випуску “Le Маршрутка” з Лесєю Нікітюк йдеться про принади Черкащини. Під приціл відомої телеведучої потрапило кілька районів Черкащини. Спочатку вона побувала на Чигиринщині, поспілкувалася із тутешніми жителями Орбіти. Потім завітала у Канів, де відвідала автомайстерню Ігоря. Чоловік робить унікальні автомобілі зі старих марок. Окрім того Нікітюк побачила, як живеться у гуртожитку студентам Золотоніського ветеринарного технікуму. Насамкінець подорожі залишила Буцький каньйон. Як це було – дивіться у першому випуску.', '<p class=\"bb_p\"><b class=\"bb_b\">Заїхала на чигиринську Орбіту, в Буцький каньйон, відвідала канівську майстерню Ігоря з ексклюзивними машинами та побувала у гуртожитку золотоніського  технікуму.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-25-05_584.png" alt="" title="" /></p>
<p class=\"bb_p\">В першому випуску “Le Маршрутка” з Лесєю Нікітюк йдеться про принади Черкащини.</p>
<p class=\"bb_p\">Під приціл відомої телеведучої потрапило кілька районів Черкащини. Спочатку вона побувала на Чигиринщині, поспілкувалася із тутешніми жителями Орбіти. Потім завітала у Канів, де відвідала автомайстерню Ігоря. Чоловік робить унікальні автомобілі зі старих марок. Окрім того Нікітюк побачила, як живеться у гуртожитку студентам Золотоніського ветеринарного технікуму. Насамкінець подорожі залишила Буцький каньйон.</p>
<p class=\"bb_p\">Як це було – дивіться у першому випуску.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/" target="_blank">За матеріалами "18000.com.ua"</a></p></div>', 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/
Стрічка новин', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:27:53:
--------------------------------
UPDATE images SET post_id=1023 WHERE post_id=0;
--------------------------------
2019.11.10 19:27:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1023 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:27:53:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1023 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:27:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1023) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:27:53:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1023';
--------------------------------
2019.11.10 19:27:53:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:27:53:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1023'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1023'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:27:53:
--------------------------------
UPDATE images SET post_id=1023 WHERE md5='22a503b7f51e61a188c9ecb8c95f896b' AND post_id=0;
--------------------------------
2019.11.10 19:27:53:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title = 'Черкащанка стала радницею прем’єра';
--------------------------------
2019.11.10 19:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 469 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:32:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 469 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (469) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:32:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 469
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:32:58:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Шестеро')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:00:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('золотоніських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:01:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('школярів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 19:33:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 19:33:03:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('випускників')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:04:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('отримуватимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:06:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('обласні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:07:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('президентські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:08:
--------------------------------

                    -- Шестеро золотоніських школярів та випускників отримуватимуть обласні і президентські стипендії
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('стипендії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 469
                        AND posts_tags.tag_id IN(3,4,7,11,13,15,22,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 725 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 725 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (725) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 933 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 933 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (933) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 147 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 147 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (147) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 504 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 504 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (504) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 510 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 510 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (510) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:33:09:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 19:33:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:33:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (933,932,931,930,929,928,927,926,925,924,923,922) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:34:46:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 19:35:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 19:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 19:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 19:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 19:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 19:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 19:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 19:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 19:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 19:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 19:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 19:35:04:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title = 'Черкащанка стала радницею прем’єра';
--------------------------------
2019.11.10 19:37:02:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 19:37:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 22 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 22 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (867,842,826,819,815,773,759,732,725,719) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:11:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b550394f978f9e32a175e8cd3074c73', '141.8.144.39'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:37:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1008,1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (991,990) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1009,1008) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (995,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1007,1005) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:19:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='a0452ae06f191b0c914c492126649142';
--------------------------------
2019.11.10 19:37:19:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'a0452ae06f191b0c914c492126649142', '1', '2019-11-10_19-35-04_229.png', '2019-11-10 19:37:19', '1');
--------------------------------
2019.11.10 19:37:19:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Черкащанка стала радницею прем’єра', '337811c07fdf1d5aaf7111ff41f14bae', 'Черкащанка стала радницею прем’єра', 'Черкащанка Світлана Заліщук з минулої п’ятниці є штатним радником прем’єр-міністра України з питань зовнішньої політики Олексія Гончарука. Про це вона написала на своїй фейсбук-сторінці. “З Олексієм Гончаруком ми товаришували з домайданних часів. Вірю в наміри й цінності цієї людини. Хочу допомогти й посилити його на зовнішньо політичному фронті”, – написала екс-депутатка. За її словами, останні три тижні разом із прем’єром вони організували близько десятка міжнародних двосторонок. Наголосила на вільному володінні англійською Гончарука та по відомила, за що відповідатиме у його команді. “У команді прем’єра я відповідатиму за підготовку його міжнародних зустрічей та міжнародних візитів у тісній координації з МЗС та Віце-прем’єром Дмитром Кулебою. Моїми головними kpi будуть успішні контакти голови Уряду зі своїми візаві, міжнародними фінансовими інституціями та дипломатами, створення позитивних передумов для розвитку міжнародної співпраці України, допомога в привабленні інвестицій, сприяння ефективнішому економічному співробітництву між державами. Окремо виділю боротьбу за наше європейське майбутнє та енергетичну безпеку”, – написала Заліщук. Не пропустіть найважливішого - отримуєте push-сповіщення від команди %SITENAME%', '<p class=\"bb_p\"><b class=\"bb_b\">Черкащанка Світлана Заліщук з минулої п’ятниці є штатним радником прем’єр-міністра України з питань зовнішньої політики Олексія Гончарука.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-35-04_229.png" alt="" title="" /></p>
<p class=\"bb_p\">Про це вона написала на своїй фейсбук-сторінці.</p>
<p class=\"bb_p\">“З Олексієм Гончаруком ми товаришували з домайданних часів. Вірю в наміри й цінності цієї людини. Хочу допомогти й посилити його на зовнішньо політичному фронті”, – написала екс-депутатка.</p>
<p class=\"bb_p\">За її словами, останні три тижні разом із прем’єром вони організували близько десятка міжнародних двосторонок. Наголосила на вільному володінні англійською Гончарука та по відомила, за що відповідатиме у його команді.</p>
<p class=\"bb_p\">“У команді прем’єра я відповідатиму за підготовку його міжнародних зустрічей та міжнародних візитів у тісній координації з МЗС та Віце-прем’єром Дмитром Кулебою. Моїми головними kpi будуть успішні контакти голови Уряду зі своїми візаві, міжнародними фінансовими інституціями та дипломатами, створення позитивних передумов для розвитку міжнародної співпраці України, допомога в привабленні інвестицій, сприяння ефективнішому економічному співробітництву між державами. Окремо виділю боротьбу за наше європейське майбутнє та енергетичну безпеку”, – написала Заліщук.</p>
<p class=\"bb_p\">Не пропустіть найважливішого - отримуєте push-сповіщення від команди %SITENAME%</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/" target="_blank">За матеріалами "18000.com.ua"</a></p></div>', 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/
Важливо|Стрічка новин|Світлана Заліщук', '', 'Світлана Заліщук', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:37:19:
--------------------------------
UPDATE images SET post_id=1024 WHERE post_id=0;
--------------------------------
2019.11.10 19:37:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1024 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1024 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:37:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1024) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:37:19:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1024';
--------------------------------
2019.11.10 19:37:19:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:37:19:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1024'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1024'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:37:19:
--------------------------------
UPDATE images SET post_id=1024 WHERE md5='a0452ae06f191b0c914c492126649142' AND post_id=0;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 19:37:21:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 19:37:22:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 19:37:22:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 19:37:23:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 19:37:24:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 19:37:24:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 19:37:24:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 19:37:25:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 19:37:28:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 19:37:31:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 19:37:34:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 19:37:37:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 19:37:37:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 19:37:37:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title ='Продукти харчування, які зміцнюють нервову систему' ;
--------------------------------
2019.11.10 19:37:40:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title = 'Біля “Дружби народів” у Черкасах затримали молодика з наркотиками';
--------------------------------
2019.11.10 19:39:04:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='95e8a8145eb17d417ab6b99f97b095e1';
--------------------------------
2019.11.10 19:39:04:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '95e8a8145eb17d417ab6b99f97b095e1', '1', '2019-11-10_19-37-40_58.png', '2019-11-10 19:39:04', '1');
--------------------------------
2019.11.10 19:40:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 465 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 465 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (465) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 465
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:08:
--------------------------------

                    -- На Черкащині жінка отруїлася опеньками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 465
                        AND posts_tags.tag_id IN(5,6,7,10,11,12,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:09:
--------------------------------

                    -- На Черкащині жінка отруїлася опеньками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('отруїлася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 465
                        AND posts_tags.tag_id IN(5,6,7,10,11,12,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:09:
--------------------------------

                    -- На Черкащині жінка отруїлася опеньками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('опеньками')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 465
                        AND posts_tags.tag_id IN(5,6,7,10,11,12,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 119 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 119 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (119) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 190 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 190 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (190) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:40:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '71f8024566f11cb5dec85e8cce218973', '66.249.64.142'::inet, 'Chrome' );
--------------------------------
2019.11.10 19:40:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:40:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (934,933,932,931,930,929,928,927,926,925,924,923) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:01:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 19:43:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 19:43:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 64 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 64 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (64) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 64
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:53:
--------------------------------

                    -- На фасаді школи №6 встановили Меморіальну дошку Івану Дробному [ФОТО]
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фасаді')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 64
                        AND posts_tags.tag_id IN(3,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:53:
--------------------------------

                    -- На фасаді школи №6 встановили Меморіальну дошку Івану Дробному [ФОТО]
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('встановили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 64
                        AND posts_tags.tag_id IN(3,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:54:
--------------------------------

                    -- На фасаді школи №6 встановили Меморіальну дошку Івану Дробному [ФОТО]
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Меморіальну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 64
                        AND posts_tags.tag_id IN(3,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:54:
--------------------------------

                    -- На фасаді школи №6 встановили Меморіальну дошку Івану Дробному [ФОТО]
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Дробному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 64
                        AND posts_tags.tag_id IN(3,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:55:
--------------------------------

                    -- На фасаді школи №6 встановили Меморіальну дошку Івану Дробному [ФОТО]
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('[ФОТО]')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 64
                        AND posts_tags.tag_id IN(3,5,6,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 892 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 892 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (892) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 550 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 550 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (550) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 577 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 577 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (577) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 65 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 65 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (65) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 116 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 116 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:43:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (116) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:43:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '041b71d0e5cc69ada07c185bb281bac3', '5.255.250.62'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:44:44:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 19:45:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 19:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 19:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 19:45:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 19:45:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 19:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 19:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 19:45:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 19:45:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 19:45:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 19:45:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 19:45:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 19:45:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 19:45:13:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 19:45:16:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title ='Продукти харчування, які зміцнюють нервову систему' ;
--------------------------------
2019.11.10 19:45:16:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title = 'Біля “Дружби народів” у Черкасах затримали молодика з наркотиками';
--------------------------------
2019.11.10 19:46:39:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='95e8a8145eb17d417ab6b99f97b095e1';
--------------------------------
2019.11.10 19:47:01:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 19:47:58:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='65832cd16534e83df9417240a1e35c5b';
--------------------------------
2019.11.10 19:47:58:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '65832cd16534e83df9417240a1e35c5b', '1', '2019-11-10_19-46-39_374.png', '2019-11-10 19:47:58', '1');
--------------------------------
2019.11.10 19:48:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1213 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:48:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1213 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:48:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b44edfc91d8c3364cc3bff12f405159', '5.255.250.56'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 19:48:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 318 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:48:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 318 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:48:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (318) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:48:56:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:48:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 318
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:48:56:
--------------------------------

                    -- Огляд коміксу «Сага. Книга 1»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('коміксу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 318
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:48:56:
--------------------------------

                    -- Огляд коміксу «Сага. Книга 1»
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«Сага.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 318
                        AND posts_tags.tag_id IN(6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:48:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e8cbfe1860fd70695d8a890526de430b', '66.249.64.80'::inet, 'Chrome' );
--------------------------------
2019.11.10 19:48:56:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:48:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:49:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:49:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:49:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:49:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:49:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:49:07:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='c15ae1ced0318b50becc6cb58fa4e644';
--------------------------------
2019.11.10 19:49:44:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'c15ae1ced0318b50becc6cb58fa4e644', '1', '2019-11-10_19-47-58_78.png', '2019-11-10 19:49:44', '1');
--------------------------------
2019.11.10 19:49:44:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Біля “Дружби народів” у Черкасах затримали молодика з наркотиками', '94a8ff6603e8a2257a71f6cd64287661', 'Біля “Дружби народів” у Черкасах затримали молодика з наркотиками', 'Чоловіка затримали ТОРівці. У пресслужбі Патрульної поліції Черкаської області зазначають, що він не місцевий. Черкаські патрульні роти ТОР сьогодні затримали 24-річного жителя Кропивницького із 67-ма пакетиками канабісу та порошкоподібною речовиною, схожою на амфетамін. На площі Дружби народів поліціянти звернули увагу на підозрілі дії та поведінку чоловіка, коли він щось передавав до рук невідомому молодику. Та щойно патрульні почали підходити, як той кинувся тікати. Його наздогнали і затримали, та під час поверхневої перевірки виявили підозрілі пакетики. На місце події викликали слідчо-оперативну групу, яка далі зайнялася деталями справи.', '<p class=\"bb_p\"><b class=\"bb_b\">Чоловіка затримали ТОРівці. У пресслужбі Патрульної поліції Черкаської області зазначають, що він не місцевий.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-45-16_655.png" alt="" title="" /></p>
<p class=\"bb_p\">Черкаські патрульні роти ТОР сьогодні затримали 24-річного жителя Кропивницького із 67-ма пакетиками канабісу та порошкоподібною речовиною,  схожою на амфетамін.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-46-39_374.png" alt="" title="" /></p>
<p class=\"bb_p\">На площі Дружби народів поліціянти звернули увагу на підозрілі дії та поведінку чоловіка,  коли він щось передавав до рук невідомому молодику. Та щойно патрульні почали підходити, як той кинувся тікати. Його наздогнали і затримали, та під час поверхневої перевірки виявили підозрілі пакетики.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-47-58_78.png" alt="" title="" /></p>
<p class=\"bb_p\">На місце події викликали слідчо-оперативну групу, яка далі зайнялася деталями справи.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/
Кримінал|Новини|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
UPDATE images SET post_id=1025 WHERE post_id=0;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1025 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1025 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1025) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:49:44:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1025';
--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:49:44:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1025'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1025'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT id FROM tags WHERE name = 'Політика';
--------------------------------
2019.11.10 19:49:44:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1025'::INTEGER AND tag_id = '11'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1025'::INTEGER, '11'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT id FROM tags WHERE name = 'Поліція';
--------------------------------
2019.11.10 19:49:44:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1025'::INTEGER AND tag_id = '9'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1025'::INTEGER, '9'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 19:49:44:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1025'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1025'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
UPDATE images SET post_id=1025 WHERE md5='95e8a8145eb17d417ab6b99f97b095e1' AND post_id=0;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
UPDATE images SET post_id=1025 WHERE md5='65832cd16534e83df9417240a1e35c5b' AND post_id=0;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
UPDATE images SET post_id=1025 WHERE md5='c15ae1ced0318b50becc6cb58fa4e644' AND post_id=0;
--------------------------------
2019.11.10 19:49:44:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title = 'На Христинівщині завершили ремонт “дороги смерті”';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 19:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 19:53:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 19:53:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 19:53:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 19:54:46:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 19:57:03:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 19:58:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 19:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 19:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 19:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 19:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 19:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 19:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 19:58:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 19:58:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 19:58:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 19:58:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 19:58:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 19:58:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title ='Продукти харчування, які зміцнюють нервову систему' ;
--------------------------------
2019.11.10 19:58:10:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title = 'На Христинівщині завершили ремонт “дороги смерті”';
--------------------------------
2019.11.10 19:59:11:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='bbf8dd24cd00f8d82f077ffe2faca54c';
--------------------------------
2019.11.10 19:59:11:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'bbf8dd24cd00f8d82f077ffe2faca54c', '1', '2019-11-10_19-58-10_479.png', '2019-11-10 19:59:11', '1');
--------------------------------
2019.11.10 19:59:11:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('На Христинівщині завершили ремонт “дороги смерті”', 'c344e6865065e7ec9f807833dbbd2862', 'На Христинівщині завершили ремонт “дороги смерті”', 'Реконструкцію шляхопроводу через село Сичівка Христинівського району завершено, - інформує сайт 04744.info. Це остання проблемна ділянка дороги у напрямку «Умань — Христинівка». Раніше цей відрізок автошляху називали «дорогою смерті». Зокрема, у рамках проєкту з реконструкції мосту було розширено проїжджу частину; зроблено нові опори шляхопроводу та прогонові споруди; встановлено нові дорожні знаки; облаштовано тротуар та штучне освітлення мосту. Крім того, там нанесли дорожню розмітку.', '<p class=\"bb_p\"><b class=\"bb_b\">Реконструкцію шляхопроводу через село Сичівка Христинівського району завершено, - інформує сайт 04744.info. Це остання проблемна ділянка дороги у напрямку «Умань — Христинівка».</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-58-10_479.png" alt="" title="" /></p>
<p class=\"bb_p\">Раніше цей відрізок автошляху називали «дорогою смерті».</p>
<p class=\"bb_p\">Зокрема, у рамках проєкту з реконструкції мосту було розширено проїжджу частину; зроблено нові опори шляхопроводу та прогонові споруди; встановлено нові дорожні знаки; облаштовано тротуар та штучне освітлення мосту.</p>
<p class=\"bb_p\">Крім того, там нанесли дорожню розмітку.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/
Дороги|Новини|Райони|Христинівка', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:59:11:
--------------------------------
UPDATE images SET post_id=1026 WHERE post_id=0;
--------------------------------
2019.11.10 19:59:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1026 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:59:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1026 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:59:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1026) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:59:12:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1026';
--------------------------------
2019.11.10 19:59:12:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:59:12:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1026'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1026'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:59:12:
--------------------------------
SELECT id FROM tags WHERE name = 'Поліція';
--------------------------------
2019.11.10 19:59:12:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1026'::INTEGER AND tag_id = '9'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1026'::INTEGER, '9'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:59:12:
--------------------------------
SELECT id FROM tags WHERE name = 'Райони';
--------------------------------
2019.11.10 19:59:12:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1026'::INTEGER AND tag_id = '6'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1026'::INTEGER, '6'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:59:12:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 19:59:12:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1026'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1026'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:59:12:
--------------------------------
UPDATE images SET post_id=1026 WHERE md5='bbf8dd24cd00f8d82f077ffe2faca54c' AND post_id=0;
--------------------------------
2019.11.10 19:59:12:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title = 'Черкаські футзалістки здобули першу перемогу';
--------------------------------
2019.11.10 19:59:42:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='37f978e0c425645ecea04a7cabbd337c';
--------------------------------
2019.11.10 19:59:42:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '37f978e0c425645ecea04a7cabbd337c', '1', '2019-11-10_19-59-12_593.png', '2019-11-10 19:59:42', '1');
--------------------------------
2019.11.10 19:59:42:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Черкаські футзалістки здобули першу перемогу', '48719528436fcb1effa349aaf69e26d0', 'Черкаські футзалістки здобули першу перемогу', 'У грі з «Будстар-2», яка відбулась 9 листопада, футзалістки МСК «Дніпро» здобули вольову перемогу з рахунком 4:3. У екслюзивному коментарі для «Черкаського спорту» гравчиня «Дніпра» Таня Горбенко поділилась враженнями від матчу. «Гра пройшла у важкій виснажливій боротьбі,  але з переможним результатом. Наша команда постійно вела в рахунку. У цілому, дівчата задоволені цим матчем і вже готуємось до наступного», - розповіла вона. А сьогодні футзалістки МСК «Дніпро» мали провести заключну гру з місцевим «Славутичем».', '<p class=\"bb_p\"><b class=\"bb_b\">У грі з «Будстар-2», яка відбулась 9 листопада, футзалістки МСК «Дніпро» здобули вольову перемогу з рахунком 4:3.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-59-12_593.png" alt="" title="" /></p>
<p class=\"bb_p\">У екслюзивному коментарі для «Черкаського спорту» гравчиня «Дніпра» <b class=\"bb_b\">Таня Горбенко</b> поділилась враженнями від матчу.</p>
<p class=\"bb_p\">«Гра пройшла у важкій виснажливій боротьбі,  але з переможним результатом. Наша команда постійно вела в рахунку. У цілому, дівчата задоволені цим матчем і вже готуємось до наступного», - розповіла вона.</p>
<p class=\"bb_p\">А сьогодні футзалістки МСК «Дніпро» мали провести заключну гру з місцевим «Славутичем».</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/
Новини|Спорт|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 19:59:42:
--------------------------------
UPDATE images SET post_id=1027 WHERE post_id=0;
--------------------------------
2019.11.10 19:59:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1027 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:59:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1027 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 19:59:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1027) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 19:59:43:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1027';
--------------------------------
2019.11.10 19:59:43:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 19:59:43:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1027'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1027'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:59:43:
--------------------------------
SELECT id FROM tags WHERE name = 'Спорт';
--------------------------------
2019.11.10 19:59:43:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1027'::INTEGER AND tag_id = '10'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1027'::INTEGER, '10'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:59:43:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 19:59:43:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1027'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1027'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 19:59:43:
--------------------------------
UPDATE images SET post_id=1027 WHERE md5='37f978e0c425645ecea04a7cabbd337c' AND post_id=0;
--------------------------------
2019.11.10 19:59:43:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title = 'Як черкащанам розпізнати фальшиві гроші';
--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='d5ea725955558b311c1b66aa129a5d7e';
--------------------------------
2019.11.10 20:00:55:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'd5ea725955558b311c1b66aa129a5d7e', '1', '2019-11-10_19-59-43_951.png', '2019-11-10 20:00:55', '1');
--------------------------------
2019.11.10 20:00:55:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Як черкащанам розпізнати фальшиві гроші', '806da778a84bb5dac864d0bb6194ac81', 'Як черкащанам розпізнати фальшиві гроші', 'Для того, аби виявити підроблені банкноти варто звертати увагу на рельєфність зображень на лицьовій стороні та зміну кольору під різними кутами зору. Ці та інші рекомендації надали у відповідь на інформаційний запит УНН в управлінні комунікацій Національної поліції України. Щодо того, як&nbsp;відрізнити підроблені банкноти, наводимо рекомендації ДКР Національної поліції України: —&nbsp;перевіряти папір і&nbsp;рельєфність зображень на&nbsp;лицьовій стороні; —&nbsp;проти світла шукати водяні знаки, захисну стрічку (повністю занурена в&nbsp;товщу паперу) і&nbsp;наскрізні елементи (зображення, які є&nbsp;і&nbsp;на&nbsp;лицьовому, і&nbsp;на&nbsp;зворотному боці банкноти; можуть поєднуватися або доповнювати один одного); —&nbsp;шукати фарби, які змінюють колір під різними кутами зору; —&nbsp;шукати “віконну” (частково введену в&nbsp;товщу паперу) полімерну захисну стрічку (на&nbsp;банкнотах номіналом 100 гривень зразка 2014 року&nbsp;— темно- сірого кольору, номіналом 500 гривень зразка 2015 року&nbsp;— коричневого); —&nbsp;шукати латентне зображення номіналу, яке можна побачити під час розгляду банкноти проти світла під гострим кутом. “Тим, хто часто має справу з&nbsp;грошима, рекомендуємо придбати спеціальну техніку для перевірки справжності банкнот або збільшувальне скло: з&nbsp;його допомогою можна побачити, наскільки якісно надруковані на&nbsp;грошах мікротексти (якщо вони читаються погано або їх&nbsp;немає&nbsp;— це&nbsp;ознака підробки)”,&nbsp;— йдеться у&nbsp;відповіді. Також, у разі виявлення підробних банкнот громадянами у магазинах, на ринках або на автозаправочних станціях слід негайно викликати поліцію.', '<p class=\"bb_p\"><b class=\"bb_b\">Для того, аби виявити підроблені банкноти варто звертати увагу на рельєфність зображень на лицьовій стороні та зміну кольору під різними кутами зору.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_19-59-43_951.png" alt="" title="" /></p>
<p class=\"bb_p\">Ці та інші рекомендації надали у відповідь на інформаційний запит УНН в управлінні комунікацій Національної поліції України.</p>
<p class=\"bb_p\">Щодо того, як&nbsp;відрізнити підроблені банкноти, наводимо рекомендації ДКР Національної поліції України:</p>
<p class=\"bb_p\">—&nbsp;перевіряти папір і&nbsp;рельєфність зображень на&nbsp;лицьовій стороні;</p>
<p class=\"bb_p\">—&nbsp;проти світла шукати водяні знаки, захисну стрічку (повністю занурена в&nbsp;товщу паперу) і&nbsp;наскрізні елементи (зображення, які є&nbsp;і&nbsp;на&nbsp;лицьовому, і&nbsp;на&nbsp;зворотному боці банкноти; можуть поєднуватися або доповнювати один одного);</p>
<p class=\"bb_p\">—&nbsp;шукати фарби, які змінюють колір під різними кутами зору;</p>
<p class=\"bb_p\">—&nbsp;шукати “віконну” (частково введену в&nbsp;товщу паперу) полімерну захисну стрічку (на&nbsp;банкнотах номіналом 100 гривень зразка 2014 року&nbsp;— темно- сірого кольору, номіналом 500 гривень зразка 2015 року&nbsp;— коричневого);</p>
<p class=\"bb_p\">—&nbsp;шукати латентне зображення номіналу, яке можна побачити під час розгляду банкноти проти світла під гострим кутом.</p>
<p class=\"bb_p\">“Тим, хто часто має справу з&nbsp;грошима, рекомендуємо придбати спеціальну техніку для перевірки справжності банкнот або збільшувальне скло: з&nbsp;його допомогою можна побачити, наскільки якісно надруковані на&nbsp;грошах мікротексти (якщо вони читаються погано або їх&nbsp;немає&nbsp;— це&nbsp;ознака підробки)”,&nbsp;— йдеться у&nbsp;відповіді.</p>
<p class=\"bb_p\">Також, у разі виявлення підробних банкнот громадянами у магазинах, на ринках або на автозаправочних станціях слід негайно викликати поліцію.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/
Економічні новини|Новини|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:00:55:
--------------------------------
UPDATE images SET post_id=1028 WHERE post_id=0;
--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1028 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1028 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:00:55:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1028';
--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT id FROM tags WHERE name = 'Економіка';
--------------------------------
2019.11.10 20:00:55:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1028'::INTEGER AND tag_id = '15'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1028'::INTEGER, '15'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:00:55:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1028'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1028'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:00:55:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1028'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1028'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:00:55:
--------------------------------
UPDATE images SET post_id=1028 WHERE md5='d5ea725955558b311c1b66aa129a5d7e' AND post_id=0;
--------------------------------
2019.11.10 20:00:55:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title = 'На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури';
--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='979df301b6d9a41eff99cd6cdc9dc8d9';
--------------------------------
2019.11.10 20:02:31:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '979df301b6d9a41eff99cd6cdc9dc8d9', '1', '2019-11-10_20-00-55_628.png', '2019-11-10 20:02:31', '1');
--------------------------------
2019.11.10 20:02:31:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури', 'ddedaf4b8e1f1cc502152587770b46b1', 'На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури', 'Першу в Україні онлайн базу артефактів Трипільської культури презентували у державному історико-культурному заповідникові, що у селі Легедзине, на Черкащині, - інформує UA:Черкаси. Керамічні вази, металеві наконечники, залишки фасаду житла прадавнього населення відтепер можна побачити в інтернеті. Зі слів директора заповідника Владислава Чабанюка,500 тисяч гривень на реалізацію цього проекту спрямував Український культурний фонд, ще 140 тисяч гривень надійшло з обласного бюджету. Кілька кліків на смартфоні і перед користувачами з’являється онлайн-ресурс. Розробник сайту Ігор Кондратюк розповідає, – спочатку створили макет, потім над ним працювали програмісти. Світлини для сайту створив Олексій Плесков. Упродовж місяця зробив 1010 фото експонатів музею. Кожен предмет, каже, залежно від об’єму має від 3-х до 12 ракурсів. «Усі ці предмети не схожі один на одний, складність була втому як позиціонувати їх перед камерою. Як його поставити і освітить була цікава задача», - зазначає він. До цього, розповідає чоловік, досвіду роботи із артефактами не мав. Заради вдалих кадрів працював і вночі.&nbsp; «Щось я крутив якусь фігурку, Владислав підійшов до мене і каже, дивися їй 7 тисяч років. А це глина! Отут у мене руки і затрусилися трохи, чесно скажу. Владислав не дасть збрехати я не «коцнув» жодного артефакту», - пригадує Олексій. Тестувати новий ресурс до державного історико-культурного заповідника прийшла чотирнадцятирічна Діана Квичразом із подругами. Каже, користуватися сайтом зручно.&nbsp; «Незважаючи на те, скільки разів ми були у цьому музеї, круто, що придумали такий додаток. Влітку, коли проходять розкопки ти не завжди можеш потрапити у музей. У селі в усіх є інтернет, ти можеш зайти і подивитися, які нові вироби викладають». Створити онлайн-базу трипільських артефактів планували давно, – розповідає директор закладу Владислав Чабанюк. Реалізувати ідею вдалося завдяки сприянню Українського культурного фонду, – додає він.&nbsp; «Трипільська культура ніби така відома, всі про неї десь чули, але конкретно, якщо запитати ніхто нічого не знає. Тому виникла така ідея у моїх рідних і знайомих взятися за це і зробити такий сайт». Частина експонатів, які можна побачити на сайті, – артефакти Борщівського обласного краєзнавчого музею, що на Тернопільщині. Також на ресурсі представлені речі, з фондів заповідника. В експозиції його музею ознайомитися з ними не можна.&nbsp; Дізнатися більше про життя і побут трипільців можна у рубриках: кераміка, предмети з міді, знаряддя праці, зброя, поселення Трипільців, пластика, ткацтво, житлобудування, а також фото і відео архів. Нові артефакти, які знаходитимуть під час розкопок, також будуть додавати на онлайнресурс.', '<p class=\"bb_p\"><b class=\"bb_b\">Першу в Україні онлайн базу артефактів Трипільської культури презентували у державному історико-культурному заповідникові, що у селі Легедзине, на Черкащині, - інформує UA:Черкаси.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-00-55_628.png" alt="" title="" /></p>
<p class=\"bb_p\">Керамічні вази, металеві наконечники, залишки фасаду житла прадавнього населення відтепер можна побачити в інтернеті. Зі слів <b class=\"bb_b\">директора заповідника Владислава Чабанюка,</b>500 тисяч гривень на реалізацію цього проекту спрямував Український культурний фонд, ще 140 тисяч гривень надійшло з обласного бюджету.</p>
<p class=\"bb_p\">Кілька кліків на смартфоні і перед користувачами з’являється онлайн-ресурс. Розробник сайту Ігор Кондратюк розповідає, – спочатку створили макет, потім над ним працювали програмісти.</p>
<p class=\"bb_p\">Світлини для сайту створив <b class=\"bb_b\">Олексій Плесков</b>. Упродовж місяця зробив 1010 фото експонатів музею. Кожен предмет, каже, залежно від об’єму має від 3-х до 12 ракурсів.</p>
<p class=\"bb_p\">«Усі ці предмети не схожі один на одний, складність була втому як позиціонувати їх перед камерою. Як його поставити і освітить була цікава задача», - зазначає він.</p>
<p class=\"bb_p\">До цього, розповідає чоловік, досвіду роботи із артефактами не мав. Заради вдалих кадрів працював і вночі.&nbsp;</p>
<p class=\"bb_p\">«Щось я крутив якусь фігурку, Владислав підійшов до мене і каже, дивися їй 7 тисяч років. А це глина! Отут у мене руки і затрусилися трохи, чесно скажу. Владислав не дасть збрехати я не «коцнув» жодного артефакту», - пригадує Олексій.</p>
<p class=\"bb_p\">Тестувати новий ресурс до державного історико-культурного заповідника прийшла чотирнадцятирічна <b class=\"bb_b\">Діана Квич</b>разом із подругами. Каже, користуватися сайтом зручно.&nbsp;</p>
<p class=\"bb_p\">«Незважаючи на те, скільки разів ми були у цьому музеї, круто, що придумали такий додаток. Влітку, коли проходять розкопки ти не завжди можеш потрапити у музей. У селі в усіх є інтернет, ти можеш зайти і подивитися, які нові вироби викладають».</p>
<p class=\"bb_p\">Створити онлайн-базу трипільських артефактів планували давно, – розповідає директор закладу Владислав Чабанюк. Реалізувати ідею вдалося завдяки сприянню Українського культурного фонду, – додає він.&nbsp;</p>
<p class=\"bb_p\">«Трипільська культура ніби така відома, всі про неї десь чули, але конкретно, якщо запитати ніхто нічого не знає. Тому виникла така ідея у моїх рідних і знайомих взятися за це і зробити такий сайт».</p>
<p class=\"bb_p\">Частина експонатів, які можна побачити на сайті, – артефакти Борщівського обласного краєзнавчого музею, що на Тернопільщині. Також на ресурсі представлені речі, з фондів заповідника. В експозиції його музею ознайомитися з ними не можна.&nbsp;</p>
<p class=\"bb_p\">Дізнатися більше про життя і побут трипільців можна у рубриках: кераміка, предмети з міді, знаряддя праці, зброя, поселення Трипільців, пластика, ткацтво, житлобудування, а також фото і відео архів. Нові артефакти, які знаходитимуть під час розкопок, також будуть додавати на онлайнресурс.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/
Культура|Новини|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:02:31:
--------------------------------
UPDATE images SET post_id=1029 WHERE post_id=0;
--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1029) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:02:31:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1029';
--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT id FROM tags WHERE name = 'Культура';
--------------------------------
2019.11.10 20:02:31:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1029'::INTEGER AND tag_id = '3'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1029'::INTEGER, '3'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:02:31:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1029'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1029'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:02:31:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1029'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1029'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:02:31:
--------------------------------
UPDATE images SET post_id=1029 WHERE md5='979df301b6d9a41eff99cd6cdc9dc8d9' AND post_id=0;
--------------------------------
2019.11.10 20:02:31:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title = 'Черкащани створили щоденник, який мотивує';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 20:03:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 20:03:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 20:03:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 304 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 304 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (304) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:17:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 304
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:18:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Україні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:18:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('запустять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:18:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«індекс')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('цитування»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('науковців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 282 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 282 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (282) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 90 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 90 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (90) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 152 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 152 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (152) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 303 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 303 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (207) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:03:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:22:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 20:03:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 94 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 94 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (94) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 94
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:25:
--------------------------------

                    -- Шломо-вчитель приїхав до Умані з Ізраїлю, щоб навчати дітей паломників-хасидів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Шломо-вчитель')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 94
                        AND posts_tags.tag_id IN(3,5,6,7,8,11,13,18,20,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:25:
--------------------------------

                    -- Шломо-вчитель приїхав до Умані з Ізраїлю, щоб навчати дітей паломників-хасидів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('приїхав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 94
                        AND posts_tags.tag_id IN(3,5,6,7,8,11,13,18,20,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:26:
--------------------------------

                    -- Шломо-вчитель приїхав до Умані з Ізраїлю, щоб навчати дітей паломників-хасидів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Ізраїлю,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 94
                        AND posts_tags.tag_id IN(3,5,6,7,8,11,13,18,20,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:26:
--------------------------------

                    -- Шломо-вчитель приїхав до Умані з Ізраїлю, щоб навчати дітей паломників-хасидів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('навчати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 94
                        AND posts_tags.tag_id IN(3,5,6,7,8,11,13,18,20,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:27:
--------------------------------

                    -- Шломо-вчитель приїхав до Умані з Ізраїлю, щоб навчати дітей паломників-хасидів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('паломників-хасидів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 94
                        AND posts_tags.tag_id IN(3,5,6,7,8,11,13,18,20,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 96 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 96 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (96) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 289 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 289 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (289) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 288 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 288 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (288) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 133 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 133 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (133) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 808 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 808 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (808) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:28:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0af7b5ea9363f487bd6ccf9baf660e15', '100.43.81.116'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:03:28:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:03:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 782 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 782 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:38:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:03:53:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:03:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (939,938,937,936,935,934,933,932,931,930,929,928) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:12:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 20:04:13:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 9 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 9 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 50 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (845,842,839,837,832,831,828,821,809,803) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c3fd8c48516bfe228b81b01e1495f740', '100.43.91.108'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1026,1008) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (992,991) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1025,1009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (997,995) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1029) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1029,1007) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 133 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 133 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (133) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:23:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 133
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:24:
--------------------------------

                    -- Вимагали хабар у валюті: в Умані комунальники хотіли підзаробити на хасидах (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Вимагали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 133
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:25:
--------------------------------

                    -- Вимагали хабар у валюті: в Умані комунальники хотіли підзаробити на хасидах (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('валюті:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 133
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:25:
--------------------------------

                    -- Вимагали хабар у валюті: в Умані комунальники хотіли підзаробити на хасидах (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('комунальники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 133
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:26:
--------------------------------

                    -- Вимагали хабар у валюті: в Умані комунальники хотіли підзаробити на хасидах (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('хотіли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 133
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:26:
--------------------------------

                    -- Вимагали хабар у валюті: в Умані комунальники хотіли підзаробити на хасидах (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('підзаробити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 133
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:27:
--------------------------------

                    -- Вимагали хабар у валюті: в Умані комунальники хотіли підзаробити на хасидах (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('хасидах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 133
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:28:
--------------------------------

                    -- Вимагали хабар у валюті: в Умані комунальники хотіли підзаробити на хасидах (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('(фото)')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 133
                        AND posts_tags.tag_id IN(4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 576 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 576 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (576) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 346 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 346 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (346) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 331 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 331 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (331) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 886 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 886 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (886) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 315 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 315 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (315) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:28:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:04:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 901 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 901 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (901) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 901
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:30:
--------------------------------

                    -- У Черкасах крадієм автомобіля виявився син постраждалого
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 901
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:30:
--------------------------------

                    -- У Черкасах крадієм автомобіля виявився син постраждалого
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('крадієм')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 901
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:31:
--------------------------------

                    -- У Черкасах крадієм автомобіля виявився син постраждалого
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автомобіля')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 901
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:31:
--------------------------------

                    -- У Черкасах крадієм автомобіля виявився син постраждалого
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('виявився')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 901
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:32:
--------------------------------

                    -- У Черкасах крадієм автомобіля виявився син постраждалого
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('постраждалого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 901
                        AND posts_tags.tag_id IN(4,6,7,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 116 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 116 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:04:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (116) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:04:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'fcfdda7ada2968d29d9ba2c78838c866', '37.9.87.181'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:04:47:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 20:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:05:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 20:05:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 20:05:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 20:05:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 20:05:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 20:05:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 20:05:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 20:05:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 20:05:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 20:05:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 20:05:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 20:05:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 20:05:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 20:05:06:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 20:05:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 20:05:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 20:05:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 20:05:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 20:05:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title ='Продукти харчування, які зміцнюють нервову систему' ;
--------------------------------
2019.11.10 20:05:10:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title = 'Черкащани створили щоденник, який мотивує';
--------------------------------
2019.11.10 20:05:59:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='2a7d7f8124bc7eb9bbdc66a9b6bb9685';
--------------------------------
2019.11.10 20:05:59:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '2a7d7f8124bc7eb9bbdc66a9b6bb9685', '1', '2019-11-10_20-05-10_471.png', '2019-11-10 20:05:59', '1');
--------------------------------
2019.11.10 20:07:04:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 20:07:11:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='e3ab378a6474581a5b4b6f6068791757';
--------------------------------
2019.11.10 20:07:11:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'e3ab378a6474581a5b4b6f6068791757', '1', '2019-11-10_20-05-59_765.png', '2019-11-10 20:07:11', '1');
--------------------------------
2019.11.10 20:07:49:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='cf7e37c6d28bac599bfafad33c020012';
--------------------------------
2019.11.10 20:07:49:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'cf7e37c6d28bac599bfafad33c020012', '1', '2019-11-10_20-07-11_322.png', '2019-11-10 20:07:49', '1');
--------------------------------
2019.11.10 20:07:49:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Черкащани створили щоденник, який мотивує', '363114d73884757d71dcf7cf5ed1d61c', 'Черкащани створили щоденник, який мотивує', 'Щоденник Challenger – це порадник, друг та персональний арт-терапевт для підлітків та дітей від 9 років у форматі креативного записника. Більше сотні викликів у форматі арт-записника. Черкащани створили перший український мотиваційний щоденник для підлітка Challenger. Про це повідомляє "Громадське". Він допомагатиме читачам вирішити вікові завдання та проблеми – від протидії булінгу до вміння говорити «ні», коли це необхідно. Єдине, що його потрібно надрукувати. На це команда збирає гроші. «Щоденник – це книга, яку кожен тінейджер має написати про себе. Хоч ми створювали його для дітей від 9 років і підлітків, зараз ми отримуємо відгуки від багатьох дорослих типу: «о, і я такий хочу!», – говорить співавторка мотиваційного щоденника Неля Раіна. Створили щоденник громадська організація «Креатори» та сімейна психологиня Ельвіра Леоненко.Вони усі мами, тож готували челенджер як для своїх дітей. На них і тестували ідею. «У нас є група тестувальників – це наші діти. Вони казали: «ні, це не читатимуть, це не робитимуть». Орієнтуючись на їхню думку, ми реально змінили деякі сторінки», – каже черкащанка. Команда підготувала більше 120 завдань-викликів для підліткового віку та оформила їх на 150 унікальних арт-сторінках. Кожна сторінка – інтерактивна та пропрацьовує ту чи ту тему в психологічному плані. Це спілкування з однолітками і близькими, розуміння себе, вміння мріяти та досягати цілей, планувати, захищати свою думку і кордони. «Є от сторінка про те, як говорити «ні». Дитина не лише читає, а й взаємодіє, додає власні варіанти, викреслює непотрібні. Розуміє, що це нормально і принаймні знатиме, як відмовити на прохання списати чи пропозицію спробувати алкоголь», – каже співавторка мотиваційного щоденника. Проект уже підтримали Джамала, Інна Поперешнюк, Злата Огнєвіч, Тарас Тополя, Максим Оробець, Олександр Грехов. Всі ці люди надали для щоденника або власні роботи (художники) або власні цитати підтримки. Кожна починається словами «коли я був у твоєму віці, я б хотів, щоб мені сказали…». «Таким чином ми хотіли показати що всі, і відомі люди також розуміють і знають, що це таке – підлітковий вік. Що це інколи складно і страшно… Але все минає – головне знайти свій талант, вірити в себе», – додає Неля Раіна. Кожен десятий примірник видання «Щоденник Challenger» передадуть підліткам: внутрішньо-переміщеними особами, та тим, хто проходить тривале лікування. «Ми вже залучили партнерські кошти, щоб зробити відео та оплатити роботу дизайнерки-ілюстраторки. Збираємо винятково на друк – не на рекламні кампанії чи послуги із просування продукту. Тільки якщо кампанія буде успішна на Спільнокошті, тільки тоді вийде друком ця книжка», – додає співавторка щоденника. Підтримати проект можна&nbsp;тут.', '<p class=\"bb_p\"><b class=\"bb_b\">Щоденник Challenger – це порадник, друг та персональний арт-терапевт для підлітків та дітей від 9 років у форматі креативного записника.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-05-10_471.png" alt="" title="" /></p>
<p class=\"bb_p\">Більше сотні викликів у форматі арт-записника. Черкащани створили перший український мотиваційний щоденник для підлітка Challenger. Про це повідомляє "Громадське". Він допомагатиме читачам вирішити вікові завдання та проблеми – від протидії булінгу до вміння говорити «ні», коли це необхідно. Єдине, що його потрібно надрукувати. На це команда збирає гроші.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-05-59_765.png" alt="" title="" /></p>
<p class=\"bb_p\">«Щоденник – це книга, яку кожен тінейджер має написати про себе. Хоч ми створювали його для дітей від 9 років і підлітків, зараз ми отримуємо відгуки від багатьох дорослих типу: «о, і я такий хочу!», – говорить співавторка мотиваційного щоденника <b class=\"bb_b\">Неля Раіна</b>.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-07-11_322.png" alt="" title="" /></p>
<p class=\"bb_p\">Створили щоденник громадська організація «Креатори» та сімейна психологиня <b class=\"bb_b\">Ельвіра Леоненко.</b>Вони усі мами, тож готували челенджер як для своїх дітей. На них і тестували ідею.</p>
<p class=\"bb_p\">«У нас є група тестувальників – це наші діти. Вони казали: «ні, це не читатимуть, це не робитимуть». Орієнтуючись на їхню думку, ми реально змінили деякі сторінки», – каже черкащанка.</p>
<p class=\"bb_p\">Команда підготувала більше 120 завдань-викликів для підліткового віку та оформила їх на 150 унікальних арт-сторінках. Кожна сторінка – інтерактивна та пропрацьовує ту чи ту тему в психологічному плані. Це спілкування з однолітками і близькими, розуміння себе, вміння мріяти та досягати цілей, планувати, захищати свою думку і кордони.</p>
<p class=\"bb_p\">«Є от сторінка про те, як говорити «ні». Дитина не лише читає, а й взаємодіє, додає власні варіанти, викреслює непотрібні. Розуміє, що це нормально і принаймні знатиме, як відмовити на прохання списати чи пропозицію спробувати алкоголь», – каже співавторка мотиваційного щоденника.</p>
<p class=\"bb_p\">Проект уже підтримали <b class=\"bb_b\">Джамала, Інна Поперешнюк, Злата Огнєвіч, Тарас Тополя, Максим Оробець, Олександр Грехов.</b> Всі ці люди надали для щоденника або власні роботи (художники) або власні цитати підтримки. Кожна починається словами «коли я був у твоєму віці, я б хотів, щоб мені сказали…».</p>
<p class=\"bb_p\">«Таким чином ми хотіли показати що всі, і відомі люди також розуміють і знають, що це таке – підлітковий вік. Що це інколи складно і страшно… Але все минає – головне знайти свій талант, вірити в себе», – додає Неля Раіна.</p>
<p class=\"bb_p\">Кожен десятий примірник видання «Щоденник Challenger» передадуть підліткам: внутрішньо-переміщеними особами, та тим, хто проходить тривале лікування.</p>
<p class=\"bb_p\">«Ми вже залучили партнерські кошти, щоб зробити відео та оплатити роботу дизайнерки-ілюстраторки. Збираємо винятково на друк – не на рекламні кампанії чи послуги із просування продукту. Тільки якщо кампанія буде успішна на Спільнокошті, тільки тоді вийде друком ця книжка», – додає співавторка щоденника.</p>
<p class=\"bb_p\">Підтримати проект можна&nbsp;тут.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/
Новини|Освіта|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:07:49:
--------------------------------
UPDATE images SET post_id=1030 WHERE post_id=0;
--------------------------------
2019.11.10 20:07:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1030 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:07:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1030 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:07:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:07:50:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1030';
--------------------------------
2019.11.10 20:07:50:
--------------------------------
SELECT id FROM tags WHERE name = 'Культура';
--------------------------------
2019.11.10 20:07:50:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1030'::INTEGER AND tag_id = '3'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1030'::INTEGER, '3'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:07:50:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:07:50:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1030'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1030'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:07:50:
--------------------------------
SELECT id FROM tags WHERE name = 'Освіта';
--------------------------------
2019.11.10 20:07:50:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1030'::INTEGER AND tag_id = '13'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1030'::INTEGER, '13'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:07:50:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:07:50:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1030'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1030'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:07:50:
--------------------------------
UPDATE images SET post_id=1030 WHERE md5='2a7d7f8124bc7eb9bbdc66a9b6bb9685' AND post_id=0;
--------------------------------
2019.11.10 20:07:50:
--------------------------------
UPDATE images SET post_id=1030 WHERE md5='e3ab378a6474581a5b4b6f6068791757' AND post_id=0;
--------------------------------
2019.11.10 20:07:50:
--------------------------------
UPDATE images SET post_id=1030 WHERE md5='cf7e37c6d28bac599bfafad33c020012' AND post_id=0;
--------------------------------
2019.11.10 20:07:50:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title = '“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину';
--------------------------------
2019.11.10 20:10:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 466 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 466 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (466) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:36:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 466
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:37:
--------------------------------

                    -- Тепло, вогко та туманно буде цього тижня на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Тепло,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 466
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:37:
--------------------------------

                    -- Тепло, вогко та туманно буде цього тижня на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('туманно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 466
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:37:
--------------------------------

                    -- Тепло, вогко та туманно буде цього тижня на Черкащині
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 466
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 943 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 943 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (943) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 437 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 437 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (437) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 461 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 461 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (461) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 638 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 638 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (638) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (710) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:10:38:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 20:10:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:10:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (940,939,938,937,936,935,934,933,932,931,930,929) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 20:13:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 20:13:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 20:14:48:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:15:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 20:15:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 20:15:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 20:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 20:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 20:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 20:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 20:15:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 20:15:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 20:15:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 20:15:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 20:15:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 20:15:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:15:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 20:15:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 20:15:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 20:15:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 20:15:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title ='Продукти харчування, які зміцнюють нервову систему' ;
--------------------------------
2019.11.10 20:15:09:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title = '“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину';
--------------------------------
2019.11.10 20:17:05:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 20:17:24:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='a2d6f2c0c9484042a235871b473e8996';
--------------------------------
2019.11.10 20:17:24:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'a2d6f2c0c9484042a235871b473e8996', '1', '2019-11-10_20-15-09_43.png', '2019-11-10 20:17:24', '1');
--------------------------------
2019.11.10 20:17:24:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину', '12811ba88bc6edc722555c668d13436a', '“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину', 'Відома телеведуча Леся Нікітюк знімає "найсмішніше та водночас найзворушливіше тревел-шоу про Україну та українців "Le Маршрутка". Об’їхавши півсвіту, Леся нарешті відправилась у подорож рідною країною на власній маршрутці. Вона побуває у маловідомих, але неймовірно прекрасних куточках нашої батьківщини, а пасажирами її маршрутки стануть українці з незвичайними історіями. У першому випуску ведуча побувала і на Черкащині. Ведучу вразить чигиринська Орбіта, Кременчуцьке водосховище, село Панське, що розташоване на дамбі і, з її слів, певне, найменше в Україні, творча Золотоноша та багато інших цікавинок. Яких саме - дивіться у випуску:', '<p class=\"bb_p\"><b class=\"bb_b\">Відома телеведуча Леся Нікітюк знімає "найсмішніше та водночас найзворушливіше тревел-шоу про Україну та українців "Le Маршрутка"</b>. <b class=\"bb_b\">Об’їхавши півсвіту, Леся нарешті відправилась у подорож рідною країною на власній маршрутці.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-15-09_43.png" alt="" title="" /></p>
<p class=\"bb_p\">Вона побуває у маловідомих, але неймовірно прекрасних куточках нашої батьківщини, а пасажирами її маршрутки стануть українці з незвичайними історіями.</p>
<p class=\"bb_p\">У першому випуску ведуча побувала і на Черкащині. Ведучу вразить чигиринська Орбіта, Кременчуцьке водосховище, село Панське, що розташоване на дамбі і, з її слів, певне, найменше в Україні, творча Золотоноша та багато інших цікавинок.</p>
<p class=\"bb_p\">Яких саме - дивіться у випуску:</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/
Культура|Новини|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:17:24:
--------------------------------
UPDATE images SET post_id=1031 WHERE post_id=0;
--------------------------------
2019.11.10 20:17:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1031 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:17:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1031 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:17:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1031) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:17:25:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1031';
--------------------------------
2019.11.10 20:17:25:
--------------------------------
SELECT id FROM tags WHERE name = 'Культура';
--------------------------------
2019.11.10 20:17:25:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1031'::INTEGER AND tag_id = '3'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1031'::INTEGER, '3'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:17:25:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:17:25:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1031'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1031'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:17:25:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:17:25:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1031'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1031'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:17:25:
--------------------------------
UPDATE images SET post_id=1031 WHERE md5='a2d6f2c0c9484042a235871b473e8996' AND post_id=0;
--------------------------------
2019.11.10 20:17:25:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title = 'У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії';
--------------------------------
2019.11.10 20:18:18:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='f0cb64a5f1aee4780022865db51999f5';
--------------------------------
2019.11.10 20:18:18:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'f0cb64a5f1aee4780022865db51999f5', '1', '2019-11-10_20-17-25_69.png', '2019-11-10 20:18:18', '1');
--------------------------------
2019.11.10 20:18:39:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='c6829858fef0808e7eda0af1c4fbba3d';
--------------------------------
2019.11.10 20:18:39:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'c6829858fef0808e7eda0af1c4fbba3d', '1', '2019-11-10_20-18-18_268.png', '2019-11-10 20:18:39', '1');
--------------------------------
2019.11.10 20:18:39:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії', '28644ff5025b61fafa708c26d12c1d57', 'У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії', 'Учора ми повідомляли, що у Варшаві затримали випускника черкаського вишу, ветерана АТО, одного з лідерів УНА-УНСО, 46-річного ветерана АТО&nbsp;Ігоря Мазура ("Тополю"). Як зазначив&nbsp;екснардеп&nbsp;Ігор Мосійчук,Мазура затримали за запитом Російської Федерації і звинувачують у тероризмі. На його захист піднялася значна частина суспільства, а під посольством Польщі у Києві провели акцію на підтримку ветерана. Уже з''явилася і реакція польської сторони. Зокрема, віце-маршал польського Сейму Малґожата Ґошєвська зазначила, шо це було "виключно технічне питання" і запевнила, що "дорога до Росії не є відкритою". "Я закликаю до спокою та розсудливості. Затримання на польському кордоні Ігоря Мазура є виключно технічним виконанням Республікою міжнародних угод та зобов''язань. Відважний громадянський активіст і ветеран війни на Донбасі, Грузії та Чечні став жертвою дій східних сусідів. Він був внесений російськими службами до реєстру затримань Інтерполу. Це – наочний приклад використання Кремлем інститутів міжнародного права для політичної помсти. Ми не можемо піддатися на провокацію. Ми не можемо бути акторами російського сценарію. Польща зробила те, що мусила була зробити. Вона затримала особу, яка фігурує в реєстрі. Але – для з’ясування ситуації. Ми вже багато чого знаємо. І я запевняю вас, що дорога до Росії не є відкритою. Польська влада та суди ретельно розслідуватимуть цю справу, а я, зі свого боку, допомагаю і гарантую невинність Ігоря Мазура щодо російських звинувачень", - написала вона на своїй сторінці у Facebook.', '<p class=\"bb_p\"><b class=\"bb_b\">Учора ми повідомляли, що у Варшаві затримали випускника черкаського вишу, ветерана АТО, одного з лідерів УНА-УНСО, 46-річного ветерана АТО&nbsp;Ігоря Мазура ("Тополю").</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-17-25_69.png" alt="" title="" /></p>
<p class=\"bb_p\">Як зазначив&nbsp;екснардеп&nbsp;<b class=\"bb_b\">Ігор Мосійчук,</b>Мазура затримали за запитом Російської Федерації і звинувачують у тероризмі.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-18-18_268.png" alt="" title="" /></p>
<p class=\"bb_p\">На його захист піднялася значна частина суспільства, а  під посольством Польщі у Києві провели акцію на підтримку ветерана.</p>
<p class=\"bb_p\">Уже з''явилася і реакція польської сторони. Зокрема, віце-маршал польського Сейму  <b class=\"bb_b\">Малґожата Ґошєвська</b> зазначила, шо це було "виключно технічне питання" і запевнила, що "дорога до Росії не є відкритою".</p>
<p class=\"bb_p\">"Я закликаю до спокою та розсудливості. Затримання на польському кордоні Ігоря Мазура є виключно технічним виконанням Республікою міжнародних угод та зобов''язань. Відважний громадянський активіст і ветеран війни на Донбасі, Грузії та Чечні став жертвою дій східних сусідів. Він був внесений російськими службами до реєстру затримань Інтерполу. Це – наочний приклад використання Кремлем інститутів міжнародного права для політичної помсти. Ми не можемо піддатися на провокацію. Ми не можемо бути акторами російського сценарію. Польща зробила те, що мусила була зробити. Вона затримала особу, яка фігурує в реєстрі. Але – для з’ясування ситуації. Ми вже багато чого знаємо. І я запевняю вас, що дорога до Росії не є відкритою. Польська влада та суди ретельно розслідуватимуть цю справу, а я, зі свого боку, допомагаю і гарантую невинність Ігоря Мазура щодо російських звинувачень", - написала вона на своїй сторінці у Facebook.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/
АТО у особах|Вісник АТО|Новини|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:18:39:
--------------------------------
UPDATE images SET post_id=1032 WHERE post_id=0;
--------------------------------
2019.11.10 20:18:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1032 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:18:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1032 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:18:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1032) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:18:39:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1032';
--------------------------------
2019.11.10 20:18:39:
--------------------------------
SELECT id FROM tags WHERE name = 'Війна на сході';
--------------------------------
2019.11.10 20:18:39:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1032'::INTEGER AND tag_id = '14'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1032'::INTEGER, '14'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:18:39:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:18:39:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1032'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1032'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:18:39:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:18:40:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1032'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1032'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:18:40:
--------------------------------
UPDATE images SET post_id=1032 WHERE md5='f0cb64a5f1aee4780022865db51999f5' AND post_id=0;
--------------------------------
2019.11.10 20:18:40:
--------------------------------
UPDATE images SET post_id=1032 WHERE md5='c6829858fef0808e7eda0af1c4fbba3d' AND post_id=0;
--------------------------------
2019.11.10 20:18:40:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title = 'У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей';
--------------------------------
2019.11.10 20:20:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 209 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 209 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (209) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:25:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 209
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:25:
--------------------------------

                    -- Військовим відправили чергову партію вантажівок з Черкас
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Військовим')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 209
                        AND posts_tags.tag_id IN(4,5,6,9,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:26:
--------------------------------

                    -- Військовим відправили чергову партію вантажівок з Черкас
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відправили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 209
                        AND posts_tags.tag_id IN(4,5,6,9,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:26:
--------------------------------

                    -- Військовим відправили чергову партію вантажівок з Черкас
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чергову')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 209
                        AND posts_tags.tag_id IN(4,5,6,9,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:27:
--------------------------------

                    -- Військовим відправили чергову партію вантажівок з Черкас
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('партію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 209
                        AND posts_tags.tag_id IN(4,5,6,9,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:28:
--------------------------------

                    -- Військовим відправили чергову партію вантажівок з Черкас
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вантажівок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 209
                        AND posts_tags.tag_id IN(4,5,6,9,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:28:
--------------------------------

                    -- Військовим відправили чергову партію вантажівок з Черкас
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 209
                        AND posts_tags.tag_id IN(4,5,6,9,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (134) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:20:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ec13c9b9083f3f587d155cdcc007a674', '66.249.64.139'::inet, 'Chrome' );
--------------------------------
2019.11.10 20:20:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:20:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (942,941,940,939,938,937,936,935,934,933,932,931) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 285 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 285 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (285) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:32:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 285
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:32:
--------------------------------

                    -- Вчені спростували головну гіпотезу Дарвіна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('спростували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 285
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:32:
--------------------------------

                    -- Вчені спростували головну гіпотезу Дарвіна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('головну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 285
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:33:
--------------------------------

                    -- Вчені спростували головну гіпотезу Дарвіна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гіпотезу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 285
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:33:
--------------------------------

                    -- Вчені спростували головну гіпотезу Дарвіна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Дарвіна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 285
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 280 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 280 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (280) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 250 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 250 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 223 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 223 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (223) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 32 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 32 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (32) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (207) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:21:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 638 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 638 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (638) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:42:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 638
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:44:
--------------------------------

                    -- До +19: сьогодні синоптики прогнозують черкащанам тепло
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сьогодні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 638
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:45:
--------------------------------

                    -- До +19: сьогодні синоптики прогнозують черкащанам тепло
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('синоптики')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 638
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:46:
--------------------------------

                    -- До +19: сьогодні синоптики прогнозують черкащанам тепло
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('прогнозують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 638
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:47:
--------------------------------

                    -- До +19: сьогодні синоптики прогнозують черкащанам тепло
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 638
                        AND posts_tags.tag_id IN(4,5,6,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (758) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (27) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 215 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 215 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (215) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 280 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 280 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (280) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1030 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1030 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:21:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:21:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 20:23:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 20:23:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 20:24:45:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:25:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 20:25:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 20:25:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 20:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 20:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 20:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 20:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 20:25:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 20:25:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 20:25:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 20:25:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 20:25:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title ='Продукти харчування, які зміцнюють нервову систему' ;
--------------------------------
2019.11.10 20:25:08:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title = 'У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей';
--------------------------------
2019.11.10 20:27:02:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 20:27:29:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='3a0789187f0f9e22605e0f576948b339';
--------------------------------
2019.11.10 20:27:29:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '3a0789187f0f9e22605e0f576948b339', '1', '2019-11-10_20-25-08_723.png', '2019-11-10 20:27:29', '1');
--------------------------------
2019.11.10 20:27:29:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей', 'b8bd7f1d317ce7ab02d48bf139fbe6a0', 'У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей', 'Якість цьогорічної кампанії з оздоровлення та відпочинку оцінили в області. Її підсумки підбили на розширеному засіданні, яке відбулося 7 листопада в облдержадміністрації. За даними Держстатзвітності, на Черкащині проживають118,8 тис. дітей шкільного віку. Послугами оздоровлення та відпочинку охоплено 80,7 тис., що становить 68% від загальної чисельності дітей шкільного віку. З них 48 тис. дітей соціально незахищених категорій. На проведення оздоровчої кампанії з обласного та місцевих бюджетів використано 25,8 млн грн. Зокрема, з обласного бюджету спрямували 8,6 млн грн, з місцевих бюджетів – 16,8 млн грн. Втім деякі ОТГ, відзначив начальник управління у справах сім’ї, молоді та спорту облдержадміністрації Максим Зеленський, не передбачили у власному бюджеті кошти на оздоровлення, що призвело до зменшення кількості дітей, охоплених цими послугами. – Оздоровлення дітей у літній період – складова частина роботи обласної влади, тому перед нами стояла важлива мета – створити умови для якісного забезпечення оздоровлення, збереження життя дітей та подальшого формування їхньої життєвої компетентності, – зазначив Максим Зеленський. – Хочу нагадати, що наступного року показник охоплення дітей оздоровленням та відпочинком буде рахуватися лише за кошти, які будуть виділені районними, міськими бюджетами та бюджетами об’єднаних територіальних громад. Тому ми повинні максимально спрацювати, щоб цей показник у 2020 році був вище 2019. Загалом, послуги оздоровлення та відпочинку влітку надавали 724 заклади області. В них були створені всі необхідні умови для безпечного, змістовного проведення дозвілля дітей. Управління у справах сім?ї, молоді та спорту обласної державної адміністрації здійснюється щорічне направлення дітей до державних центрів український дитячий центр «Молода гвардія» (УДЦ «Молода гвардія») та міжнародного дитячого центру «Артек» (МДЦ «Артек»). За звітний період, до МДЦ «Артек» направлено 269 дітей, до УДЦ «Молода гвардія» – 253 дітей. – Прошу максимально проводити роз’яснювальну роботу серед батьків структурними підрозділами районних державних адміністрацій, виконавчих комітетів міських рад міст обласного значення, об?єднаних територіальних громад, до компетенції яких належить питання організації оздоровлення та відпочинку дітей, щодо цільового використання всіх путівок протягом року та щодо недопущення передчасного залишення дітьми дитячих центрів, – підсумував Максим Зеленський. За інформацією пресслужби облдержадміністрації', '<p class=\"bb_p\"><b class=\"bb_b\">Якість цьогорічної кампанії з оздоровлення та відпочинку оцінили в області. Її підсумки підбили на розширеному засіданні, яке відбулося 7 листопада в облдержадміністрації.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-25-08_723.png" alt="" title="" /></p>
<p class=\"bb_p\">За даними Держстатзвітності, на Черкащині проживають118,8 тис. дітей шкільного віку. Послугами оздоровлення та відпочинку охоплено 80,7 тис., що становить 68% від загальної чисельності дітей шкільного віку. З них 48 тис. дітей соціально незахищених категорій.</p>
<p class=\"bb_p\">На проведення оздоровчої кампанії з обласного та місцевих бюджетів використано 25,8 млн грн. Зокрема, з обласного бюджету спрямували 8,6 млн грн, з місцевих бюджетів – 16,8 млн грн. Втім деякі ОТГ, відзначив <b class=\"bb_b\">начальник управління у справах сім’ї, молоді та спорту облдержадміністрації Максим Зеленський</b>, не передбачили у власному бюджеті кошти на оздоровлення, що призвело до зменшення кількості дітей, охоплених цими послугами.</p>
<p class=\"bb_p\">– Оздоровлення дітей у літній період – складова частина роботи обласної влади, тому перед нами стояла важлива мета – створити умови для якісного забезпечення оздоровлення, збереження життя дітей та подальшого формування їхньої життєвої компетентності, – зазначив Максим Зеленський. – Хочу нагадати, що наступного року показник охоплення дітей оздоровленням та відпочинком буде рахуватися лише за кошти, які будуть виділені районними, міськими бюджетами та бюджетами об’єднаних територіальних громад. Тому ми повинні максимально спрацювати, щоб цей показник у 2020 році був вище 2019.</p>
<p class=\"bb_p\">Загалом, послуги оздоровлення та відпочинку влітку надавали 724 заклади області. В них були створені всі необхідні умови для безпечного, змістовного проведення дозвілля дітей.</p>
<p class=\"bb_p\">Управління у справах сім?ї, молоді та спорту обласної державної адміністрації здійснюється щорічне направлення дітей до державних центрів український дитячий центр «Молода гвардія» (УДЦ «Молода гвардія») та міжнародного дитячого центру «Артек» (МДЦ «Артек»). За звітний період, до МДЦ «Артек» направлено 269 дітей, до УДЦ «Молода гвардія» – 253 дітей.</p>
<p class=\"bb_p\">– Прошу максимально проводити роз’яснювальну роботу серед батьків структурними підрозділами районних державних адміністрацій, виконавчих комітетів міських рад міст обласного значення, об?єднаних територіальних громад, до компетенції яких належить питання організації оздоровлення та відпочинку дітей, щодо цільового використання всіх путівок протягом року та щодо недопущення передчасного залишення дітьми дитячих центрів, – підсумував Максим Зеленський.</p>
<p class=\"bb_p\"><b class=\"bb_b\">За інформацією пресслужби облдержадміністрації</b></p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/
Здоров''я|Новини|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:27:29:
--------------------------------
UPDATE images SET post_id=1033 WHERE post_id=0;
--------------------------------
2019.11.10 20:27:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1033 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:27:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1033 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:27:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1033) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:27:30:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1033';
--------------------------------
2019.11.10 20:27:30:
--------------------------------
SELECT id FROM tags WHERE name = 'Медицина';
--------------------------------
2019.11.10 20:27:30:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1033'::INTEGER AND tag_id = '12'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1033'::INTEGER, '12'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:27:30:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:27:30:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1033'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1033'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:27:30:
--------------------------------
SELECT id FROM tags WHERE name = 'Спорт';
--------------------------------
2019.11.10 20:27:30:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1033'::INTEGER AND tag_id = '10'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1033'::INTEGER, '10'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:27:30:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:27:30:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1033'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1033'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:27:30:
--------------------------------
UPDATE images SET post_id=1033 WHERE md5='3a0789187f0f9e22605e0f576948b339' AND post_id=0;
--------------------------------
2019.11.10 20:27:30:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title = 'Продукти харчування, які зміцнюють нервову систему';
--------------------------------
2019.11.10 20:28:00:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='e79c09c0e8786f17ed5da4cc2b2713d7';
--------------------------------
2019.11.10 20:28:00:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'e79c09c0e8786f17ed5da4cc2b2713d7', '1', '2019-11-10_20-27-30_107.png', '2019-11-10 20:28:00', '1');
--------------------------------
2019.11.10 20:28:00:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Продукти харчування, які зміцнюють нервову систему', 'f81cda2e4e9aba4240120b10c8f5d845', 'Продукти харчування, які зміцнюють нервову систему', 'Стрес – це неспецифічна реакція організму у відповідь на дуже сильну дію (подразник) зовні, яка перевищує норму; відповідна реакція нервової системи. &nbsp;Якщо ви відчуваєте роздратування, занепокоєння – варто включити у свій раціон фрукти та овочі, які, завдяки вмісту поживних речовин (вітаміни групи В, магній, фосфор), сприяють зміцненню нервової системи. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Продукти, які допомагають заспокоїти нерви: зелені листові овочі. Додавайте до основних страв зелений салат, руколу, крес-салат, шпинат у якості гарніру; базилік. Його можна вживати сирим, у вигляді трав’яного чаю, соусу, заправки для салатів; використовувати його ефірну олію для розслаблюючих ванн, адже базилік – природний засіб не лише для заспокоєння нервів, а й для зняття симптомів психосоматичного характеру (біль у шлунку, розлад травлення); сочевиця, спаржа. Сочевиця покращує стан нервової системи завдяки вмісту магнію та вітамінів групи В. Окрім того, вона є джерелом рослинного білка й клітковини; пшеничні висівки, нешліфований рис, вівсянка, пшоно, гречка. Вживання вівсянки поповнює запас енергії, допомагає боротися з занепокоєнням, роздратуванням; насіння гарбуза, кунжуту, кеш’ю, мигдаль, волоські горіхи. Високий вміст у волоських горіхах незамінних жирних кислот сприяє виробленню серотоніну – гормону, який сприяє гарному настрою, позбавляє відчуття тривоги. Вміст у них вітамінів групи В зміцнює нервову систему; банани, чорнослив, фініки, родзинки, інжир. Банани багаті на калій, вітаміни групи В, що дуже корисно для нервової системи. Окрім того, вони багаті на вуглеводи, що дає організму енергію; чорний шоколад, какао. 40 грамів шоколаду на день допомагають долати стрес; лимони. Цитрусові покращують настрій та насичують організм поживними речовинами; ромашка. Ромашковий чай корисно вживати перед сном, адже він підвищує в організмі рівень гліцину, амінокислоти, що заспокоює нервову систему. За інформацією пресслужби УОЗ ОДА &nbsp;', '<p class=\"bb_p\"><b class=\"bb_b\">Стрес – це неспецифічна реакція організму у відповідь на дуже сильну дію (подразник) зовні, яка перевищує норму; відповідна реакція нервової системи.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-27-30_107.png" alt="" title="" /></p>
<p class=\"bb_p\">&nbsp;Якщо ви відчуваєте роздратування, занепокоєння – варто включити у свій раціон фрукти та овочі, які, завдяки вмісту поживних речовин (вітаміни групи В, магній, фосфор), сприяють зміцненню нервової системи.</p>
<p class=\"bb_p\"><b class=\"bb_b\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Продукти, які допомагають заспокоїти нерви:</b></p>
<p class=\"bb_p\">зелені листові овочі. Додавайте до основних страв зелений салат, руколу, крес-салат, шпинат у якості гарніру;</p>
<p class=\"bb_p\">базилік. Його можна вживати сирим, у вигляді трав’яного чаю, соусу, заправки для салатів; використовувати його ефірну олію для розслаблюючих ванн, адже базилік – природний засіб не лише для заспокоєння нервів, а й для зняття симптомів психосоматичного характеру (біль у шлунку, розлад травлення);</p>
<p class=\"bb_p\">сочевиця, спаржа. Сочевиця покращує стан нервової системи завдяки вмісту магнію та вітамінів групи В. Окрім того, вона є джерелом рослинного білка й клітковини;</p>
<p class=\"bb_p\">пшеничні висівки, нешліфований рис, вівсянка, пшоно, гречка. Вживання вівсянки поповнює запас енергії, допомагає боротися з занепокоєнням, роздратуванням;</p>
<p class=\"bb_p\">насіння гарбуза, кунжуту, кеш’ю, мигдаль, волоські горіхи. Високий вміст у волоських горіхах незамінних жирних кислот сприяє виробленню серотоніну – гормону, який сприяє гарному настрою, позбавляє відчуття тривоги. Вміст у них вітамінів групи В зміцнює нервову систему;</p>
<p class=\"bb_p\">банани, чорнослив, фініки, родзинки, інжир. Банани багаті на калій, вітаміни групи В, що дуже корисно для нервової системи. Окрім того, вони багаті на вуглеводи, що дає організму енергію;</p>
<p class=\"bb_p\">чорний шоколад, какао. 40 грамів шоколаду на день допомагають долати стрес;</p>
<p class=\"bb_p\">лимони. Цитрусові покращують настрій та насичують організм поживними речовинами;</p>
<p class=\"bb_p\">ромашка. Ромашковий чай корисно вживати перед сном, адже він підвищує в організмі рівень гліцину, амінокислоти, що заспокоює нервову систему.</p>
<p class=\"bb_p\"><b class=\"bb_b\">За інформацією пресслужби УОЗ ОДА &nbsp;</b></p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/
Здоров''я|Новини', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:28:00:
--------------------------------
UPDATE images SET post_id=1034 WHERE post_id=0;
--------------------------------
2019.11.10 20:28:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1034 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:28:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1034 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:28:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1034) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:28:00:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1034';
--------------------------------
2019.11.10 20:28:00:
--------------------------------
SELECT id FROM tags WHERE name = 'Медицина';
--------------------------------
2019.11.10 20:28:00:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1034'::INTEGER AND tag_id = '12'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1034'::INTEGER, '12'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:28:00:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:28:00:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1034'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1034'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:28:00:
--------------------------------
SELECT id FROM tags WHERE name = 'Спорт';
--------------------------------
2019.11.10 20:28:00:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1034'::INTEGER AND tag_id = '10'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1034'::INTEGER, '10'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:28:00:
--------------------------------
UPDATE images SET post_id=1034 WHERE md5='e79c09c0e8786f17ed5da4cc2b2713d7' AND post_id=0;
--------------------------------
2019.11.10 20:28:01:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/%' OR title ='Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику' ;
--------------------------------
2019.11.10 20:28:01:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/%' OR title ='На Черкащині хочуть дістати із дамби ставка німецький танк' ;
--------------------------------
2019.11.10 20:28:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhani-masovo-shheplyuyutsya-vid-gripu/%' OR title ='Черкащани масово щеплюються від грипу' ;
--------------------------------
2019.11.10 20:28:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/zgorila-kvartira-cherkashhanka-ta-yiyi-2-richna-ditina-potrebuyut-terminovoyi-dopomogi-foto/%' OR title ='Згоріла квартира: черкащанка та її 2-річна дитина потребують термінової допомоги' ;
--------------------------------
2019.11.10 20:28:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhanka-stala-radnitseyu-prem-yer-ministra-ukrayini/%' OR title ='Черкащанка стала радницею прем’єр-міністра України' ;
--------------------------------
2019.11.10 20:28:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/tam-de-ye-mova-tam-nemaye-tankiv-u-chdtu-doluchilisya-do-napisannya-vseukrayinskogo-diktantu/%' OR title ='Там де є мова, там немає танків: у ЧДТУ долучилися до написання Всеукраїнського диктанту' ;
--------------------------------
2019.11.10 20:28:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-kam-yantsi-norvezhtsi-vidremontuvali-dorogu/%' OR title ='У Кам’янці норвежці відремонтували дорогу' ;
--------------------------------
2019.11.10 20:28:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-prezentuvali-pershu-onlajn-bazu-artefaktiv-tripilskoyi-kulturi-video/%' OR title ='На Черкащині презентували першу онлайн-базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:28:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-cherkasah-vidkrili-vistavku-znevazhenij-genotsid/%' OR title ='У Черкасах відкрили виставку «Зневажений геноцид»' ;
--------------------------------
2019.11.10 20:28:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkasets-u-svoyij-avtivtsi-voziv-gvintivku-mosina-zi-snajperskim-pritsilom/%' OR title ='Черкащанин у своїй автівці возив гвинтівку Мосіна зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:28:03:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/%' OR title = 'Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику';
--------------------------------
2019.11.10 20:29:47:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1271e4c45ed4637a6714dbca31c48eac';
--------------------------------
2019.11.10 20:29:47:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '1271e4c45ed4637a6714dbca31c48eac', '1', '2019-11-10_20-28-03_34.png', '2019-11-10 20:29:47', '1');
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 20:33:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 20:33:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 20:34:45:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:35:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 20:35:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 20:35:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 20:35:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 20:35:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 20:35:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 20:35:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 20:35:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 20:35:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 20:35:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/produkty-kharchuvannia-iaki-zmitsniuiut-nervovu-systemu/%' OR title ='Продукти харчування, які зміцнюють нервову систему' ;
--------------------------------
2019.11.10 20:35:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/%' OR title ='Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику' ;
--------------------------------
2019.11.10 20:35:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/%' OR title ='На Черкащині хочуть дістати із дамби ставка німецький танк' ;
--------------------------------
2019.11.10 20:35:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhani-masovo-shheplyuyutsya-vid-gripu/%' OR title ='Черкащани масово щеплюються від грипу' ;
--------------------------------
2019.11.10 20:35:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/zgorila-kvartira-cherkashhanka-ta-yiyi-2-richna-ditina-potrebuyut-terminovoyi-dopomogi-foto/%' OR title ='Згоріла квартира: черкащанка та її 2-річна дитина потребують термінової допомоги' ;
--------------------------------
2019.11.10 20:35:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhanka-stala-radnitseyu-prem-yer-ministra-ukrayini/%' OR title ='Черкащанка стала радницею прем’єр-міністра України' ;
--------------------------------
2019.11.10 20:35:11:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/tam-de-ye-mova-tam-nemaye-tankiv-u-chdtu-doluchilisya-do-napisannya-vseukrayinskogo-diktantu/%' OR title ='Там де є мова, там немає танків: у ЧДТУ долучилися до написання Всеукраїнського диктанту' ;
--------------------------------
2019.11.10 20:35:11:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-kam-yantsi-norvezhtsi-vidremontuvali-dorogu/%' OR title ='У Кам’янці норвежці відремонтували дорогу' ;
--------------------------------
2019.11.10 20:35:12:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-prezentuvali-pershu-onlajn-bazu-artefaktiv-tripilskoyi-kulturi-video/%' OR title ='На Черкащині презентували першу онлайн-базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:35:12:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-cherkasah-vidkrili-vistavku-znevazhenij-genotsid/%' OR title ='У Черкасах відкрили виставку «Зневажений геноцид»' ;
--------------------------------
2019.11.10 20:35:12:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkasets-u-svoyij-avtivtsi-voziv-gvintivku-mosina-zi-snajperskim-pritsilom/%' OR title ='Черкащанин у своїй автівці возив гвинтівку Мосіна зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:35:12:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/%' OR title = 'Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику';
--------------------------------
2019.11.10 20:36:58:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1271e4c45ed4637a6714dbca31c48eac';
--------------------------------
2019.11.10 20:37:04:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 20:38:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 709 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 709 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (709) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:40:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 709
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:40:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='a3b838a1375326b667be9b58b4f2ef84';
--------------------------------
2019.11.10 20:38:40:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'a3b838a1375326b667be9b58b4f2ef84', '1', '2019-11-10_20-36-58_802.png', '2019-11-10 20:38:40', '1');
--------------------------------
2019.11.10 20:38:41:
--------------------------------

                    -- На Черкащині зафіксовано аномальне тепло
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 709
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:42:
--------------------------------

                    -- На Черкащині зафіксовано аномальне тепло
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зафіксовано')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 709
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:43:
--------------------------------

                    -- На Черкащині зафіксовано аномальне тепло
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('аномальне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 709
                        AND posts_tags.tag_id IN(4,5,6)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 190 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 190 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (190) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 301 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 301 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:38:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (301) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:39:49:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='b87ccde5e3c377477cca53f4b818e6bf';
--------------------------------
2019.11.10 20:39:49:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', 'b87ccde5e3c377477cca53f4b818e6bf', '1', '2019-11-10_20-38-40_448.png', '2019-11-10 20:39:49', '1');
--------------------------------
2019.11.10 20:39:49:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику', 'ea99d10685f116034753cd981b07984f', 'Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику', 'Екологічні вафельно-шоколадні стаканчики, трубочки з соломи та паперу, а також термоси та власні чашки зі знижками: такі цінності пропагує серед молоді одна з кав’ярень у Корсуні, що на Черкащині. Про свою ініціативу розповіла учасниця форуму «ГРАНТуємо зміни 5.0» Наталія Іваненко, пише «Інфоміст». Пропонувати відвідувачам екологічні замінники звичайного пластикового посуду кав’ярня розпочала ще два роки тому. За словами Наталії, для бізнесу така ідея не є найкращою, але для довкілля – дуже важлива. – На перших етапах для бізнесу – це 100 відсотків збитки. Але з часом, коли кількість свідомих людей більшає, то це приносить свій прибуток. Ми часто беремо участь в різних фестивалях, а на них їздить молодь, яка переживає за свою країну. У нас була дівчинка, яка побачила наші солом’яні трубочки, й запропонувала намалювати картинку на екологічну тему. Ми її почепили в кафе, – розповідає Наталія. Загалом у кав’ярні пропонують кілька різновидів екологічних товарів на противагу пластиковим виробам: трубочки з паперу та соломи, вафельно-шоколадні стаканчики, термоси та знижки, якщо клієнт приходить із власною чашкою. Трубочок є два різновиди тому, що паперові використовують для холодних напоїв, адже в гарячих вони будуть розмокати. Для останніх у кав’ярні пропонують трубочки з жита. Наталія розповідає, що робити їх просто. – Житні ми замовляємо з сусіднього села, де люди їх створюють. Вони зрізають житні стеблинки, сушать їх і потім привозять нам. У кав’ярні трубочки обережно складені, тому з ними нічого не може статися, – говорить Наталя. Варто зазначити, що наразі екотренди стають все більш популярними. Так, у Черкасах існує проєкт «Eco Friendly Cafe», який запропонувала екоактивістка Лідія Криштоп. Екофрендлікафе – це українська, віртуальна мережа кав’ярень, які погодилися давати людям знижку, якщо вони прийдуть брати каву не в паперовий стаканчик, а в свою чашку. Зараз ця мережа розширилася. Раніше була лише в Черкасах під такою назвою, а тоді цю ідею підхопили інші активісти.', '<p class=\"bb_p\">Екологічні вафельно-шоколадні стаканчики, трубочки з соломи та паперу, а також термоси та власні чашки зі знижками: такі цінності пропагує серед молоді одна з кав’ярень у Корсуні, що на Черкащині.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-35-12_47.png" alt="" title="" /></p>
<p class=\"bb_p\">Про свою ініціативу розповіла учасниця форуму «ГРАНТуємо зміни 5.0» Наталія Іваненко, пише «Інфоміст».</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-36-58_802.png" alt="" title="" /></p>
<p class=\"bb_p\">Пропонувати відвідувачам екологічні замінники звичайного пластикового посуду кав’ярня розпочала ще два роки тому. За словами Наталії, для бізнесу така ідея не є найкращою, але для довкілля – дуже важлива.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-38-40_448.png" alt="" title="" /></p>
<p class=\"bb_p\">– На перших етапах для бізнесу – це 100 відсотків збитки. Але з часом, коли кількість свідомих людей більшає, то це приносить свій прибуток. Ми часто беремо участь в різних фестивалях, а на них їздить молодь, яка переживає за свою країну. У нас була дівчинка, яка побачила наші солом’яні трубочки, й запропонувала намалювати картинку на екологічну тему. Ми її почепили в кафе, – розповідає Наталія.</p>
<p class=\"bb_p\">Загалом у кав’ярні пропонують кілька різновидів екологічних товарів на противагу пластиковим виробам: трубочки з паперу та соломи, вафельно-шоколадні стаканчики, термоси та знижки, якщо клієнт приходить із власною чашкою.</p>
<p class=\"bb_p\">Трубочок є два різновиди тому, що паперові використовують для холодних напоїв, адже в гарячих вони будуть розмокати. Для останніх у кав’ярні пропонують трубочки з жита. Наталія розповідає, що робити їх просто.</p>
<p class=\"bb_p\">– Житні ми замовляємо з сусіднього села, де люди їх створюють. Вони зрізають житні стеблинки, сушать їх і потім привозять нам. У кав’ярні трубочки обережно складені, тому з ними нічого не може статися, – говорить Наталя.</p>
<p class=\"bb_p\">Варто зазначити, що наразі екотренди стають все більш популярними. Так, у Черкасах існує проєкт «Eco Friendly Cafe», який запропонувала екоактивістка Лідія Криштоп. Екофрендлікафе – це українська, віртуальна мережа кав’ярень, які погодилися давати людям знижку, якщо вони прийдуть брати каву не в паперовий стаканчик, а в свою чашку. Зараз ця мережа розширилася. Раніше була лише в Черкасах під такою назвою, а тоді цю ідею підхопили інші активісти.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/" target="_blank">За матеріалами "vycherpno.ck.ua"</a></p></div>', 'http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/
Новини', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:39:49:
--------------------------------
UPDATE images SET post_id=1035 WHERE post_id=0;
--------------------------------
2019.11.10 20:39:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1035 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:39:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1035 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:39:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1035) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:39:49:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1035';
--------------------------------
2019.11.10 20:39:49:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:39:49:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1035'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1035'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:39:49:
--------------------------------
UPDATE images SET post_id=1035 WHERE md5='1271e4c45ed4637a6714dbca31c48eac' AND post_id=0;
--------------------------------
2019.11.10 20:39:49:
--------------------------------
UPDATE images SET post_id=1035 WHERE md5='a3b838a1375326b667be9b58b4f2ef84' AND post_id=0;
--------------------------------
2019.11.10 20:39:49:
--------------------------------
UPDATE images SET post_id=1035 WHERE md5='b87ccde5e3c377477cca53f4b818e6bf' AND post_id=0;
--------------------------------
2019.11.10 20:39:49:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/%' OR title = 'На Черкащині хочуть дістати із дамби ставка німецький танк';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 20:43:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 20:44:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 496 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 496 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 496 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (496) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 496
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 496 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (496) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 496
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:12:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відбудеться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:12:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відбудеться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:12:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пробне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:12:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пробне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ЗНО-2020')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 458 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 458 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (458) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 797 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 797 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (797) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 56 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 56 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (56) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------

                    -- Коли відбудеться пробне ЗНО-2020
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ЗНО-2020')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 496
                        AND posts_tags.tag_id IN(3,4,5,7,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (57) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 799 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 799 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (57) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 799 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 799 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (799) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (799) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1c68f10227e3a746c851729db131da46', '2a03:2880:31ff:a::face:b00c'::inet, '[Bot] Facebook' );
--------------------------------
2019.11.10 20:44:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '653605716349bfab22e9b6c9b37eb4a3', '2a03:2880:31ff:12::face:b00c'::inet, '[Bot] Facebook' );
--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (945,944,943,942,941,940,939,938,937,936,935,934) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:44:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (945,944,943,942,941,940,939,938,937,936,935,934) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:44:42:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:45:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 20:45:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 20:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 20:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 20:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 20:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 20:45:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 20:45:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 20:45:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 20:45:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 20:45:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 20:45:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 20:45:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 20:45:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-kanevi-malozabezpechenym-hromadianam-daiut-bezkoshtovni-drova/%' OR title ='У Каневі малозабезпеченим громадянам дають безкоштовні дрова' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 20:45:07:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-kanevi-malozabezpechenym-hromadianam-daiut-bezkoshtovni-drova/%' OR title = 'У Каневі малозабезпеченим громадянам дають безкоштовні дрова';
--------------------------------
2019.11.10 20:46:58:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='71b22c6e025dc45038e5dd3c69c27392';
--------------------------------
2019.11.10 20:47:15:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('У Каневі малозабезпеченим громадянам дають безкоштовні дрова', '08c741a8fa89c0a41c3f29a0b0a4982e', 'У Каневі малозабезпеченим громадянам дають безкоштовні дрова', 'Канівське комунальне підприємство «Місто», що займається, зокрема, санітарною вирізкою дерев, забезпечувало малозабезпечені категорії громадян відходами деревини у вигляді дров для опалення осель. Протягом останніх років послуга набула значної популярності, - зазначають у міській раді. Ще б пак, на ринку машина дров сьогодні коштує до 5 тис.грн. А тут безкоштовно, та ще й привезуть до самої оселі. Однак кількість пільгових категорій, які можуть претендувати на допомогу у вигляді дров, розширилась. Зокрема, додалися учасники бойових дій в зоні АТО. Відповідно, збільшилась і кількість заяв, що надходять на ім’я міського голови. Відтак, постала необхідність упорядкувати систему надання натуральної допомоги. Для цього члени виконкому зібралися на позачергове засідання. Серед іншого вони затвердили Положення про порядок надання натуральної допомоги (безкоштовне виділення дров) та склад комісії по розгляду звернень на їх отримання, встановили і об’єм натуральної допомоги в обсязі 4,3 м куб. дров. Ухвалене рішення передбачає, що відтепер особи, яким виділено дрова, мають оплатити транспортні витрати, понесені&nbsp; підприємством, або ж зможуть забрати їх самостійно з місця складування.&nbsp; Також у ході засідання було затверджено перелік громадян, яким передбачається надання допомоги у вигляді відходів деревини.', '<p class=\"bb_p\"><b class=\"bb_b\">Канівське комунальне підприємство «Місто», що займається, зокрема, санітарною вирізкою дерев, забезпечувало малозабезпечені категорії громадян відходами деревини у вигляді дров для опалення осель.</b></p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-45-07_679.png" alt="" title="" /></p>
<p class=\"bb_p\">Протягом останніх років послуга набула значної популярності, - зазначають у міській раді.</p>
<p class=\"bb_p\">Ще б пак, на ринку машина дров сьогодні коштує до 5 тис.грн. А тут безкоштовно, та ще й привезуть до самої оселі. Однак кількість пільгових категорій, які можуть претендувати на допомогу у вигляді дров, розширилась. Зокрема, додалися учасники бойових дій в зоні АТО. Відповідно, збільшилась і кількість заяв, що надходять на ім’я міського голови. Відтак, постала необхідність упорядкувати систему надання натуральної допомоги.</p>
<p class=\"bb_p\">Для цього члени виконкому зібралися на позачергове засідання. Серед іншого вони затвердили Положення про порядок надання натуральної допомоги (безкоштовне виділення дров) та склад комісії по розгляду звернень на їх отримання, встановили і об’єм натуральної допомоги в обсязі 4,3 м куб. дров.</p>
<p class=\"bb_p\">Ухвалене рішення передбачає, що відтепер особи, яким виділено дрова, мають оплатити транспортні витрати, понесені&nbsp; підприємством, або ж зможуть забрати їх самостійно з місця складування.&nbsp;</p>
<p class=\"bb_p\">Також у ході засідання було затверджено перелік громадян, яким передбачається надання допомоги у вигляді відходів деревини.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="https://provce.ck.ua/u-kanevi-malozabezpechenym-hromadianam-daiut-bezkoshtovni-drova/" target="_blank">За матеріалами "provce.ck.ua"</a></p></div>', 'https://provce.ck.ua/u-kanevi-malozabezpechenym-hromadianam-daiut-bezkoshtovni-drova/
ЖКГ|Канів|Новини|Райони|Суспільні', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:47:15:
--------------------------------
UPDATE images SET post_id=1036 WHERE post_id=0;
--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1036 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1036 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1036) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:47:15:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1036';
--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT id FROM tags WHERE name = 'Життя міста';
--------------------------------
2019.11.10 20:47:15:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1036'::INTEGER AND tag_id = '23'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1036'::INTEGER, '23'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT id FROM tags WHERE name = 'Мерія';
--------------------------------
2019.11.10 20:47:15:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1036'::INTEGER AND tag_id = '4'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1036'::INTEGER, '4'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:47:15:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1036'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1036'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:47:15:
--------------------------------
SELECT id FROM tags WHERE name = 'Райони';
--------------------------------
2019.11.10 20:47:16:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1036'::INTEGER AND tag_id = '6'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1036'::INTEGER, '6'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:47:16:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:47:16:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1036'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1036'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:47:16:
--------------------------------
UPDATE images SET post_id=1036 WHERE md5='71b22c6e025dc45038e5dd3c69c27392' AND post_id=0;
--------------------------------
2019.11.10 20:47:16:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/%' OR title ='Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику' ;
--------------------------------
2019.11.10 20:47:16:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/%' OR title ='На Черкащині хочуть дістати із дамби ставка німецький танк' ;
--------------------------------
2019.11.10 20:47:19:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhani-masovo-shheplyuyutsya-vid-gripu/%' OR title ='Черкащани масово щеплюються від грипу' ;
--------------------------------
2019.11.10 20:47:22:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/zgorila-kvartira-cherkashhanka-ta-yiyi-2-richna-ditina-potrebuyut-terminovoyi-dopomogi-foto/%' OR title ='Згоріла квартира: черкащанка та її 2-річна дитина потребують термінової допомоги' ;
--------------------------------
2019.11.10 20:47:25:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhanka-stala-radnitseyu-prem-yer-ministra-ukrayini/%' OR title ='Черкащанка стала радницею прем’єр-міністра України' ;
--------------------------------
2019.11.10 20:47:28:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/tam-de-ye-mova-tam-nemaye-tankiv-u-chdtu-doluchilisya-do-napisannya-vseukrayinskogo-diktantu/%' OR title ='Там де є мова, там немає танків: у ЧДТУ долучилися до написання Всеукраїнського диктанту' ;
--------------------------------
2019.11.10 20:47:31:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-kam-yantsi-norvezhtsi-vidremontuvali-dorogu/%' OR title ='У Кам’янці норвежці відремонтували дорогу' ;
--------------------------------
2019.11.10 20:47:32:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-prezentuvali-pershu-onlajn-bazu-artefaktiv-tripilskoyi-kulturi-video/%' OR title ='На Черкащині презентували першу онлайн-базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:47:32:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-cherkasah-vidkrili-vistavku-znevazhenij-genotsid/%' OR title ='У Черкасах відкрили виставку «Зневажений геноцид»' ;
--------------------------------
2019.11.10 20:47:32:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkasets-u-svoyij-avtivtsi-voziv-gvintivku-mosina-zi-snajperskim-pritsilom/%' OR title ='Черкащанин у своїй автівці возив гвинтівку Мосіна зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:47:32:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-kam-yantsi-norvezhtsi-vidremontuvali-dorogu/%' OR title = 'У Кам’янці норвежці відремонтували дорогу';
--------------------------------
2019.11.10 20:48:49:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='3d0189940c9cbbf33eadbb42b250ce63';
--------------------------------
2019.11.10 20:48:49:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('У Кам’янці норвежці відремонтували дорогу', 'e0e43c62a02514254bd64cce6a368216', 'У Кам’янці норвежці відремонтували дорогу', 'У Кам’янці закінчують монтувати сонячну електростанцію потужністю 25 мВт на колишньому кагатному полі цукрозаводу. Роботи виконує норвезька компанія Scatec Solar, яка має досвід будівництва сонячних панелей в багатьох країнах світу, пишуть «Вечірні Черкаси». Під час укладання кабелю в канаву компанія вимушена була розрити частину старого асфальту на вулиці Сонячна. – Норвежці зразу пообіцяли, що трохи згодом відновлять зруйновані ділянки. А тим часом керівництво Кам’янської міської ради запропонувало їм у якості кроку доброї волі відремонтувати усю вулицю Сонячну, – розповідає місцевий житель Олександр. Прізвище не хоче називати. – Й компанія погодилася. Зараз закінчуються асфальтні роботи. До кінця жовтня всю вулицю буде заасфальтовано. Міський голова Кам’янки Володимир Тірон каже, що європейські компанії не мають погіршувати інфраструктуру в місті. – Саме з цього ми виходили, коли запропонували компанії відновити покриття. Та й вони самі були не проти. У підсумку вклали 400 метрів асфальту на суму трохи більшу ніж 700 тисяч гривень. Перед цим у нас рили траншеї газовики. Згодом вони заасфальтували власним коштом усі вулиці, де пошкодили асфальт.', '<p class=\"bb_p\">У Кам’янці закінчують монтувати сонячну електростанцію потужністю 25 мВт на колишньому кагатному полі цукрозаводу. Роботи виконує норвезька компанія Scatec Solar, яка має досвід будівництва сонячних панелей в багатьох країнах світу, пишуть «Вечірні Черкаси».</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-47-32_464.png" alt="" title="" /></p>
<p class=\"bb_p\">Під час укладання кабелю в канаву компанія вимушена була розрити частину старого асфальту на вулиці Сонячна.</p>
<p class=\"bb_p\">– Норвежці зразу пообіцяли, що трохи згодом відновлять зруйновані ділянки. А тим часом керівництво Кам’янської міської ради запропонувало їм у якості кроку доброї волі відремонтувати усю вулицю Сонячну, – розповідає місцевий житель Олександр. Прізвище не хоче називати. – Й компанія погодилася. Зараз закінчуються асфальтні роботи. До кінця жовтня всю вулицю буде заасфальтовано.</p>
<p class=\"bb_p\">Міський голова Кам’янки Володимир Тірон каже, що європейські компанії не мають погіршувати інфраструктуру в місті.</p>
<p class=\"bb_p\">– Саме з цього ми виходили, коли запропонували компанії відновити покриття. Та й вони самі були не проти. У підсумку вклали 400 метрів асфальту на суму трохи більшу ніж 700 тисяч гривень. Перед цим у нас рили траншеї газовики. Згодом вони заасфальтували власним коштом усі вулиці, де пошкодили асфальт.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="http://vycherpno.ck.ua/u-kam-yantsi-norvezhtsi-vidremontuvali-dorogu/" target="_blank">За матеріалами "vycherpno.ck.ua"</a></p></div>', 'http://vycherpno.ck.ua/u-kam-yantsi-norvezhtsi-vidremontuvali-dorogu/
Новини', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:48:49:
--------------------------------
UPDATE images SET post_id=1037 WHERE post_id=0;
--------------------------------
2019.11.10 20:48:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1037 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:48:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1037 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:48:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1037) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:48:49:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1037';
--------------------------------
2019.11.10 20:48:49:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:48:49:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1037'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1037'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:48:49:
--------------------------------
UPDATE images SET post_id=1037 WHERE md5='3d0189940c9cbbf33eadbb42b250ce63' AND post_id=0;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/10/post-37109%' OR title ='Черкащанин урятував лебедя, підстреленого браконьєрами' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/10/post-37106%' OR title ='На Черкащині знайшли мертвим чоловіка, який зник півроку тому' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/10/post-37104%' OR title ='В Умані чоловік жбурляв коктейлі Молотова у вікна батькам і бабусі' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/10/post-37101%' OR title ='За пошкоджене відправлення “Нова Пошта” сплатить черкащанину понад 17 тисяч грн компенсації' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/09/post-37098%' OR title ='У Черкасах пенсіонерка випала з балкону багатоповерхівки' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/09/post-37095%' OR title ='На Черкащині жінка незаконно отримала майже 50 тис. грн субсидії' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/09/post-37092%' OR title ='Двоє бізнесменів та колишній правоохоронець побили родину у Кам’янці' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/09/post-37089%' OR title ='Уманчанин удруге став чемпіоном Кубку України з боксу серед студентів' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/09/post-37086%' OR title ='Черкащанка розробила екологічну настільну гру' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/09/post-37083%' OR title ='На очищення двох річок потрібно понад 2 мільйони гривень' ;
--------------------------------
2019.11.10 20:48:50:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/10/post-37106%' OR title = 'На Черкащині знайшли мертвим чоловіка, який зник півроку тому';
--------------------------------
2019.11.10 20:49:16:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='cec9650bc0bf4a167d322c6b2903d936';
--------------------------------
2019.11.10 20:49:16:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('На Черкащині знайшли мертвим чоловіка, який зник півроку тому', '5911bf51463e8afd7d9ba456eacaa1bc', 'На Черкащині знайшли мертвим чоловіка, який зник півроку тому', '59-річного Петра Литовченка із Золотоноші знайшли неживим у лісі, в районі Червоної Слободи. Пошуки чоловіка тривали з початку літа, востаннє його бачили у рідному місті 9 червня.Про це сайту vikka.ua розповіла донька загиблого Ірина.Тіло чоловіка виявили мисливці. Черкащанин загинув від переохолодження, адже лежав там ще з літа. Експерт не міг назвати навіть приблизної дати смерті. Рідні впізнали Петра завдяки особистим речам.За іронією долі, загиблий також полюбляв ходити на полювання. Як розповідає його донька, Петро Олександрович був позитивною людиною. Мав трьох дітей, п’ятьох онуків та чимало друзів.Золотонісці пам’ятають Петра Литовченка як відповідального водія, який тривалий час працював за кермом місцевого автобуса.Похорон чоловіка відбудеться у середу, 6 листопада.Зазначимо, до пошуку Петра Литовченка залучались усі небайдужі черкащани. Кілька разів чоловіка бачили у Черкасах та Червоній Слободі. За словами рідних, у Петра була часткова втрата пам’яті через травму голови.', '<p class=\"bb_p\">59-річного Петра Литовченка із Золотоноші знайшли неживим у лісі, в районі Червоної Слободи. Пошуки чоловіка тривали з початку літа, востаннє його бачили у рідному місті 9 червня.</p><p class=\"bb_p\">Про це сайту vikka.ua розповіла донька загиблого Ірина.</p><p class=\"bb_p\">Тіло чоловіка виявили мисливці. Черкащанин загинув від переохолодження, адже лежав там ще з літа. Експерт не міг назвати навіть приблизної дати смерті. Рідні впізнали Петра завдяки особистим речам.</p><p class=\"bb_p\">За іронією долі, загиблий також полюбляв ходити на полювання. Як розповідає його донька, Петро Олександрович був позитивною людиною. Мав трьох дітей, п’ятьох онуків та чимало друзів.</p><p class=\"bb_p\">Золотонісці пам’ятають Петра Литовченка як відповідального водія, який тривалий час працював за кермом місцевого автобуса.</p><p class=\"bb_p\">Похорон чоловіка відбудеться у середу, 6 листопада.</p><p class=\"bb_p\">Зазначимо, до пошуку Петра Литовченка залучались усі небайдужі черкащани. Кілька разів чоловіка бачили у Черкасах та Червоній Слободі. За словами рідних, у Петра була часткова втрата пам’яті через травму голови.</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-48-50_567.png" alt="" title="" /></p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="http://ridnyi.com.ua/news/2019/11/10/post-37106" target="_blank">За матеріалами "ridnyi.com.ua"</a></p></div>', 'http://ridnyi.com.ua/news/2019/11/10/post-37106
Суспільство|Черкащина', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:49:16:
--------------------------------
UPDATE images SET post_id=1038 WHERE post_id=0;
--------------------------------
2019.11.10 20:49:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1038 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:49:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1038 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:49:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1038) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:49:16:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1038';
--------------------------------
2019.11.10 20:49:16:
--------------------------------
SELECT id FROM tags WHERE name = 'Мерія';
--------------------------------
2019.11.10 20:49:16:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1038'::INTEGER AND tag_id = '4'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1038'::INTEGER, '4'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:49:16:
--------------------------------
SELECT id FROM tags WHERE name = 'Суспільство';
--------------------------------
2019.11.10 20:49:16:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1038'::INTEGER AND tag_id = '7'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1038'::INTEGER, '7'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:49:16:
--------------------------------
UPDATE images SET post_id=1038 WHERE md5='cec9650bc0bf4a167d322c6b2903d936' AND post_id=0;
--------------------------------
2019.11.10 20:49:16:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://ridnyi.com.ua/news/2019/11/10/post-37104%' OR title = 'В Умані чоловік жбурляв коктейлі Молотова у вікна батькам і бабусі';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Кібербезпека';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Космос';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Технології';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Хакери';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Віруси';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Hardware';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Software';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Соцмережі';
--------------------------------
2019.11.10 20:53:02:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://ukr.media/science/405395/%' OR title ='Як дешево і стильно оновити інтер''єр в орендованій квартирі' ;
--------------------------------
2019.11.10 20:54:43:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1630299bfc6cd8696bed4e9aee54ba0e';
--------------------------------
2019.11.10 20:54:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 450 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 450 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (450) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 450
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:46:
--------------------------------

                    -- Черкащани діляться враженнями від нового колеса огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 450
                        AND posts_tags.tag_id IN(3,4,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:47:
--------------------------------

                    -- Черкащани діляться враженнями від нового колеса огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('діляться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 450
                        AND posts_tags.tag_id IN(3,4,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:48:
--------------------------------

                    -- Черкащани діляться враженнями від нового колеса огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('враженнями')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 450
                        AND posts_tags.tag_id IN(3,4,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:49:
--------------------------------

                    -- Черкащани діляться враженнями від нового колеса огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нового')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 450
                        AND posts_tags.tag_id IN(3,4,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:51:
--------------------------------

                    -- Черкащани діляться враженнями від нового колеса огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('колеса')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 450
                        AND posts_tags.tag_id IN(3,4,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:52:
--------------------------------

                    -- Черкащани діляться враженнями від нового колеса огляду
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('огляду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 450
                        AND posts_tags.tag_id IN(3,4,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 181 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 181 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (181) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 814 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 814 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (814) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (758) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 352 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 352 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (352) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (27) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:54:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 20:54:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (948,947,946,945,944,943,942,941,940,939,938,937) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 300 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 300 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (300) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:33:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:33:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 300
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------

                    -- «Аль Мор» оголошує конкурс фентезі-коміксів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('оголошує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 300
                        AND posts_tags.tag_id IN(3,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------

                    -- «Аль Мор» оголошує конкурс фентезі-коміксів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('конкурс')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 300
                        AND posts_tags.tag_id IN(3,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------

                    -- «Аль Мор» оголошує конкурс фентезі-коміксів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фентезі-коміксів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 300
                        AND posts_tags.tag_id IN(3,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 282 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 282 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (282) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (117) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 205 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 205 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (205) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 295 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 295 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (295) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (328) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e4d2ca2acb6b418567ebb450e474782a', '66.249.64.94'::inet, 'Chrome' );
--------------------------------
2019.11.10 20:55:35:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:55:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:55:45:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 20:56:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 617 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 617 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (617) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 617
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:30:
--------------------------------

                    -- У першій лікарні Черкас, відкритій понад 200 років тому, були чотири ліжка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('першій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 617
                        AND posts_tags.tag_id IN(3,4,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:30:
--------------------------------

                    -- У першій лікарні Черкас, відкритій понад 200 років тому, були чотири ліжка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лікарні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 617
                        AND posts_tags.tag_id IN(3,4,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:31:
--------------------------------

                    -- У першій лікарні Черкас, відкритій понад 200 років тому, були чотири ліжка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 617
                        AND posts_tags.tag_id IN(3,4,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:32:
--------------------------------

                    -- У першій лікарні Черкас, відкритій понад 200 років тому, були чотири ліжка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відкритій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 617
                        AND posts_tags.tag_id IN(3,4,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:32:
--------------------------------

                    -- У першій лікарні Черкас, відкритій понад 200 років тому, були чотири ліжка
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чотири')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 617
                        AND posts_tags.tag_id IN(3,4,6,7,10,11,12,13,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:32:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (134) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:56:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 13 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 13 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1030,1005,981,980,973,972,966,965,960,959) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:56:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1036,1026) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1025,1009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (997,995) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1031) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1031,1030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 858 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 858 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (858) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:40:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 858
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:41:
--------------------------------

                    -- Черкащина розпочала створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащина')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 858
                        AND posts_tags.tag_id IN(4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:42:
--------------------------------

                    -- Черкащина розпочала створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розпочала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 858
                        AND posts_tags.tag_id IN(4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:44:
--------------------------------

                    -- Черкащина розпочала створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('створення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 858
                        AND posts_tags.tag_id IN(4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:45:
--------------------------------

                    -- Черкащина розпочала створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бренду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 858
                        AND posts_tags.tag_id IN(4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:46:
--------------------------------

                    -- Черкащина розпочала створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('регіону')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 858
                        AND posts_tags.tag_id IN(4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 416 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 416 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (416) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 683 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 683 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (683) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 811 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 811 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (811) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 561 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 561 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (561) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 943 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 943 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:56:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (943) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:56:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 20:57:01:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='df2f2e85d3b31a018f155375caf9812e';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Новини';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Життя міста';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Суспільство';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Події';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Мерія';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Війна на сході';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Спорт';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Політика';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Райони';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Поліція';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Військомат';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Особистість';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Свято';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Екологія';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Економіка';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Погода';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Релігія';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Культура';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Освіта';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Наука';
--------------------------------
2019.11.10 20:58:02:
--------------------------------
SELECT count(id) as count FROM tags WHERE name='Медицина';
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/kaniv-inicziyuye-bazhannya-pryyednatysya-do-inicziatyvy-gromada-druzhnya-do-ditej-ta-molodi/%' OR title ='Канів ініціює бажання приєднатися до ініціативи «Громада, дружня до дітей та молоді»' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-iz-cherkaskyh-patrulnyj-nesvoyechasno-podav-deklaracziyu-prokuratura-vidkryla-kryminalne-provadzhennya/%' OR title ='Один із черкаських патрульний несвоєчасно подав декларацію. Прокуратура відкрила кримінальне провадження' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/odyn-z-cherkaskyh-zabudovnykiv-vyrishyv-ne-platyty-majzhe-piv-miljona-gryven-derzhavi/%' OR title ='Один з черкаських забудовників вирішив не платити майже пів мільйона гривень державі' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/medychna-reforma-shho-robyty-cherkashhanam-yaki-dosi-ne-obraly-simejnogo-likarya/%' OR title ='Медична реформа: що робити черкащанам, які досі не обрали сімейного лікаря' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/dsnsnyka-prytyagnuly-do-adminvidpovidalnosti-cherez-nesvoyechasne-podannya-deklaracziyi/%' OR title ='ДСНСника притягнули до адмінвідповідальності через несвоєчасне подання декларації' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhyna-doluchylasya-do-strategichnogo-planuvannya-u-sferi-povodzhennya-z-pobutovymy-vidhodamy/%' OR title ='Черкащина долучилася до стратегічного планування у сфері поводження з побутовими відходами' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/eks-deputatka-z-cherkashhyny-stala-radnyczeyu-ministra/%' OR title ='Екс-депутатка з Черкащини стала радницею міністра' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/cherkashhany-rozpovily-chy-gotovi-vidmovytysya-vid-surzhyku-foto/%' OR title ='Черкащани розповіли, чи готові відмовитися від суржику' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/u-misczevomu-byudzheti-na-2020-rik-trolejbusnykam-ne-peredbacheno-zhodnoyi-kopijky/%' OR title ='У місцевому бюджеті на 2020 рік тролейбусникам не передбачено жодної копійки' ;
--------------------------------
2019.11.10 20:58:03:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://dzvin.media/news/na-irdynskyh-bolotah-zatrymaly-brakonyera-z-sitkamy/%' OR title ='На Ірдинських болотах затримали браконьєра з сітками' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/yak-ubezpechiti-sebe-vid-shaxra%d1%97v-abo-neyakisnogo-tovaru-v-interneti-poradi-faxivciv/%' OR title ='Як убезпечити себе від шахраїв або неякісного товару в інтернеті? Поради фахівців' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/bilshe-dvox-soten-strokovikiv-popovnili-lavi-prikordonnikiv-foto/%' OR title ='Більше двох сотень строковиків поповнили лави прикордонників' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/vnochi-v-avtivci-cherkascya-viyavili-gvintivku-zi-snajperskim-pricilom/%' OR title ='Уночі в автівці черкасця виявили гвинтівку зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/z%d1%97zdila-na-orbitu-ta-pobuvala-v-gurtozhitku-yak-le-marshrutka-z-lesyeyu-nikityuk-mandruvala-cherkashhinoyu-video/%' OR title ='З’їздила на Орбіту та побувала в гуртожитку. Як “Le Маршрутка” з Лесєю Нікітюк мандрувала Черкащиною?' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/cherkashhanka-stala-radniceyu-premyera/%' OR title ='Черкащанка стала радницею прем’єра' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/prokuratura-vidkrila-kriminalne-provadzhennya-na-eks-patrulnogo-yakij-ne-podav-deklaraciyu-pri-zvilnenni/%' OR title ='Прокуратура відкрила кримінальне провадження на екс-патрульного, який не подав декларацію при звільненні' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/gromadi-v-di%d1%97-u-cherkasax-upyate-vidbuvsya-regionalnij-forum-grantuyemo-zmini-foto/%' OR title ='“Громади в дії”. У Черкасах уп’яте відбувся регіональний форум «ГРАНТуємо зміни»' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/u-kremenchucke-vodosxovishhe-vipustili-4-tonni-ribi-foto/%' OR title ='У Кременчуцьке водосховище випустили 4 тонни риби' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/svitlofori-yakimi-opikuvalosya-mvs-peredadut-na-balans-misksvitla-perelik/%' OR title ='Світлофори, якими опікувалося МВС, передадуть на баланс “Міськсвітла”' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://18000.com.ua/strichka-novin/na-remonti-dva-dni-tranzitnij-transport-ruxatimetsya-cherez-zolotonoshu/%' OR title ='На ремонті. Два дні транзитний транспорт рухатиметься через Золотоношу' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/pryvitaly-pratsivnykiv-kultury-shpolianskoi-oth/%' OR title ='Привітали працівників культури Шполянської ОТГ' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/08/nove-obladnannia-dlia-nush-ta-posud-u-kharchobloky-dlia-doshkilniat/%' OR title ='Нове обладнання для НУШ та посуд у харчоблоки для дошкільнят' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/do-uvahy-pidpryiemstv-ta-pidpryiemtsiv/%' OR title ='До уваги підприємств та підприємців!' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/07/u-miskij-zosh-5-provely-remont-problemnoi-steli/%' OR title ='У міській ЗОШ № 5 провели ремонт проблемної стелі' ;
--------------------------------
2019.11.10 20:58:04:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title ='Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019' ;
--------------------------------
2019.11.10 20:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/u-klasakh-miskoi-shkoly-2-litsej-vikna-zamineni-ditiam-teplo-i-bezpechno/%' OR title ='У класах міської школи № 2-ліцей вікна замінені: дітям тепло і безпечно' ;
--------------------------------
2019.11.10 20:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/miska-himnaziia-3-oblashtovana-novymy-tualetamy/%' OR title ='Міська гімназія № 3 облаштована новими туалетами' ;
--------------------------------
2019.11.10 20:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/fond-profinansuvav-2-3-mln-dniv-dohliadu-za-khvorymy-ditmy/%' OR title ='Фонд профінансував 2,3 млн днів догляду за хворими дітьми' ;
--------------------------------
2019.11.10 20:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/informatsiia-shchodo-naiavnosti-likarskykh-zasobiv-vytratnykh-materialiv-medychnykh-vyrobiv-ta-kharchovykh-produktiv-dlia-spetsialnoho-diietychnoho-spozhyvannia-otrymanykh-za-koshty-derzhavnoho-ta-27/%' OR title ='Інформація щодо наявності лікарських засобів, витратних матеріалів, медичних виробів та харчових продуктів для спеціального дієтичного споживання, отриманих за кошти державного та місцевого бюджетів, благодійної діяльності і гуманітарної допомоги' ;
--------------------------------
2019.11.10 20:58:05:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/05/ne-hasnut-mystetski-talanty-shpolianskoi-hromady/%' OR title ='Не гаснуть мистецькі таланти Шполянської громади' ;
--------------------------------
2019.11.10 20:58:05:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://shpola-otg.gov.ua/2019/11/06/rishennia-45-i-pozacherhovoi-sesii-shpolianskoi-miskoi-rady-oth-viii-sklykannia-05-11-2019/%' OR title = 'Рішення 45-ї позачергової сесії Шполянської міської ради ОТГ VIII скликання 05.11.2019';
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanskij-peduniversitet-nalagodiv/%' OR title ='Уманський педуніверситет налагодив співпрацю із партнерами у Литві та Білорусії' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/zhniva-2019-na-cherkashhini-pidbili-pidsumki/%' OR title ='Жнива-2019: на Черкащині підбили підсумки кампанії по збору врожаю' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/na-umanshhini-rozpochali-remont-zrujnov/%' OR title ='На Уманщині розпочали ремонт зруйнованого мосту в селі Коржова Слобода' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umani-shtrafuvatimut-vodiiv-za-pere/%' OR title ='В Умані штрафуватимуть водіїв за перевезення дітей без автокрісел' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/uman-vidvidav-vidomij-pismennik-ta/%' OR title ='Умань відвідав відомий український письменник та мандрівник Макс Кідрук' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/rjatuvalniki-zaklikali-umanchan-nega/%' OR title ='Рятувальники закликали уманчан негайно перевірити стан пічного опалення' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/duet-iz-sela-na-umanshhini-otrimav-prizo/%' OR title ='Дует із села на Уманщині отримав призове місце на Всеукраїнському фестивалі' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/juni-umanchani-pokazali-visokij-rezul/%' OR title ='Юні уманчани показали високий результат на Всеукраїнському турнірі з футболу' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/umanski-vchiteli-projshli-trening-shhod/%' OR title ='Уманські вчителі пройшли тренінг щодо роботи з особливими дітьми' ;
--------------------------------
2019.11.10 20:58:06:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://vch-uman.in.ua/v-umanskomu-peduniversiteti-projde-2/%' OR title ='В Уманському педуніверситеті пройде День відкритих дверей' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/protyagom-dvoh-dib-tranzy-tny-j-transport-ruhaty-met-sya-vy-klyuchno-cherez-zolotonoshu/%' OR title ='Протягом двох діб транзитний транспорт рухатиметься виключно через Золотоношу' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/tsentr-sotsdopomogy-dostavlyaty-me-garyachi-obidy-lyudyam-pohy-logo-viku/%' OR title ='Центр соцдопомоги доставлятиме гарячі обіди людям похилого віку' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/08/zolotonis-ka-shkola-informatsijny-h-tehnologij-pidpy-sala-try-storonnyu-ugodu-z-chdtu-foto/%' OR title ='Золотоніська школа інформаційних технологій підписала тристоронню угоду з ЧДТУ [ФОТО]' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/ne-mayemo-prava-vtraty-ty-tsej-shans-dlya-formuvannya-elity-ukrayiny-lyubov-deny-syuk/%' OR title ='«Не маємо права втратити цей шанс для формування еліти України», – Любов Денисюк' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/prodovzhuyet-sya-rekonstruktsiya-ob-yiznoyi-dorogy-dovkola-zolotonoshi/%' OR title ='Продовжується реконструкція об’їзної дороги довкола Золотоноші' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/shkolyari-mista-otry-muvaty-mut-oblasni-ta-prezy-dents-ki-sty-pendiyi/%' OR title ='Школярі міста отримуватимуть обласні та президентські стипендії' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/11/05/u-zolotonis-komu-dratssi-vidkry-ly-suchasny-j-open-space/%' OR title ='У Золотоніському ДРАЦСі відкрили сучасний Open Space' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/zolotonis-ki-sportsmeny-pry-vezly-10-medalej-iz-oblasnoyi-pershosti-kiokushy-n-karate-foto/%' OR title ='Золотоніські спортсмени привезли 10 медалей із обласної першості кіокушин карате [ФОТО]' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/uchasny-ky-zolotonis-koyi-ligy-smihu-gotuyut-sya-do-final-noyi-gry-sezonu/%' OR title ='Учасники золотоніської Ліги сміху готуються до фінальної гри сезону' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://zolotonosha.ck.ua/2019/10/30/predstavny-ky-kanady-ta-vely-koyi-bry-taniyi-navchaty-mut-zolotonis-ky-h-shkolyariv/%' OR title ='Представники Канади та Великої Британії навчатимуть золотоніських школярів' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-kanevi-malozabezpechenym-hromadianam-daiut-bezkoshtovni-drova/%' OR title ='У Каневі малозабезпеченим громадянам дають безкоштовні дрова' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/bilia-druzhby-narodiv-u-cherkasakh-zatrymaly-molodyka-z-narkotykamy/%' OR title ='Біля “Дружби народів” у Черкасах затримали молодика з наркотиками' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-khrystynivshchyni-zavershyly-remont-dorohy-smerti/%' OR title ='На Христинівщині завершили ремонт “дороги смерті”' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkas-ki-futzalistky-zdobuly-pershu-peremohu/%' OR title ='Черкаські футзалістки здобули першу перемогу' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/yak-cherkashchanam-rozpiznaty-fal-shyvi-hroshi/%' OR title ='Як черкащанам розпізнати фальшиві гроші' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/na-cherkashchyni-prezentuvaly-pershu-v-ukraini-on-bazu-artefaktiv-trypil-s-koi-kul-tury/%' OR title ='На Черкащині презентували першу в Україні онлайн базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/cherkashchany-stvoryly-shchodennyk-iakyy-motyvuie/%' OR title ='Черкащани створили щоденник, який мотивує' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/real-no-orbita-vidoma-televeducha-zniala-prohramu-pro-neymovirnu-cherkashchynu-video/%' OR title ='“Реально Орбіта”, – відома телеведуча зняла програму про неймовірну Черкащину' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-pol-shchi-poiasnyly-chomu-zatrymaly-mazura-i-chy-viddadut-yoho-rosii/%' OR title ='У Польщі пояснили, чому  затримали Мазура і чи віддадуть його Росії' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'https://provce.ck.ua/u-oda-rozpovily-za-iaki-koshty-v-nastupnomu-rotsi-ozdorovliuvatymut-ditey/%' OR title ='У ОДА розповіли, за які кошти в наступному році оздоровлюватимуть дітей' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/vafelni-stakanchiki-trubochki-z-solomi-termosi-yak-na-cherkashhini-kav-yarni-vidmovlyayutsya-vid-plastiku/%' OR title ='Вафельні стаканчики, трубочки з соломи, термоси: як на Черкащині кав’ярні відмовляються від пластику' ;
--------------------------------
2019.11.10 20:58:07:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/%' OR title ='На Черкащині хочуть дістати із дамби ставка німецький танк' ;
--------------------------------
2019.11.10 20:58:08:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhani-masovo-shheplyuyutsya-vid-gripu/%' OR title ='Черкащани масово щеплюються від грипу' ;
--------------------------------
2019.11.10 20:58:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/zgorila-kvartira-cherkashhanka-ta-yiyi-2-richna-ditina-potrebuyut-terminovoyi-dopomogi-foto/%' OR title ='Згоріла квартира: черкащанка та її 2-річна дитина потребують термінової допомоги' ;
--------------------------------
2019.11.10 20:58:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhanka-stala-radnitseyu-prem-yer-ministra-ukrayini/%' OR title ='Черкащанка стала радницею прем’єр-міністра України' ;
--------------------------------
2019.11.10 20:58:09:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/tam-de-ye-mova-tam-nemaye-tankiv-u-chdtu-doluchilisya-do-napisannya-vseukrayinskogo-diktantu/%' OR title ='Там де є мова, там немає танків: у ЧДТУ долучилися до написання Всеукраїнського диктанту' ;
--------------------------------
2019.11.10 20:58:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-kam-yantsi-norvezhtsi-vidremontuvali-dorogu/%' OR title ='У Кам’янці норвежці відремонтували дорогу' ;
--------------------------------
2019.11.10 20:58:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-prezentuvali-pershu-onlajn-bazu-artefaktiv-tripilskoyi-kulturi-video/%' OR title ='На Черкащині презентували першу онлайн-базу артефактів Трипільської культури' ;
--------------------------------
2019.11.10 20:58:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/u-cherkasah-vidkrili-vistavku-znevazhenij-genotsid/%' OR title ='У Черкасах відкрили виставку «Зневажений геноцид»' ;
--------------------------------
2019.11.10 20:58:10:
--------------------------------
SELECT count(id) FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkasets-u-svoyij-avtivtsi-voziv-gvintivku-mosina-zi-snajperskim-pritsilom/%' OR title ='Черкащанин у своїй автівці возив гвинтівку Мосіна зі снайперським прицілом' ;
--------------------------------
2019.11.10 20:58:10:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/%' OR title = 'На Черкащині хочуть дістати із дамби ставка німецький танк';
--------------------------------
2019.11.10 20:58:25:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='875ed7b0a7e63a98966fd8ffdb7f3b5c';
--------------------------------
2019.11.10 20:58:25:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '875ed7b0a7e63a98966fd8ffdb7f3b5c', '1', '2019-11-10_20-58-10_170.png', '2019-11-10 20:58:25', '1');
--------------------------------
2019.11.10 20:58:25:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('На Черкащині хочуть дістати із дамби ставка німецький танк', '11ead354ab2fb59ccc173c7f5b82c882', 'На Черкащині хочуть дістати із дамби ставка німецький танк', 'Благодійний фонд «Герої не вмирають» хоче дістати із дамби ставка в селі Осітна Христинівського району німецький танк, що зберігається там з часів Другої світової війни. Про це повідомляють «Вечірні Черкаси». – Танк лежить із 1943 року, – розповідає сільський голова Осітної Петро Пересунько. – У ті часи там був невеликий дерев’яний місток. Саме до нього під’їхали три німецькі танки. Перший рушив мостом і провалився. Екіпаж вибрався, німці сіли в інші танки і поїхали в об’їзд. Танк так і лишився. У 50-их роках минулого століття на місці мосту зробили капітальну дамбу між двома ставками. Танк вирішили залишити на місці, перетворивши його на наріжний камінь нової дамби. По дамбі пішла нова асфальтована дорога. Днями в селі мають скликати сесію сільської ради. – Депутати вирішуватимуть, чи давати згоду на ремонт дамби, – каже Петро Пересунько. – Раніше нам часто телефонували і приїздили представники організацій, які збиралися дістати танк. Однак таких беручких, як із цього фонду, ще не було. Їм сприяє Міністерство культури. Обіцяють розкопати, дістати, відновити дамбу й заасфальтувати дорогу. Сприяння роботам обіцяють і в Черкаській ОДА. – Ми готові посприяти в організації цих робіт, адже перебування військової машини в дамбі може у будь-який момент стати причиною надзвичайної ситуації, – каже заступник голови ОДА Віктор Карпенко. – Бо не знаємо, чи лишилися там боєприпаси. Для цього ініціюємо обстеження цього об’єкта вибухотехніками. Паралельно з цим благодійний фонд розроблятиме проект реконструкції та кошторисну документацію. Фактично, він інвестує у ремонт дамби. Благодійний фонд «Герої не вмирають» обіцяє сільській раді 10% від можливого продажу танка, якщо він представлятиме якусь історичну цінність. Років 10 тому в селі Іскрене Шполянського району збиралися дістати із дамби німецький танк «Тигр». Сільська рада хотіла вторгувати за машину півтора мільйони гривень і провести газ. Однак до реалізації задуманого справа не дійшла.  Фахівці оцінюють вартість вцілілого німецького танка часів Другої світової війни у 5 мільйонів євро.', '<p class=\"bb_p\">Благодійний фонд «Герої не вмирають» хоче дістати із дамби ставка в селі Осітна Христинівського району німецький танк, що зберігається там з часів Другої світової війни. Про це повідомляють «Вечірні Черкаси».</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-58-10_170.png" alt="" title="" /></p>
<p class=\"bb_p\">– Танк лежить із 1943 року, – розповідає сільський голова Осітної Петро Пересунько. – У ті часи там був невеликий дерев’яний місток. Саме до нього під’їхали три німецькі танки. Перший рушив мостом і провалився. Екіпаж вибрався, німці сіли в інші танки і поїхали в об’їзд. Танк так і лишився. У 50-их роках минулого століття на місці мосту зробили капітальну дамбу між двома ставками. Танк вирішили залишити на місці, перетворивши його на наріжний камінь нової дамби. По дамбі пішла нова асфальтована дорога.</p>
<p class=\"bb_p\">Днями в селі мають скликати сесію сільської ради.</p>
<p class=\"bb_p\">– Депутати вирішуватимуть, чи давати згоду на ремонт дамби, – каже Петро Пересунько. – Раніше нам часто телефонували і приїздили представники організацій, які збиралися дістати танк. Однак таких беручких, як із цього фонду, ще не було. Їм сприяє Міністерство культури. Обіцяють розкопати, дістати, відновити дамбу й заасфальтувати дорогу.</p>
<p class=\"bb_p\">Сприяння роботам обіцяють і в Черкаській ОДА.</p>
<p class=\"bb_p\">– Ми готові посприяти в організації цих робіт, адже перебування військової машини в дамбі може у будь-який момент стати причиною надзвичайної ситуації, – каже заступник голови ОДА Віктор Карпенко. – Бо не знаємо, чи лишилися там боєприпаси. Для цього ініціюємо обстеження цього об’єкта вибухотехніками. Паралельно з цим благодійний фонд розроблятиме проект реконструкції та кошторисну документацію. Фактично, він інвестує у ремонт дамби.</p>
<p class=\"bb_p\">Благодійний фонд «Герої не вмирають» обіцяє сільській раді 10% від можливого продажу танка, якщо він представлятиме якусь історичну цінність.</p>
<p class=\"bb_p\">Років 10 тому в селі Іскрене Шполянського району збиралися дістати із дамби німецький танк «Тигр». Сільська рада хотіла вторгувати за машину півтора мільйони гривень і провести газ. Однак до реалізації задуманого справа не дійшла.  Фахівці оцінюють вартість вцілілого німецького танка часів Другої світової війни у 5 мільйонів євро.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/" target="_blank">За матеріалами "vycherpno.ck.ua"</a></p></div>', 'http://vycherpno.ck.ua/na-cherkashhini-hochut-distati-iz-dambi-stavka-nimetskij-tank/
Новини', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:58:25:
--------------------------------
UPDATE images SET post_id=1039 WHERE post_id=0;
--------------------------------
2019.11.10 20:58:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1039 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:58:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1039 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:58:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1039) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:58:26:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1039';
--------------------------------
2019.11.10 20:58:26:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:58:26:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1039'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1039'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:58:26:
--------------------------------
UPDATE images SET post_id=1039 WHERE md5='875ed7b0a7e63a98966fd8ffdb7f3b5c' AND post_id=0;
--------------------------------
2019.11.10 20:58:26:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhani-masovo-shheplyuyutsya-vid-gripu/%' OR title = 'Черкащани масово щеплюються від грипу';
--------------------------------
2019.11.10 20:59:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 580 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 580 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (580) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 580
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:30:
--------------------------------

                    -- Останній “живий”: черкащан безкоштовно катали на раритетному паровозі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Останній')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 580
                        AND posts_tags.tag_id IN(3,4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:30:
--------------------------------

                    -- Останній “живий”: черкащан безкоштовно катали на раритетному паровозі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“живий”:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 580
                        AND posts_tags.tag_id IN(3,4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:31:
--------------------------------

                    -- Останній “живий”: черкащан безкоштовно катали на раритетному паровозі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 580
                        AND posts_tags.tag_id IN(3,4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:32:
--------------------------------

                    -- Останній “живий”: черкащан безкоштовно катали на раритетному паровозі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('безкоштовно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 580
                        AND posts_tags.tag_id IN(3,4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:32:
--------------------------------

                    -- Останній “живий”: черкащан безкоштовно катали на раритетному паровозі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('катали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 580
                        AND posts_tags.tag_id IN(3,4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:33:
--------------------------------

                    -- Останній “живий”: черкащан безкоштовно катали на раритетному паровозі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('раритетному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 580
                        AND posts_tags.tag_id IN(3,4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:34:
--------------------------------

                    -- Останній “живий”: черкащан безкоштовно катали на раритетному паровозі
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('паровозі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 580
                        AND posts_tags.tag_id IN(3,4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 632 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 632 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (632) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 294 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 294 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (294) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 221 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 221 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (221) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 354 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 354 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (354) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 446 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 446 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (446) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 20:59:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:40:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='97a369be37d1bf46e5e47d8fe3990347';
--------------------------------
2019.11.10 20:59:40:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '97a369be37d1bf46e5e47d8fe3990347', '1', '2019-11-10_20-58-26_339.png', '2019-11-10 20:59:40', '1');
--------------------------------
2019.11.10 20:59:40:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Черкащани масово щеплюються від грипу', '38d62b8cf8f3b843190e4fe99ab2f547', 'Черкащани масово щеплюються від грипу', 'В очікуванні нових штамів грипу жителі області масово щеплюються. Чи менше завдяки цьому хворіють на грип, сказати важко, але те, що черкащани стали більше купувати вакцин — однозначно. Вакцинація дозволяє уникнути ускладнень, загострень хронічних хвороб та й сам перебіг захворювання проходить легше, пишуть «Вечірні Черкаси». Цього року здоров’я черкащан випробовуватимуть штами грипу: “Канзас” (А/H3N2), “Брісбен” (А/Н1N1), “Колорадо” (належить до гілки B/Victoria) і “Пхукет” (належить до гілки B/Yamagata). За прогнозами епідеміологів найвищі хвилі підйому захворюваності традиційно очікуються у грудні та наприкінці січня-початку лютого 2020 року. Україна закупила вакцини проти грипу виробництва Франції (Санофі Пастер) та Кореї (Грін Кросс Корпорейшн). Французька вакцина є чотирикомпонентною (тобто діє на 4 штами вірусів), а корейська – трикомпонентною. Усього ж, за повідомленням Центру громадського здоров’я, в Україну планують доставити 500 тисяч доз вакцин для імунопрофілактики грипу. Для порівняння, минулого року було завезено 350 тисяч доз вакцин. Більше купувати вакцин від грипу почали і жителі нашої області. — Торік по області у мережі аптек Черкаського обласного комунального підприємства «Фармація» було продано усього 2343 вакцини від грипу. Цього року ми вже продали 3 744 вакцини. І люди ще до Нового року будуть щеплюватися, тож сподіваємося наразі продаж вакцин ще не завершено, — констатує заступник директора ЧОКП «Фармація» Олена Решітько. В аптечній мережі Черкас підтверджують — із кожним роком дедалі більше черкащан щеплюються від грипу.', '<p class=\"bb_p\">В очікуванні нових штамів грипу жителі області масово щеплюються. Чи менше завдяки цьому хворіють на грип, сказати важко, але те, що черкащани стали більше купувати вакцин — однозначно. Вакцинація дозволяє уникнути ускладнень, загострень хронічних хвороб та й сам перебіг захворювання проходить легше, пишуть «Вечірні Черкаси».</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-58-26_339.png" alt="" title="" /></p>
<p class=\"bb_p\">Цього року здоров’я черкащан випробовуватимуть штами грипу: “Канзас” (А/H3N2), “Брісбен” (А/Н1N1), “Колорадо” (належить до гілки B/Victoria) і “Пхукет” (належить до гілки B/Yamagata). За прогнозами епідеміологів найвищі хвилі підйому захворюваності традиційно очікуються у грудні та наприкінці січня-початку лютого 2020 року. Україна закупила вакцини проти грипу виробництва Франції (Санофі Пастер) та Кореї (Грін Кросс Корпорейшн). Французька вакцина є чотирикомпонентною (тобто діє на 4 штами вірусів), а корейська – трикомпонентною. Усього ж, за повідомленням Центру громадського здоров’я, в Україну планують доставити 500 тисяч доз вакцин для імунопрофілактики грипу. Для порівняння, минулого року було завезено 350 тисяч доз вакцин.</p>
<p class=\"bb_p\">Більше купувати вакцин від грипу почали і жителі нашої області.</p>
<p class=\"bb_p\">— Торік по області у мережі аптек Черкаського обласного комунального підприємства «Фармація» було продано усього 2343 вакцини від грипу. Цього року ми вже продали 3 744 вакцини. І люди ще до Нового року будуть щеплюватися, тож сподіваємося наразі продаж вакцин ще не завершено, — констатує заступник директора ЧОКП «Фармація» Олена Решітько.</p>
<p class=\"bb_p\">В аптечній мережі Черкас підтверджують — із кожним роком дедалі більше черкащан щеплюються від грипу.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="http://vycherpno.ck.ua/cherkashhani-masovo-shheplyuyutsya-vid-gripu/" target="_blank">За матеріалами "vycherpno.ck.ua"</a></p></div>', 'http://vycherpno.ck.ua/cherkashhani-masovo-shheplyuyutsya-vid-gripu/
Новини', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 20:59:40:
--------------------------------
UPDATE images SET post_id=1040 WHERE post_id=0;
--------------------------------
2019.11.10 20:59:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1040 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:40:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1040 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1040) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 20:59:40:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1040';
--------------------------------
2019.11.10 20:59:40:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 20:59:40:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1040'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1040'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 20:59:40:
--------------------------------
UPDATE images SET post_id=1040 WHERE md5='97a369be37d1bf46e5e47d8fe3990347' AND post_id=0;
--------------------------------
2019.11.10 20:59:40:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/zgorila-kvartira-cherkashhanka-ta-yiyi-2-richna-ditina-potrebuyut-terminovoyi-dopomogi-foto/%' OR title = 'Згоріла квартира: черкащанка та її 2-річна дитина потребують термінової допомоги';
--------------------------------
2019.11.10 20:59:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 20:59:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (949,948,947,946,945,944,943,942,941,940,939,938) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 328 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 328 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (328) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 328
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:02:
--------------------------------

                    -- Свобода інтернету у світі: яке місце посіла Україна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Свобода')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 328
                        AND posts_tags.tag_id IN(3,5,8,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:02:
--------------------------------

                    -- Свобода інтернету у світі: яке місце посіла Україна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('інтернету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 328
                        AND posts_tags.tag_id IN(3,5,8,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:02:
--------------------------------

                    -- Свобода інтернету у світі: яке місце посіла Україна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('світі:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 328
                        AND posts_tags.tag_id IN(3,5,8,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------

                    -- Свобода інтернету у світі: яке місце посіла Україна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('посіла')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 328
                        AND posts_tags.tag_id IN(3,5,8,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------

                    -- Свобода інтернету у світі: яке місце посіла Україна
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Україна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 328
                        AND posts_tags.tag_id IN(3,5,8,11,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 33 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 33 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (33) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (207) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 65 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 65 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (65) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (117) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 187 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 187 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (187) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5f7c2009aad2f3cff20bc0795f69708b', '66.249.64.92'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:00:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:06:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 21:00:28:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='1acf32167a858e8951f3cb84cafd34d6';
--------------------------------
2019.11.10 21:00:28:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '1acf32167a858e8951f3cb84cafd34d6', '1', '2019-11-10_20-59-40_413.png', '2019-11-10 21:00:28', '1');
--------------------------------
2019.11.10 21:00:28:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Згоріла квартира: черкащанка та її 2-річна дитина потребують термінової допомоги', 'dc6d6bf96c0bc3ec180764120a184ba1', 'Згоріла квартира: черкащанка та її 2-річна дитина потребують термінової допомоги', '7 листопада на вулиці Сумгаїтська, 39 сталася пожежа в квартирі одного із будинків. Мешканці не постраждали, але вогонь знищив кухню, коридор, кімнату, а також речі. Про це повідомляють черкасці у соцмережі «Інстаграм». У квартирі проживали жінка та її 2-річний син, нині вони перебувають тимчасово у подруги. Постраждалим потрібна фінансова допомога небайдужих, також жіночий одяг розміру М та дитячий на хлопчика 100-104 см, взуття 27 розміру. Кошти можна надсилати на карту Приватбанку: 4731219116565502 (Станіслава Ломачинська) телефон: 096-184-13-78', '<p class=\"bb_p\">7 листопада на вулиці Сумгаїтська, 39 сталася пожежа в квартирі одного із будинків. Мешканці не постраждали, але вогонь знищив кухню, коридор, кімнату, а також речі. Про це повідомляють черкасці у соцмережі «Інстаграм».</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_20-59-40_413.png" alt="" title="" /></p>
<p class=\"bb_p\">У квартирі проживали жінка та її 2-річний син, нині вони перебувають тимчасово у подруги. Постраждалим потрібна фінансова допомога небайдужих, також жіночий одяг розміру М та дитячий на хлопчика 100-104 см, взуття 27 розміру.</p>
<p class=\"bb_p\">Кошти можна надсилати на карту Приватбанку:</p>
<p class=\"bb_p\">4731219116565502 (Станіслава Ломачинська)</p>
<p class=\"bb_p\">телефон: 096-184-13-78</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="http://vycherpno.ck.ua/zgorila-kvartira-cherkashhanka-ta-yiyi-2-richna-ditina-potrebuyut-terminovoyi-dopomogi-foto/" target="_blank">За матеріалами "vycherpno.ck.ua"</a></p></div>', 'http://vycherpno.ck.ua/zgorila-kvartira-cherkashhanka-ta-yiyi-2-richna-ditina-potrebuyut-terminovoyi-dopomogi-foto/
Новини', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 21:00:28:
--------------------------------
UPDATE images SET post_id=1041 WHERE post_id=0;
--------------------------------
2019.11.10 21:00:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1041 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:28:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1041 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:00:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1041) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:00:28:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1041';
--------------------------------
2019.11.10 21:00:28:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 21:00:28:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1041'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1041'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 21:00:28:
--------------------------------
UPDATE images SET post_id=1041 WHERE md5='1acf32167a858e8951f3cb84cafd34d6' AND post_id=0;
--------------------------------
2019.11.10 21:00:28:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/cherkashhanka-stala-radnitseyu-prem-yer-ministra-ukrayini/%' OR title = 'Черкащанка стала радницею прем’єр-міністра України';
--------------------------------
2019.11.10 21:01:49:
--------------------------------
SELECT COUNT(md5) as count FROM images WHERE md5='062f3080eb6acf8faf70c9c450bb8f08';
--------------------------------
2019.11.10 21:01:49:
--------------------------------
INSERT INTO images ("post_id", "md5", "user_id", "serv_name", "load_time", "is_mini") VALUES ('0', '062f3080eb6acf8faf70c9c450bb8f08', '1', '2019-11-10_21-00-28_383.png', '2019-11-10 21:01:49', '1');
--------------------------------
2019.11.10 21:01:49:
--------------------------------
INSERT INTO posts ("title", "alt_title", "descr", "short_post", "full_post", "comment", "svector", "keywords", "posted", "fixed", "static", "category", "author_id") VALUES ('Черкащанка стала радницею прем’єр-міністра України', 'cee36932ea8721f0151c79c08a044222', 'Черкащанка стала радницею прем’єр-міністра України', 'Днями черкащанка Світлана Заліщук стала штатним радником прем’єр-міністра України з питань зовнішньої політики Олексія Гончарука. Про це повідомила на своїй сторінці у соцмережі «Фейсбук». «Із Олексієм Гончаруком ми товаришували з домайданних часів. Вірю у наміри й цінності цієї людини. Хочу допомогти й посилити його на зовнішньополітичному фронті», — зазначила у своєму дописі Заліщук. Також Світлана наголосила на тому, що прем’єр говорить англійською на переговорах без перекладача та додала, що вільно спілкуватися іноземною мовою у наш час є важливою навичкою.', '<p class=\"bb_p\">Днями черкащанка Світлана Заліщук стала штатним радником прем’єр-міністра України з питань зовнішньої політики Олексія Гончарука. Про це повідомила на своїй сторінці у соцмережі «Фейсбук».</p>
<p class=\"bb_p align_center\"><img class="post_img" src="/uploads/images/2019-11-10/2019-11-10_21-00-28_383.png" alt="" title="" /></p>
<p class=\"bb_p\">«Із Олексієм Гончаруком ми товаришували з домайданних часів. Вірю у наміри й цінності цієї людини. Хочу допомогти й посилити його на зовнішньополітичному фронті», — зазначила у своєму дописі Заліщук.</p>
<p class=\"bb_p\">Також Світлана наголосила на тому, що прем’єр говорить англійською на переговорах без перекладача та додала, що вільно спілкуватися іноземною мовою у наш час є важливою навичкою.</p><div class="source"><p class=\"bb_p align_right\"><a rel="nofollow noreferrer" href="http://vycherpno.ck.ua/cherkashhanka-stala-radnitseyu-prem-yer-ministra-ukrayini/" target="_blank">За матеріалами "vycherpno.ck.ua"</a></p></div>', 'http://vycherpno.ck.ua/cherkashhanka-stala-radnitseyu-prem-yer-ministra-ukrayini/
Новини', '', '', '1', '0', '0', '1', '1') RETURNING id;
--------------------------------
2019.11.10 21:01:49:
--------------------------------
UPDATE images SET post_id=1042 WHERE post_id=0;
--------------------------------
2019.11.10 21:01:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1042 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:01:49:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1042 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:01:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1042) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:01:49:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:01:49:
--------------------------------
UPDATE posts SET repost_tg=1 WHERE id='1042';
--------------------------------
2019.11.10 21:01:49:
--------------------------------
SELECT id FROM tags WHERE name = 'Новини';
--------------------------------
2019.11.10 21:01:49:
--------------------------------
BEGIN;
DELETE FROM posts_tags WHERE post_id = '1042'::INTEGER AND tag_id = '5'::INTEGER;
INSERT INTO posts_tags ( post_id, tag_id ) VALUES ('1042'::INTEGER, '5'::INTEGER );
COMMIT;
--------------------------------
2019.11.10 21:01:49:
--------------------------------
UPDATE images SET post_id=1042 WHERE md5='062f3080eb6acf8faf70c9c450bb8f08' AND post_id=0;
--------------------------------
2019.11.10 21:01:49:
--------------------------------
SELECT COUNT(id) as count FROM posts WHERE comment LIKE 'http://vycherpno.ck.ua/tam-de-ye-mova-tam-nemaye-tankiv-u-chdtu-doluchilisya-do-napisannya-vseukrayinskogo-diktantu/%' OR title = 'Там де є мова, там немає танків: у ЧДТУ долучилися до написання Всеукраїнського диктанту';
--------------------------------
2019.11.10 21:03:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 616 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:43:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 616 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (616) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 616
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:44:
--------------------------------

                    -- Синоптики розповіли, якої погоди чекати впродовж тижня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Синоптики')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 616
                        AND posts_tags.tag_id IN(4,5,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:44:
--------------------------------

                    -- Синоптики розповіли, якої погоди чекати впродовж тижня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 616
                        AND posts_tags.tag_id IN(4,5,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:45:
--------------------------------

                    -- Синоптики розповіли, якої погоди чекати впродовж тижня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('погоди')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 616
                        AND posts_tags.tag_id IN(4,5,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:46:
--------------------------------

                    -- Синоптики розповіли, якої погоди чекати впродовж тижня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чекати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 616
                        AND posts_tags.tag_id IN(4,5,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:47:
--------------------------------

                    -- Синоптики розповіли, якої погоди чекати впродовж тижня
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('впродовж')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 616
                        AND posts_tags.tag_id IN(4,5,20)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 212 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 212 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (212) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 816 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 816 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (816) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 716 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 716 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (716) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 361 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 361 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (361) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 621 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 621 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (621) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '43e9514d7842c5d3a9fc13ec35ecbffe', '66.249.64.141'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:03:48:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:03:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (952,951,950,949,948,947,946,945,944,943,942,941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:03:58:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 21:04:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 315 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 315 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (315) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:17:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 315
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------

                    -- Як створити надійний пароль та захистити свої дані
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('створити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 315
                        AND posts_tags.tag_id IN(3,4,5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------

                    -- Як створити надійний пароль та захистити свої дані
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('надійний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 315
                        AND posts_tags.tag_id IN(3,4,5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------

                    -- Як створити надійний пароль та захистити свої дані
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пароль')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 315
                        AND posts_tags.tag_id IN(3,4,5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------

                    -- Як створити надійний пароль та захистити свої дані
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('захистити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 315
                        AND posts_tags.tag_id IN(3,4,5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 47 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 47 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (47) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 208 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 208 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (208) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 321 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 321 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (321) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 205 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 205 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (205) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 35 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 35 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (35) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:04:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e4d2ca2acb6b418567ebb450e474782a', '66.249.64.94'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:04:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:04:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 633 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 633 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (633) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:47:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 633
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:47:
--------------------------------

                    -- На Черкащині закрили низку незаконних автозаправок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 633
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:47:
--------------------------------

                    -- На Черкащині закрили низку незаконних автозаправок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('закрили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 633
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:47:
--------------------------------

                    -- На Черкащині закрили низку незаконних автозаправок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('незаконних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 633
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:48:
--------------------------------

                    -- На Черкащині закрили низку незаконних автозаправок
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автозаправок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 633
                        AND posts_tags.tag_id IN(9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 200 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 200 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (200) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 330 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 330 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (330) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 301 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 301 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (301) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (710) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 661 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 661 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (661) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:07:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '43e9514d7842c5d3a9fc13ec35ecbffe', '66.249.64.141'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:07:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 310 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 310 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (310) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 310
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:05:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('найближчому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:06:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('майбутньому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:06:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('побудувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:07:
--------------------------------

                    -- Базу на Марсі у найближчому майбутньому побудувати неможливо - Маск
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('неможливо')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 310
                        AND posts_tags.tag_id IN(3,6,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 159 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 159 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (159) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 160 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 160 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (160) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 165 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 165 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (165) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 148 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 148 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (148) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 298 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 298 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (298) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e4d2ca2acb6b418567ebb450e474782a', '66.249.64.94'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:08:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:08:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:08:21:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 21:11:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 717 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 717 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (717) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:50:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 717
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:50:
--------------------------------

                    -- Черкащанин виборов третє місце на обласному конкурсі з інформаційних технологій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 717
                        AND posts_tags.tag_id IN(3,4,5,6,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:51:
--------------------------------

                    -- Черкащанин виборов третє місце на обласному конкурсі з інформаційних технологій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('виборов')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 717
                        AND posts_tags.tag_id IN(3,4,5,6,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:52:
--------------------------------

                    -- Черкащанин виборов третє місце на обласному конкурсі з інформаційних технологій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('обласному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 717
                        AND posts_tags.tag_id IN(3,4,5,6,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:52:
--------------------------------

                    -- Черкащанин виборов третє місце на обласному конкурсі з інформаційних технологій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('конкурсі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 717
                        AND posts_tags.tag_id IN(3,4,5,6,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:53:
--------------------------------

                    -- Черкащанин виборов третє місце на обласному конкурсі з інформаційних технологій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('інформаційних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 717
                        AND posts_tags.tag_id IN(3,4,5,6,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:53:
--------------------------------

                    -- Черкащанин виборов третє місце на обласному конкурсі з інформаційних технологій
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('технологій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 717
                        AND posts_tags.tag_id IN(3,4,5,6,11,13)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 512 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:53:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 512 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (512) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 518 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 518 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (518) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 510 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 510 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (510) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:11:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:11:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '74ececf7cd3c9212e0aae101e502bdc8', '66.249.64.144'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:12:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 321 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 321 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (321) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 321
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------

                    -- Дверний дзвінок Amazon Ring опинився під загрозою хакерів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Дверний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 321
                        AND posts_tags.tag_id IN(5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------

                    -- Дверний дзвінок Amazon Ring опинився під загрозою хакерів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('дзвінок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 321
                        AND posts_tags.tag_id IN(5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------

                    -- Дверний дзвінок Amazon Ring опинився під загрозою хакерів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Amazon')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 321
                        AND posts_tags.tag_id IN(5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------

                    -- Дверний дзвінок Amazon Ring опинився під загрозою хакерів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('опинився')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 321
                        AND posts_tags.tag_id IN(5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------

                    -- Дверний дзвінок Amazon Ring опинився під загрозою хакерів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('загрозою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 321
                        AND posts_tags.tag_id IN(5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------

                    -- Дверний дзвінок Amazon Ring опинився під загрозою хакерів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('хакерів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 321
                        AND posts_tags.tag_id IN(5,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 77 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 77 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (77) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 78 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 78 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (78) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 38 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 38 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (38) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 241 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 241 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:12:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (241) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:12:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e8cbfe1860fd70695d8a890526de430b', '66.249.64.80'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:13:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 23 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:53:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 23 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 70 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (568,559,545,538,519,511,507,504,501,498) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '523294434128c819111602fd870dbc1d', '93.158.161.148'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1036,1026) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1025,1009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (997,995) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1031) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:13:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:13:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1031,1030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 629 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 629 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (629) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 629
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:12:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('презентували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:12:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('старовинну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:13:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('печатку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:14:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('єдиного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:14:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('княгині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 543 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 543 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (543) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 668 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 668 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (668) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 649 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 649 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (649) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1029) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 357 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 357 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (357) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0af7b5ea9363f487bd6ccf9baf660e15', '100.43.81.116'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:14:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 125 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 125 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (125) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:33:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 125
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:33:
--------------------------------

                    -- Загибель черкаського журналіста Комарова розслідують як умисне вбивство
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Загибель')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 125
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:34:
--------------------------------

                    -- Загибель черкаського журналіста Комарова розслідують як умисне вбивство
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 125
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:35:
--------------------------------

                    -- Загибель черкаського журналіста Комарова розслідують як умисне вбивство
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('журналіста')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 125
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:35:
--------------------------------

                    -- Загибель черкаського журналіста Комарова розслідують як умисне вбивство
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Комарова')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 125
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:36:
--------------------------------

                    -- Загибель черкаського журналіста Комарова розслідують як умисне вбивство
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розслідують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 125
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:36:
--------------------------------

                    -- Загибель черкаського журналіста Комарова розслідують як умисне вбивство
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('умисне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 125
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:37:
--------------------------------

                    -- Загибель черкаського журналіста Комарова розслідують як умисне вбивство
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вбивство')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 125
                        AND posts_tags.tag_id IN(3,4,5,6,7,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (915) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (926) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 620 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 620 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (620) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5a446f6ff1a83f2f5d664723002a3dd8', '100.43.81.109'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:14:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '00415f62b1fad454f7ecae051f4af7ad', '5.255.250.141'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:14:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 169 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 169 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:14:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (169) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:14:59:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 169
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:00:
--------------------------------

                    -- Заступник міського голови розказав про нечисть і диявольські символи
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Заступник')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 169
                        AND posts_tags.tag_id IN(4,5,6,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:01:
--------------------------------

                    -- Заступник міського голови розказав про нечисть і диявольські символи
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('міського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 169
                        AND posts_tags.tag_id IN(4,5,6,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:01:
--------------------------------

                    -- Заступник міського голови розказав про нечисть і диявольські символи
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('голови')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 169
                        AND posts_tags.tag_id IN(4,5,6,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:02:
--------------------------------

                    -- Заступник міського голови розказав про нечисть і диявольські символи
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розказав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 169
                        AND posts_tags.tag_id IN(4,5,6,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:02:
--------------------------------

                    -- Заступник міського голови розказав про нечисть і диявольські символи
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('нечисть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 169
                        AND posts_tags.tag_id IN(4,5,6,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:03:
--------------------------------

                    -- Заступник міського голови розказав про нечисть і диявольські символи
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('диявольські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 169
                        AND posts_tags.tag_id IN(4,5,6,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:03:
--------------------------------

                    -- Заступник міського голови розказав про нечисть і диявольські символи
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('символи')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 169
                        AND posts_tags.tag_id IN(4,5,6,11,24)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 653 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 653 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (653) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 520 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 520 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (520) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 420 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 420 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (420) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 535 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 535 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (535) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 675 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 675 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:15:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (675) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:15:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:17:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1111 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:17:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1111 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:17:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b44edfc91d8c3364cc3bff12f405159', '5.255.250.56'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:18:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 331 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 331 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (331) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 331
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:18:
--------------------------------

                    -- Як харчуються мільярдери IT-світу: від фаст-фуду до м’яса кози
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('харчуються')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 331
                        AND posts_tags.tag_id IN(6,8,9,12,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:18:
--------------------------------

                    -- Як харчуються мільярдери IT-світу: від фаст-фуду до м’яса кози
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мільярдери')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 331
                        AND posts_tags.tag_id IN(6,8,9,12,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:18:
--------------------------------

                    -- Як харчуються мільярдери IT-світу: від фаст-фуду до м’яса кози
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('IT-світу:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 331
                        AND posts_tags.tag_id IN(6,8,9,12,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------

                    -- Як харчуються мільярдери IT-світу: від фаст-фуду до м’яса кози
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фаст-фуду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 331
                        AND posts_tags.tag_id IN(6,8,9,12,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 295 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 295 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (295) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (328) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 158 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 158 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (158) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 267 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 267 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (267) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 137 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 137 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (137) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 257 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 257 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (257) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 50 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 50 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:18:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (50) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:18:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e8cbfe1860fd70695d8a890526de430b', '66.249.64.80'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:32:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 297 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 297 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (297) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 297
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------

                    -- Вчені з'ясували, коли загорілися перші зірки у Всесвіті
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('з''ясували,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 297
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------

                    -- Вчені з'ясували, коли загорілися перші зірки у Всесвіті
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('загорілися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 297
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------

                    -- Вчені з'ясували, коли загорілися перші зірки у Всесвіті
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Всесвіті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 297
                        AND posts_tags.tag_id IN(7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 133 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 133 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (133) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 55 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 55 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (55) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 69 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 69 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (69) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 181 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 181 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (181) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 316 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 316 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (316) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3b045a1128c6bcf252612ad50611945f', '5.255.250.21'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:32:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 316 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 316 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (316) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:37:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 316
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:37:
--------------------------------

                    -- Вчені довели, що паління може спричиняти депресію та шизофренію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('довели,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 316
                        AND posts_tags.tag_id IN(7,8,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:37:
--------------------------------

                    -- Вчені довели, що паління може спричиняти депресію та шизофренію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('паління')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 316
                        AND posts_tags.tag_id IN(7,8,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:37:
--------------------------------

                    -- Вчені довели, що паління може спричиняти депресію та шизофренію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('спричиняти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 316
                        AND posts_tags.tag_id IN(7,8,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------

                    -- Вчені довели, що паління може спричиняти депресію та шизофренію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('депресію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 316
                        AND posts_tags.tag_id IN(7,8,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------

                    -- Вчені довели, що паління може спричиняти депресію та шизофренію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('шизофренію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 316
                        AND posts_tags.tag_id IN(7,8,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 179 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 179 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (179) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 280 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 280 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (280) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 109 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 109 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (109) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 211 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 211 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (211) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 213 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 213 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (213) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:38:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b79ebdb9a114be2f774f2dec81259de3', '77.88.47.72'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:32:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 20 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 20 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 50 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:32:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (75,74,35) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:32:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bcdcf874cac771ec6ced1187f3bc4251', '93.158.161.21'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:33:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 117 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 117 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (117) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:09:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 117
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:09:
--------------------------------

                    -- У черкаській колонії стався кривавий протест ув&#039;язнених - ЗМІ
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 117
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:10:
--------------------------------

                    -- У черкаській колонії стався кривавий протест ув&#039;язнених - ЗМІ
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('колонії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 117
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:10:
--------------------------------

                    -- У черкаській колонії стався кривавий протест ув&#039;язнених - ЗМІ
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('стався')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 117
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:11:
--------------------------------

                    -- У черкаській колонії стався кривавий протест ув&#039;язнених - ЗМІ
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кривавий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 117
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:12:
--------------------------------

                    -- У черкаській колонії стався кривавий протест ув&#039;язнених - ЗМІ
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('протест')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 117
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:12:
--------------------------------

                    -- У черкаській колонії стався кривавий протест ув&#039;язнених - ЗМІ
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ув&#039;язнених')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 117
                        AND posts_tags.tag_id IN(4,5,6,7,8,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 418 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 418 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (418) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 189 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 189 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (189) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 970 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 970 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (970) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 267 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 267 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (267) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 170 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 170 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:33:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (170) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:33:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:47:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 517 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:47:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 517 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:47:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (517) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 517
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

                    -- Новий губернатор почав своєрідний кастинг на посаду заступників голови обласної ради
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('губернатор')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 517
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

                    -- Новий губернатор почав своєрідний кастинг на посаду заступників голови обласної ради
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('своєрідний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 517
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

                    -- Новий губернатор почав своєрідний кастинг на посаду заступників голови обласної ради
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кастинг')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 517
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

                    -- Новий губернатор почав своєрідний кастинг на посаду заступників голови обласної ради
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('посаду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 517
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

                    -- Новий губернатор почав своєрідний кастинг на посаду заступників голови обласної ради
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('заступників')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 517
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

                    -- Новий губернатор почав своєрідний кастинг на посаду заступників голови обласної ради
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('голови')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 517
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------

                    -- Новий губернатор почав своєрідний кастинг на посаду заступників голови обласної ради
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('обласної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 517
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:47:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '74ececf7cd3c9212e0aae101e502bdc8', '66.249.64.144'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:52:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 940 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 940 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (940) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:46:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 940
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 941 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 941 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 941
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

                    -- Черкаські фахівці розповіли про нові правила для майбутніх водіїв та автошкіл
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 941
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

                    -- Черкаські фахівці розповіли про нові правила для майбутніх водіїв та автошкіл
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фахівці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 941
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

                    -- Черкаські фахівці розповіли про нові правила для майбутніх водіїв та автошкіл
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 941
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

                    -- Черкаські фахівці розповіли про нові правила для майбутніх водіїв та автошкіл
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('правила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 941
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

                    -- Черкаські фахівці розповіли про нові правила для майбутніх водіїв та автошкіл
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('майбутніх')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 941
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

                    -- Черкаські фахівці розповіли про нові правила для майбутніх водіїв та автошкіл
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('водіїв')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 941
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------

                    -- Черкаські фахівці розповіли про нові правила для майбутніх водіїв та автошкіл
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автошкіл')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 941
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '71f8024566f11cb5dec85e8cce218973', '66.249.64.142'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:52:48:
--------------------------------

                    -- В черкащанина під час обшуку знайшли гранату
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанина')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 940
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:49:
--------------------------------

                    -- В черкащанина під час обшуку знайшли гранату
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('обшуку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 940
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:50:
--------------------------------

                    -- В черкащанина під час обшуку знайшли гранату
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знайшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 940
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:51:
--------------------------------

                    -- В черкащанина під час обшуку знайшли гранату
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('гранату')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 940
                        AND posts_tags.tag_id IN(5,6,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 707 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 707 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (707) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 654 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 654 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (654) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 494 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 494 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (494) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 793 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 793 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (793) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 831 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 831 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:52:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (831) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:52:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '71f8024566f11cb5dec85e8cce218973', '66.249.64.142'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:53:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 138 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 138 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (138) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 138
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:18:
--------------------------------

                    -- Дифтерія наступає: поки немає епідемії і паніки, робіть щеплення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Дифтерія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 138
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:19:
--------------------------------

                    -- Дифтерія наступає: поки немає епідемії і паніки, робіть щеплення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('наступає:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 138
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:19:
--------------------------------

                    -- Дифтерія наступає: поки немає епідемії і паніки, робіть щеплення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('епідемії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 138
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:20:
--------------------------------

                    -- Дифтерія наступає: поки немає епідемії і паніки, робіть щеплення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('паніки,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 138
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:21:
--------------------------------

                    -- Дифтерія наступає: поки немає епідемії і паніки, робіть щеплення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('робіть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 138
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:21:
--------------------------------

                    -- Дифтерія наступає: поки немає епідемії і паніки, робіть щеплення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('щеплення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 138
                        AND posts_tags.tag_id IN(4,5,6,7,8,10,11,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 344 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 344 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (344) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 457 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 457 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (457) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 82 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 82 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (82) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 83 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 83 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:53:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (83) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:53:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'fcfdda7ada2968d29d9ba2c78838c866', '37.9.87.181'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 21:56:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 945 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 945 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (945) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:45:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 945
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:45:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Цього')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:46:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фортуна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:46:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('усміхнулася”:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:47:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розповів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:48:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('екранізацію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:48:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Чорного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:49:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ворона”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:49:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('творчі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:50:
--------------------------------

                    -- “Цього року фортуна мені усміхнулася”: Шкляр розповів про екранізацію “Чорного ворона” та творчі плани на майбутнє
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('майбутнє')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 945
                        AND posts_tags.tag_id IN(3,4,5,7,11,18,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 808 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 808 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (808) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 909 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 909 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (909) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 253 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 253 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (253) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 842 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 842 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (842) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 461 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 461 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:56:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (461) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:56:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 21:58:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 842 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 842 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (842) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:27:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 842
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:28:
--------------------------------

                    -- Цього року сміляни написали біля 10 тисяч заяв у поліцію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сміляни')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 842
                        AND posts_tags.tag_id IN(7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:28:
--------------------------------

                    -- Цього року сміляни написали біля 10 тисяч заяв у поліцію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('написали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 842
                        AND posts_tags.tag_id IN(7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:29:
--------------------------------

                    -- Цього року сміляни написали біля 10 тисяч заяв у поліцію
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поліцію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 842
                        AND posts_tags.tag_id IN(7,9,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 439 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 439 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (439) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 557 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 557 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (557) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 503 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 503 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (503) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 129 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 129 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (129) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 123 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 123 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 21:58:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (123) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 21:58:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.10 22:10:38:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:10:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:10:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 170 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:10:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (767,765,762,761,757,754,751,749,748,746) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:10:39:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:10:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 22:10:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:11:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:11:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:11:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:11:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:11:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (952,951,950,949,948,947,946,945,944,943,942,941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:11:25:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 22:11:25:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 22:28:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'adeb8cb50ea9544c384118af130f5143', '93.158.161.35'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 22:28:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b477ca1c8d8bce323575942be0e6a21', '5.255.250.167'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 22:28:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 253 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 253 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (253) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:54:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 253
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:54:
--------------------------------

                    -- Нова технологія Microsoft поліпшує голос і прибирає фоновий шум на відео
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('технологія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 253
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:54:
--------------------------------

                    -- Нова технологія Microsoft поліпшує голос і прибирає фоновий шум на відео
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Microsoft')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 253
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:54:
--------------------------------

                    -- Нова технологія Microsoft поліпшує голос і прибирає фоновий шум на відео
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поліпшує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 253
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------

                    -- Нова технологія Microsoft поліпшує голос і прибирає фоновий шум на відео
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('прибирає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 253
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------

                    -- Нова технологія Microsoft поліпшує голос і прибирає фоновий шум на відео
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('фоновий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 253
                        AND posts_tags.tag_id IN(4)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (57) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 75 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 75 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (75) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 242 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 242 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (242) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 260 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 260 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (260) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 289 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 289 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (289) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '08ee39910b1f536432b80acf18389f6b', '5.255.250.169'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 22:28:55:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:28:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:29:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:29:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:29:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:29:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:29:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:29:05:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 22:29:05:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 22:30:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 474 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 474 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (474) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:20:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 474
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:21:
--------------------------------

                    -- В Україні запустили онлайн-калькулятор розмитнення “євроблях”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Україні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 474
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:21:
--------------------------------

                    -- В Україні запустили онлайн-калькулятор розмитнення “євроблях”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('запустили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 474
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:22:
--------------------------------

                    -- В Україні запустили онлайн-калькулятор розмитнення “євроблях”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('онлайн-калькулятор')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 474
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:23:
--------------------------------

                    -- В Україні запустили онлайн-калькулятор розмитнення “євроблях”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розмитнення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 474
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:23:
--------------------------------

                    -- В Україні запустили онлайн-калькулятор розмитнення “євроблях”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“євроблях”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 474
                        AND posts_tags.tag_id IN(4,5,7,11,15)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 649 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 649 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (649) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 974 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 974 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (974) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1029) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 538 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 538 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (538) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 959 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 959 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:30:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (959) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:30:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '74ececf7cd3c9212e0aae101e502bdc8', '66.249.64.144'::inet, 'Chrome' );
--------------------------------
2019.11.10 22:32:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1258 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:32:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1258 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:32:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 22:33:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 811 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 811 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (811) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:09:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 811
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:11:
--------------------------------

                    -- Черкащанам пропонують долучитися до створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащанам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 811
                        AND posts_tags.tag_id IN(3,4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:12:
--------------------------------

                    -- Черкащанам пропонують долучитися до створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пропонують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 811
                        AND posts_tags.tag_id IN(3,4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:13:
--------------------------------

                    -- Черкащанам пропонують долучитися до створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('долучитися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 811
                        AND posts_tags.tag_id IN(3,4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:15:
--------------------------------

                    -- Черкащанам пропонують долучитися до створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('створення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 811
                        AND posts_tags.tag_id IN(3,4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:16:
--------------------------------

                    -- Черкащанам пропонують долучитися до створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бренду')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 811
                        AND posts_tags.tag_id IN(3,4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:17:
--------------------------------

                    -- Черкащанам пропонують долучитися до створення бренду регіону
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('регіону')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 811
                        AND posts_tags.tag_id IN(3,4,5,7)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (758) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (27) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 858 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 858 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (858) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 103 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 103 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (103) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 801 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 801 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:33:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (801) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:33:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '523294434128c819111602fd870dbc1d', '93.158.161.148'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 22:36:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 304 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 304 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (304) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:22:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 304
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:22:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Україні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:22:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('запустять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:22:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«індекс')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:23:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('цитування»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:23:
--------------------------------

                    -- В Україні запустять «індекс цитування» науковців
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('науковців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 304
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 282 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 282 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (282) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 90 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 90 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (90) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 152 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 152 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (152) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 303 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 303 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (303) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 207 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:36:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (207) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:36:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e4d2ca2acb6b418567ebb450e474782a', '66.249.64.94'::inet, 'Chrome' );
--------------------------------
2019.11.10 22:39:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 977 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:39:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 977 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:39:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (977) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:39:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 977
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:39:56:
--------------------------------

                    -- Василь Шкляр озвучив фільм «Чорний ворон», знятий за мотивами його роману
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Василь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 977
                        AND posts_tags.tag_id IN(3,4,5,7,8,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:39:57:
--------------------------------

                    -- Василь Шкляр озвучив фільм «Чорний ворон», знятий за мотивами його роману
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('озвучив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 977
                        AND posts_tags.tag_id IN(3,4,5,7,8,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:39:58:
--------------------------------

                    -- Василь Шкляр озвучив фільм «Чорний ворон», знятий за мотивами його роману
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('«Чорний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 977
                        AND posts_tags.tag_id IN(3,4,5,7,8,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:39:58:
--------------------------------

                    -- Василь Шкляр озвучив фільм «Чорний ворон», знятий за мотивами його роману
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('ворон»,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 977
                        AND posts_tags.tag_id IN(3,4,5,7,8,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:39:59:
--------------------------------

                    -- Василь Шкляр озвучив фільм «Чорний ворон», знятий за мотивами його роману
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знятий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 977
                        AND posts_tags.tag_id IN(3,4,5,7,8,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:40:00:
--------------------------------

                    -- Василь Шкляр озвучив фільм «Чорний ворон», знятий за мотивами його роману
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мотивами')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 977
                        AND posts_tags.tag_id IN(3,4,5,7,8,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:40:00:
--------------------------------

                    -- Василь Шкляр озвучив фільм «Чорний ворон», знятий за мотивами його роману
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('роману')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 977
                        AND posts_tags.tag_id IN(3,4,5,7,8,11,15,19)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:40:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 755 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:40:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 755 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:40:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (755) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:40:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 824 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:40:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 824 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 22:40:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (824) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 22:40:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '74ececf7cd3c9212e0aae101e502bdc8', '66.249.64.144'::inet, 'Chrome' );
--------------------------------
2019.11.10 23:03:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 546 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 546 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (546) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:31:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 546
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:33:
--------------------------------

                    -- У Черкаській облраді – новий депутат
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 546
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:34:
--------------------------------

                    -- У Черкаській облраді – новий депутат
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('облраді')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 546
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:35:
--------------------------------

                    -- У Черкаській облраді – новий депутат
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('депутат')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 546
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 418 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 418 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (418) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 189 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 189 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (189) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 515 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 515 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (515) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 571 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 571 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (571) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 535 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 535 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (535) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:03:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '43e9514d7842c5d3a9fc13ec35ecbffe', '66.249.64.141'::inet, 'Chrome' );
--------------------------------
2019.11.10 23:03:35:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 4 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 40 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (956,955,951,950,948,947,946,945,944,943) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '31a5135e473f0d396d2c8b2275688933', '77.88.47.4'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1036,1026) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 6 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:37:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (994,992) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 15 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1028,994) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1025,1009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 11 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (997,995) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1031) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id IN( 3,13 ) 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1031,1030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 6 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:46:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 6 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 160 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:04:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (767,766,765,757,756,755,754,752,751,749) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:04:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4103d9dc20dcd108f2a0ffc6c398f96e', '141.8.144.28'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:07:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1099 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:07:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1099 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:07:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9d04a26633468f9167c6de1e7369c00d', '77.88.47.14'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:07:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:07:51:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:07:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'fcfdda7ada2968d29d9ba2c78838c866', '37.9.87.181'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:23:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1216 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:23:11:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1216 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:23:11:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '523294434128c819111602fd870dbc1d', '93.158.161.148'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:23:11:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:23:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:23:36:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:23:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:23:40:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:23:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:23:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:23:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (952,951,950,949,948,947,946,945,944,943,942,941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:23:59:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 23:24:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 121 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 121 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (121) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 121
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:03:
--------------------------------

                    -- У Черкаській області маршрутка зіткнулася з вантажівкою, є постраждалі (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 121
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:04:
--------------------------------

                    -- У Черкаській області маршрутка зіткнулася з вантажівкою, є постраждалі (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 121
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:04:
--------------------------------

                    -- У Черкаській області маршрутка зіткнулася з вантажівкою, є постраждалі (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('маршрутка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 121
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:05:
--------------------------------

                    -- У Черкаській області маршрутка зіткнулася з вантажівкою, є постраждалі (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зіткнулася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 121
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:05:
--------------------------------

                    -- У Черкаській області маршрутка зіткнулася з вантажівкою, є постраждалі (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('вантажівкою,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 121
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:06:
--------------------------------

                    -- У Черкаській області маршрутка зіткнулася з вантажівкою, є постраждалі (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('постраждалі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 121
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:07:
--------------------------------

                    -- У Черкаській області маршрутка зіткнулася з вантажівкою, є постраждалі (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('(фото)')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 121
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 651 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 651 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (651) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 536 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 536 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (536) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 227 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 227 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (227) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:24:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '17697f4818e36bf3a86f7662a4869a57', '5.255.250.92'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:24:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 7 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 7 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 160 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (744,742,741,740,739,738,737,736,735,733) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '030142e38346ca0876d5623813632141', '77.88.47.83'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:24:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 893 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 893 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (893) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:12:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 893
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:13:
--------------------------------

                    -- Жителі Черкащини цьогоріч залучили на енергозбереження 22,2 млн. грн.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Жителі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 893
                        AND posts_tags.tag_id IN(4,5,6,7,11,14,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:13:
--------------------------------

                    -- Жителі Черкащини цьогоріч залучили на енергозбереження 22,2 млн. грн.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 893
                        AND posts_tags.tag_id IN(4,5,6,7,11,14,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:14:
--------------------------------

                    -- Жителі Черкащини цьогоріч залучили на енергозбереження 22,2 млн. грн.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('цьогоріч')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 893
                        AND posts_tags.tag_id IN(4,5,6,7,11,14,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:14:
--------------------------------

                    -- Жителі Черкащини цьогоріч залучили на енергозбереження 22,2 млн. грн.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('залучили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 893
                        AND posts_tags.tag_id IN(4,5,6,7,11,14,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:15:
--------------------------------

                    -- Жителі Черкащини цьогоріч залучили на енергозбереження 22,2 млн. грн.
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('енергозбереження')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 893
                        AND posts_tags.tag_id IN(4,5,6,7,11,14,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 416 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 416 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (416) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 683 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 683 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (683) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 561 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 561 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (561) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:24:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:24:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '17697f4818e36bf3a86f7662a4869a57', '5.255.250.92'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:43:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 326 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 326 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (326) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:02:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 326
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------

                    -- Ubisoft почала тизерити нову частину Splinter Cell?
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Ubisoft')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 326
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------

                    -- Ubisoft почала тизерити нову частину Splinter Cell?
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('почала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 326
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------

                    -- Ubisoft почала тизерити нову частину Splinter Cell?
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тизерити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 326
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------

                    -- Ubisoft почала тизерити нову частину Splinter Cell?
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('частину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 326
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------

                    -- Ubisoft почала тизерити нову частину Splinter Cell?
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Splinter')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 326
                        AND posts_tags.tag_id IN(3)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 157 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 157 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (157) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 45 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 45 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (45) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (134) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 60 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 60 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (60) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 193 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:04:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 193 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (193) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e4d2ca2acb6b418567ebb450e474782a', '66.249.64.94'::inet, 'Chrome' );
--------------------------------
2019.11.10 23:43:04:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:14:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:14:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.10 23:43:14:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.10 23:43:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 9 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 9 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 40 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (877,875,873,872,864,863,862,857,856,853) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:43:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:43:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1042,1041,1040,1039,1038,1037,1036,1035,1034,1033) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:43:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '523294434128c819111602fd870dbc1d', '93.158.161.148'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:44:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1182 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1182 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ebd2cf2ccabe546997847d08a1f1dfc6', '5.255.250.25'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.10 23:44:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 923 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 923 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (923) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 923
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:40:
--------------------------------

                    -- Черкаські волонтери повезли на Схід бійцям чергову передачу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(6,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:41:
--------------------------------

                    -- Черкаські волонтери повезли на Схід бійцям чергову передачу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('волонтери')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(6,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:42:
--------------------------------

                    -- Черкаські волонтери повезли на Схід бійцям чергову передачу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('повезли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(6,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:43:
--------------------------------

                    -- Черкаські волонтери повезли на Схід бійцям чергову передачу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бійцям')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(6,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:44:
--------------------------------

                    -- Черкаські волонтери повезли на Схід бійцям чергову передачу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('чергову')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(6,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:44:
--------------------------------

                    -- Черкаські волонтери повезли на Схід бійцям чергову передачу
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('передачу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 923
                        AND posts_tags.tag_id IN(6,7,12)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 596 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 596 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (596) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 170 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 170 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (170) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 117 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (117) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 611 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 611 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.10 23:44:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (611) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.10 23:44:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:03:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 10 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:29:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 10 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 20 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (845,831,829,824,803,798,789,766,756,746) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '55f91c232da7c76711e4452339fb4a50', '93.158.166.129'::inet, 'Chrome' );
--------------------------------
2019.11.11 00:03:30:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.11 00:03:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 11 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 11 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 70 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (891,889,888,887,886,883,882,881,880,878) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:31:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:03:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 847 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:33:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 847 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (847) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:33:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 847
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:34:
--------------------------------

                    -- Перепис населення 2020: в уряді вже складають список питань
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Перепис')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 847
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:35:
--------------------------------

                    -- Перепис населення 2020: в уряді вже складають список питань
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('населення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 847
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:36:
--------------------------------

                    -- Перепис населення 2020: в уряді вже складають список питань
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('складають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 847
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:37:
--------------------------------

                    -- Перепис населення 2020: в уряді вже складають список питань
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('список')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 847
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:38:
--------------------------------

                    -- Перепис населення 2020: в уряді вже складають список питань
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('питань')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 847
                        AND posts_tags.tag_id IN(5,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 697 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 697 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (697) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 821 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:38:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 821 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (821) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 872 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 872 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (872) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1003 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1003 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1003) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 962 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 962 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (962) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f0ca249e48fd3b9e58825203fd66edc1', '141.8.144.20'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:03:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 10 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:42:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	ptags.tag_id = 10 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 60 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (403,394,393,390,388,362,356,355,353,346) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:03:43:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '041b71d0e5cc69ada07c185bb281bac3', '5.255.250.62'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:03:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 859 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:44:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 859 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (859) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 859
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:45:
--------------------------------

                    -- Миючі засоби можуть зникнути з полиць черкаських магазинів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('засоби')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 859
                        AND posts_tags.tag_id IN(11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:45:
--------------------------------

                    -- Миючі засоби можуть зникнути з полиць черкаських магазинів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('можуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 859
                        AND posts_tags.tag_id IN(11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:46:
--------------------------------

                    -- Миючі засоби можуть зникнути з полиць черкаських магазинів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зникнути')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 859
                        AND posts_tags.tag_id IN(11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:46:
--------------------------------

                    -- Миючі засоби можуть зникнути з полиць черкаських магазинів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('полиць')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 859
                        AND posts_tags.tag_id IN(11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:46:
--------------------------------

                    -- Миючі засоби можуть зникнути з полиць черкаських магазинів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 859
                        AND posts_tags.tag_id IN(11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:47:
--------------------------------

                    -- Миючі засоби можуть зникнути з полиць черкаських магазинів
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('магазинів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 859
                        AND posts_tags.tag_id IN(11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 791 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 791 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (791) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 223 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 223 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (223) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 219 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 219 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (219) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 330 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 330 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (330) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 897 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 897 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:03:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (897) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:03:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'eb1b01914a20b9ed6cc6eaf9728e4ba9', '93.158.161.131'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:21:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 201 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 201 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (201) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:13:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 201
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:14:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чудова')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:15:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('новина')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:16:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поціновувачів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:17:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('бібліотеках')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:18:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('поповнення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:19:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('свіжої')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:20:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('цікавої')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:21:
--------------------------------

                    -- Чудова новина для поціновувачів книг! У бібліотеках ОТГ поповнення свіжої та цікавої літератури
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('літератури')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 201
                        AND posts_tags.tag_id IN(3,4,5)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 126 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 126 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (126) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 120 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 120 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (120) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 134 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (134) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 129 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 129 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (129) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 128 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 128 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (128) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:21:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 856 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:22:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 856 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (856) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:22:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 856
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:23:
--------------------------------

                    -- Світ заочі: куди на Черкащині зникають люди та чому знайдених не завжди повертають додому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('заочі:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 856
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:24:
--------------------------------

                    -- Світ заочі: куди на Черкащині зникають люди та чому знайдених не завжди повертають додому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 856
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:24:
--------------------------------

                    -- Світ заочі: куди на Черкащині зникають люди та чому знайдених не завжди повертають додому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зникають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 856
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:25:
--------------------------------

                    -- Світ заочі: куди на Черкащині зникають люди та чому знайдених не завжди повертають додому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знайдених')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 856
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:26:
--------------------------------

                    -- Світ заочі: куди на Черкащині зникають люди та чому знайдених не завжди повертають додому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('завжди')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 856
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:26:
--------------------------------

                    -- Світ заочі: куди на Черкащині зникають люди та чому знайдених не завжди повертають додому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('повертають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 856
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:27:
--------------------------------

                    -- Світ заочі: куди на Черкащині зникають люди та чому знайдених не завжди повертають додому
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('додому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 856
                        AND posts_tags.tag_id IN(4,5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 969 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 969 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (969) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 710 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (710) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 190 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 190 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (190) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 429 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:21:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 718 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:52:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 718 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:21:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (718) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 718
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:53:
--------------------------------

                    -- Американський професор Чарльз Уайт прочитав лекції черкаським студентам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Американський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 718
                        AND posts_tags.tag_id IN(3,5,7,11,13,21,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:55:
--------------------------------

                    -- Американський професор Чарльз Уайт прочитав лекції черкаським студентам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('професор')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 718
                        AND posts_tags.tag_id IN(3,5,7,11,13,21,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:56:
--------------------------------

                    -- Американський професор Чарльз Уайт прочитав лекції черкаським студентам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Чарльз')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 718
                        AND posts_tags.tag_id IN(3,5,7,11,13,21,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:57:
--------------------------------

                    -- Американський професор Чарльз Уайт прочитав лекції черкаським студентам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('прочитав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 718
                        AND posts_tags.tag_id IN(3,5,7,11,13,21,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:21:59:
--------------------------------

                    -- Американський професор Чарльз Уайт прочитав лекції черкаським студентам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лекції')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 718
                        AND posts_tags.tag_id IN(3,5,7,11,13,21,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:00:
--------------------------------

                    -- Американський професор Чарльз Уайт прочитав лекції черкаським студентам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкаським')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 718
                        AND posts_tags.tag_id IN(3,5,7,11,13,21,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 290 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 290 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (290) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:01:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 290
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:01:
--------------------------------

                    -- У Єгипті розкопали &quot;багатоповерхівку&quot; греко-римської епохи (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Єгипті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 290
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------

                    -- У Єгипті розкопали &quot;багатоповерхівку&quot; греко-римської епохи (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('розкопали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 290
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------

                    -- Американський професор Чарльз Уайт прочитав лекції черкаським студентам
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('студентам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 718
                        AND posts_tags.tag_id IN(3,5,7,11,13,21,22)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 524 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 281 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 926 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (926) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 915 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (915) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '31a5135e473f0d396d2c8b2275688933', '77.88.47.4'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:22:02:
--------------------------------

                    -- У Єгипті розкопали &quot;багатоповерхівку&quot; греко-римської епохи (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('&quot;багатоповерхівку&quot;')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 290
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:02:
--------------------------------

                    -- У Єгипті розкопали &quot;багатоповерхівку&quot; греко-римської епохи (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('греко-римської')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 290
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:03:
--------------------------------

                    -- У Єгипті розкопали &quot;багатоповерхівку&quot; греко-римської епохи (фото)
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('(фото)')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 290
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 123 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 123 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (123) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 257 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 257 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (257) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 102 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 102 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (102) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 73 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 73 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (73) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 148 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 148 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (148) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:22:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:22:03:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.11 00:34:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 873 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:34:57:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 873 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:34:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (873) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:34:57:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:34:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 873
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:34:58:
--------------------------------

                    -- На Черкащині браконьєри наловили 260 кілограмів риби
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 873
                        AND posts_tags.tag_id IN(5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:34:59:
--------------------------------

                    -- На Черкащині браконьєри наловили 260 кілограмів риби
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('браконьєри')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 873
                        AND posts_tags.tag_id IN(5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:00:
--------------------------------

                    -- На Черкащині браконьєри наловили 260 кілограмів риби
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('наловили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 873
                        AND posts_tags.tag_id IN(5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:01:
--------------------------------

                    -- На Черкащині браконьєри наловили 260 кілограмів риби
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('кілограмів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 873
                        AND posts_tags.tag_id IN(5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 385 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 385 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (385) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 229 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 229 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (229) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 311 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'dd562c484c633cdf2aeb3670bb0b8c1c', '66.249.64.143'::inet, 'Chrome' );
--------------------------------
2019.11.11 00:35:02:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:27:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:50:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:35:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (952,951,950,949,948,947,946,945,944,943,942,941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:35:50:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.11 00:40:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 274 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 274 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (274) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 274
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------

                    -- Xiaomi представила аналог Apple Watch
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Xiaomi')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 274
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------

                    -- Xiaomi представила аналог Apple Watch
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('представила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 274
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------

                    -- Xiaomi представила аналог Apple Watch
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('аналог')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 274
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 232 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 232 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (232) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 335 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 335 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (335) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 209 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 209 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (209) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 262 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 262 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (262) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 244 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 244 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (244) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 00:40:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 629 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 629 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:40:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (629) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 629
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:57:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('презентували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:58:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('старовинну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:58:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('печатку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:59:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('єдиного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:59:
--------------------------------

                    -- В Умані презентували старовинну печатку єдиного сина княгині Ольги
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('княгині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 629
                        AND posts_tags.tag_id IN(4,5,6,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:40:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 543 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 543 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (543) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 668 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 668 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (668) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 649 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 649 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (649) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 1029 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1029) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 357 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 357 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:41:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (357) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:41:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ec13c9b9083f3f587d155cdcc007a674', '66.249.64.139'::inet, 'Chrome' );
--------------------------------
2019.11.11 00:52:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 855 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:19:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 855 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (855) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:19:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 855
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:20:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Виклик')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:21:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('підліткам.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:21:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащани')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:22:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('створили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:23:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('перший')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:23:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Україні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:24:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('щоденник,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:24:
--------------------------------

                    -- Виклик підліткам. Черкащани створили перший в Україні щоденник, що мотивує
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мотивує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 855
                        AND posts_tags.tag_id IN(3,4,5,6,7,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 758 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (758) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 27 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (27) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 243 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 243 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (243) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 974 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 974 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 00:52:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (974) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 00:52:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '97c2032502f03644c4fcfd3b03de6b67', '66.249.64.140'::inet, '[Bot] Googlebot' );
--------------------------------
2019.11.11 00:52:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '865f6569c8fcc78bbb4990f60949e90e', '66.249.64.142'::inet, '[Bot] Googlebot' );
--------------------------------
2019.11.11 01:01:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 231 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:01:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 231 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:01:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (231) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:10:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 231
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:10:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Маленьким')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:11:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:12:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('пропонують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:12:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('участь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:13:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('конкурсі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:13:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('“Домашні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:14:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('тварини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:15:
--------------------------------

                    -- Маленьким черкащанам пропонують взяти участь у конкурсі “Домашні тварини у нашій родині”
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('родині”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 231
                        AND posts_tags.tag_id IN(4,5,6,7,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 273 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:01:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 273 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:01:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (273) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:01:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 266 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:01:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:01:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e1443358d6c17a646eaa2b057a770a47', '66.249.64.140'::inet, 'Chrome' );
--------------------------------
2019.11.11 01:01:16:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.11 01:02:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1045 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:02:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1045 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:02:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '523294434128c819111602fd870dbc1d', '93.158.161.148'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 01:02:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '030142e38346ca0876d5623813632141', '77.88.47.83'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 01:10:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 302 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 302 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (302) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:05:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 302
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:06:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зробили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:06:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('відкриття,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:06:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('докорінно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:07:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('змінює')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:07:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('уявлення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:07:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('полювання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:07:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('первісних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------

                    -- Вчені зробили відкриття, яке докорінно змінює уявлення про полювання первісних людей на мамонта
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('мамонта')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 302
                        AND posts_tags.tag_id IN(3,7,8)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 173 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 173 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (173) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 38 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 38 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (38) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 23 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 23 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (23) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 328 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (328) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 66 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 66 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (66) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '305d9870f38b5ae9746f855b44ebf07e', '66.249.64.78'::inet, 'Chrome' );
--------------------------------
2019.11.11 01:10:08:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:13:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:18:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:10:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:10:19:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.11 01:10:19:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.11 01:27:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 954 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 954 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (954) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 954
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:54:
--------------------------------

                    -- Неповнолітній черкащанин може сісти на 8 років за грабіж
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Неповнолітній')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 954
                        AND posts_tags.tag_id IN(5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:55:
--------------------------------

                    -- Неповнолітній черкащанин може сісти на 8 років за грабіж
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 954
                        AND posts_tags.tag_id IN(5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:55:
--------------------------------

                    -- Неповнолітній черкащанин може сісти на 8 років за грабіж
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('грабіж')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 954
                        AND posts_tags.tag_id IN(5,6,8,9,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 707 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:55:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 707 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (707) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 793 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 793 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (793) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 636 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 636 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (636) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 654 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 654 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (654) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 648 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 648 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:27:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (648) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:27:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b30063160b5b5fcde0234cb6514e529', '100.43.90.126'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 01:39:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 899 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 899 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (899) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:00:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 899
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:01:
--------------------------------

                    -- У Черкасах вночі невідомі викрали двері з автомобіля
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 899
                        AND posts_tags.tag_id IN(4,5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:03:
--------------------------------

                    -- У Черкасах вночі невідомі викрали двері з автомобіля
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('невідомі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 899
                        AND posts_tags.tag_id IN(4,5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:04:
--------------------------------

                    -- У Черкасах вночі невідомі викрали двері з автомобіля
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('викрали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 899
                        AND posts_tags.tag_id IN(4,5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:05:
--------------------------------

                    -- У Черкасах вночі невідомі викрали двері з автомобіля
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('автомобіля')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 899
                        AND posts_tags.tag_id IN(4,5,6,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 132 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:05:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 768 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 127 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 118 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 116 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 116 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (116) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ec13c9b9083f3f587d155cdcc007a674', '66.249.64.139'::inet, 'Chrome' );
--------------------------------
2019.11.11 01:40:06:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:31:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:54:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:40:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (952,951,950,949,948,947,946,945,944,943,942,941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:40:55:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.11 01:44:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 260 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:58:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 260 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (260) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:58:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 260
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:58:
--------------------------------

                    -- Windows 10 отримає невеликі, але важливі зміни
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Windows')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 260
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:58:
--------------------------------

                    -- Windows 10 отримає невеликі, але важливі зміни
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('отримає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 260
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------

                    -- Windows 10 отримає невеликі, але важливі зміни
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('невеликі,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 260
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------

                    -- Windows 10 отримає невеликі, але важливі зміни
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('важливі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 260
                        AND posts_tags.tag_id IN(4,9)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 57 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (57) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 75 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 75 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (75) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 204 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 204 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (204) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 278 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 278 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (278) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 215 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 215 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:44:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (215) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:44:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 01:45:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 286 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:24:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 286 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (286) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 286
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:24:
--------------------------------

                    -- WhatsApp оновив налаштування конфіденційності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('WhatsApp')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 286
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:25:
--------------------------------

                    -- WhatsApp оновив налаштування конфіденційності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('оновив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 286
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:25:
--------------------------------

                    -- WhatsApp оновив налаштування конфіденційності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('налаштування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 286
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:25:
--------------------------------

                    -- WhatsApp оновив налаштування конфіденційності
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('конфіденційності')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 286
                        AND posts_tags.tag_id IN(3,7,8,14)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 138 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:25:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 138 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (138) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 320 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 320 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (320) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 140 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 140 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (140) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 250 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 250 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:45:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:45:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 01:48:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1010 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:48:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1010 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 01:48:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1010) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:12:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1010
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:12:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Ірдинських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:12:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('болотах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:13:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:13:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('браконьєра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:13:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сітками')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 1010
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:15:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Ірдинських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:15:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('болотах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:15:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:15:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('браконьєра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:15:
--------------------------------

                    -- На Ірдинських болотах затримали браконьєра з сітками
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('сітками')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1010
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 01:48:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 02:06:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 849 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:09:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 849 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (849) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:09:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 849
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:10:
--------------------------------

                    -- Черкащанин візьме участь у Всесвітній олімпіаді з робототехніки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 849
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:11:
--------------------------------

                    -- Черкащанин візьме участь у Всесвітній олімпіаді з робототехніки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('візьме')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 849
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:12:
--------------------------------

                    -- Черкащанин візьме участь у Всесвітній олімпіаді з робототехніки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('участь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 849
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:13:
--------------------------------

                    -- Черкащанин візьме участь у Всесвітній олімпіаді з робототехніки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Всесвітній')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 849
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:14:
--------------------------------

                    -- Черкащанин візьме участь у Всесвітній олімпіаді з робототехніки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('олімпіаді')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 849
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:15:
--------------------------------

                    -- Черкащанин візьме участь у Всесвітній олімпіаді з робототехніки
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('робототехніки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 849
                        AND posts_tags.tag_id IN(5,11)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 690 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 690 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (690) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 02:06:15:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.11 02:06:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 200 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:16:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 200 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (200) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:16:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 200
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:16:
--------------------------------

                    -- Верховна Рада підтримала в другому читанні законопроект про незаконне збагачення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('Верховна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 200
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:17:
--------------------------------

                    -- Верховна Рада підтримала в другому читанні законопроект про незаконне збагачення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('підтримала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 200
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:18:
--------------------------------

                    -- Верховна Рада підтримала в другому читанні законопроект про незаконне збагачення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('другому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 200
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:18:
--------------------------------

                    -- Верховна Рада підтримала в другому читанні законопроект про незаконне збагачення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('читанні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 200
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:19:
--------------------------------

                    -- Верховна Рада підтримала в другому читанні законопроект про незаконне збагачення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('законопроект')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 200
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:19:
--------------------------------

                    -- Верховна Рада підтримала в другому читанні законопроект про незаконне збагачення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('незаконне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 200
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:20:
--------------------------------

                    -- Верховна Рада підтримала в другому читанні законопроект про незаконне збагачення
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('збагачення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 200
                        AND posts_tags.tag_id IN(4,5,6,7,9,11,23)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 571 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 571 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (571) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 330 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 330 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (330) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 535 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 535 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (535) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 661 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 661 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (661) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 594 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.id = 594 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:06:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (594) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:06:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 02:12:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1098 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:00:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1098 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 02:12:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 324 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:10:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 324 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (324) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                string_agg( posts_tags.tag_id::text, ',' ) as agg_tags
            FROM
                posts
                LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id )
            WHERE
                posts.id = 324
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------

                    -- Нові лайфхаки із застосування зубочистки, про які ви не знаєте
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('лайфхаки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 324
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------

                    -- Нові лайфхаки із застосування зубочистки, про які ви не знаєте
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('застосування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 324
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------

                    -- Нові лайфхаки із застосування зубочистки, про які ви не знаєте
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('зубочистки,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 324
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------

                    -- Нові лайфхаки із застосування зубочистки, про які ви не знаєте
                    SELECT
                        DISTINCT posts.id,
                        rank
                    FROM
                        posts
                        LEFT JOIN posts_tags ON( posts.id = posts_tags.post_id ),
                        ts_rank(posts.svector,websearch_to_tsquery('знаєте')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 324
                        AND posts_tags.tag_id IN(0)
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e4d2ca2acb6b418567ebb450e474782a', '66.249.64.94'::inet, 'Chrome' );
--------------------------------
2019.11.11 02:12:10:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:15:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:21:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:12:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250,249,248,247,246,245,244,243,242,241,240,239) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2019.11.11 02:12:21:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2019.11.11 02:12:21:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2019.11.11 02:13:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 478 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:13:12:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 478 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:13:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '50027cc66ea01f9c2732ba30158ccdd1', '5.255.250.61'::inet, '[Bot] Yandex' );
--------------------------------
2019.11.11 02:17:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1224 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:17:45:
--------------------------------
SELECT 
-- SELECT 
	DISTINCT posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category )
	LEFT JOIN posts_tags as ptags ON ( ptags.post_id = posts.id AND ptags.tag_id > 0 )
	LEFT JOIN users as usr ON ( usr.id = posts.author_id )
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= NOW() AND
	posts.posted = 1 AND
	posts.id = 1224 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2019.11.11 02:17:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
