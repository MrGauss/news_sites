2020.01.18 20:41:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6147 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6147 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6147) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT * FROM categories ORDER BY level;  -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6147
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------

                    -- В Черкасах чоловік збив дитину та утік з місця ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6147
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------

                    -- В Черкасах чоловік збив дитину та утік з місця ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('чоловік')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6147
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------

                    -- В Черкасах чоловік збив дитину та утік з місця ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('дитину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6147
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 132 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 132 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (132) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 127 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 127 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (127) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 768 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 768 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (768) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1991 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1991 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1991) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 118 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 118 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (118) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9aa1a269534ea11c9fda025da7abb5fc', '141.8.188.141'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:41:54:
--------------------------------

                SELECT
                    tags.id,
                    tags.name,
                    tags.altname,
                    (SELECT count(posts_tags.post_id) FROM posts_tags WHERE posts_tags.tag_id = tags.id ) as news_count
                FROM
                    tags WHERE id > 0 ORDER BY name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 12;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6506,6505,6504,6503,6502,6501,6500,6499,6498,6497,6496,6495) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:54:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2020.01.18 20:41:54:
--------------------------------

                SELECT
                    date_trunc('day', visit_counter.ts) as visit_day,
                    COUNT( DISTINCT visit_counter.ua_hash ) as count
                FROM
                    visit_counter
                WHERE
                    date_trunc('day', visit_counter.ts ) > date_trunc('day', NOW() - INTERVAL '1 week')
                GROUP BY visit_day
                ORDER BY visit_day;
            
--------------------------------
2020.01.18 20:41:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6432 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:56:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6432 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6432) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6432
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:56:
--------------------------------

                    -- У Черкасах змінили термін для отримання пакунка малюка від міста
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6432
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:56:
--------------------------------

                    -- У Черкасах змінили термін для отримання пакунка малюка від міста
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('змінили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6432
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:57:
--------------------------------

                    -- У Черкасах змінили термін для отримання пакунка малюка від міста
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('термін')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6432
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:57:
--------------------------------

                    -- У Черкасах змінили термін для отримання пакунка малюка від міста
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('отримання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6432
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:57:
--------------------------------

                    -- У Черкасах змінили термін для отримання пакунка малюка від міста
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пакунка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6432
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:57:
--------------------------------

                    -- У Черкасах змінили термін для отримання пакунка малюка від міста
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('малюка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6432
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5618 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5618 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:41:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5618) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:41:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 1950 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3425,3424,3421,3420,3415,3410,3403,3402,3401,3400) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '6'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '6'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '6'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '6'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6575,6573) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '15'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '15'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6579) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '15'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '15'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6579,6577) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '11'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '11'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6595,6593) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '11'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '11'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 10 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6574,6573) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '3'::int8, '13'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '3'::int8, '13'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 1;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6591) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '3'::int8, '13'::int8 ] 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	posts.tag_id && ARRAY[ '3'::int8, '13'::int8 ] 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 2;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6591,6590) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6427 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6427 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6427) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:25:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6427
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:26:
--------------------------------

                    -- Головний муніципал Черкас проводитиме особистий прийом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Головний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6427
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:26:
--------------------------------

                    -- Головний муніципал Черкас проводитиме особистий прийом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('муніципал')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6427
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:26:
--------------------------------

                    -- Головний муніципал Черкас проводитиме особистий прийом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6427
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:26:
--------------------------------

                    -- Головний муніципал Черкас проводитиме особистий прийом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('проводитиме')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6427
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:26:
--------------------------------

                    -- Головний муніципал Черкас проводитиме особистий прийом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('особистий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6427
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:26:
--------------------------------

                    -- Головний муніципал Черкас проводитиме особистий прийом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('прийом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6427
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f039b8be062893b9aa48951c52986214', '77.88.47.139'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:42:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6423 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6423 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6423) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:33:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6423
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:33:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:33:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('водоканал')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('запрошує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('обговорення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('реалізація')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('соціальних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('проектів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------

                    -- Черкаський водоканал запрошує на обговорення реалізація соціальних проектів від Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Світового')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6423
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4095 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4095 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4095) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 524 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 524 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (524) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4371 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 210 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 210 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (210) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4057 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4057 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:42:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4057) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:42:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '437d4ced1a72a53b31fab17a953a4843', '93.158.161.7'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:43:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6437 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6437 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6437) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:17:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6437
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:17:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Відомий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кінокритик')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('опублікував')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('рецензію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('фільм,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('знятий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сценарієм')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкаського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------

                    -- Відомий кінокритик опублікував рецензію на фільм, знятий за сценарієм черкаського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('казкаря')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6437
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5070 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:18:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5070 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5070) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5073 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:18:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5073 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5073) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ef598c258dab8e422e5a5aca2656dc3e', '100.43.91.130'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:43:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2773 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:20:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2773 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2773) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:20:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 2773
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:21:
--------------------------------

                    -- Наступного тижня в Черкасах засніжить
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Наступного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2773
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:21:
--------------------------------

                    -- Наступного тижня в Черкасах засніжить
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2773
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:21:
--------------------------------

                    -- Наступного тижня в Черкасах засніжить
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('засніжить')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2773
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b30063160b5b5fcde0234cb6514e529', '100.43.90.126'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:43:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['15'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['15'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 370 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3632,3594,3587,3586,3563,3554,3551,3550,3548,3547) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:43:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:43:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6395 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6395 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6395) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6395
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:43:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Притягнуто')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:43:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кримінальної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:43:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відповідальності')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:43:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('місцевого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('жителя,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('збував')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкасцям')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('незаконно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('виготовлені')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------

                    -- Притягнуто до кримінальної відповідальності місцевого жителя, який збував черкасцям незаконно виготовлені алкогольні напої
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('алкогольні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6395
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6057 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6057 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6057) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4221 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4221 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4221) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 200 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 200 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (200) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1787 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1787 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1787) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 330 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 330 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (330) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 20:43:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6206 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6206 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:43:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6206) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6206
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:54:
--------------------------------

                    -- Новий рік чи Маланки? Як в старих Черкасах святкували
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Маланки?')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6206
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8, '18'::int8, '19'::int8, '20'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:54:
--------------------------------

                    -- Новий рік чи Маланки? Як в старих Черкасах святкували
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('старих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6206
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8, '18'::int8, '19'::int8, '20'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:54:
--------------------------------

                    -- Новий рік чи Маланки? Як в старих Черкасах святкували
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6206
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8, '18'::int8, '19'::int8, '20'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:54:
--------------------------------

                    -- Новий рік чи Маланки? Як в старих Черкасах святкували
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('святкували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6206
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8, '18'::int8, '19'::int8, '20'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:43:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c5fa834f809b8e89f0818b5a8ffff300', '66.249.72.14'::inet, 'Chrome' );
--------------------------------
2020.01.18 20:44:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5616 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:44:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5616 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:44:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5616) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:44:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5616
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:44:05:
--------------------------------

                    -- Турецький клуб хоче орендувати футболіста з Черкас
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Турецький')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5616
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:44:05:
--------------------------------

                    -- Турецький клуб хоче орендувати футболіста з Черкас
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('орендувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5616
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:44:06:
--------------------------------

                    -- Турецький клуб хоче орендувати футболіста з Черкас
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('футболіста')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5616
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:44:06:
--------------------------------

                    -- Турецький клуб хоче орендувати футболіста з Черкас
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5616
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:44:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '57f8d243af9d3a50154ffc9f6ce0018d', '5.255.250.110'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:45:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1683 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:45:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1683 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:45:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1683) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:45:53:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 1683
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:45:54:
--------------------------------

                    -- Черкаську молодь вчили захищати права споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаську')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1683
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:45:54:
--------------------------------

                    -- Черкаську молодь вчили захищати права споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('молодь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1683
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:45:54:
--------------------------------

                    -- Черкаську молодь вчили захищати права споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('захищати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1683
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:45:54:
--------------------------------

                    -- Черкаську молодь вчили захищати права споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('споживачів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1683
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:45:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'eb1b01914a20b9ed6cc6eaf9728e4ba9', '93.158.161.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:51:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:51:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 1990 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:51:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3348,3345,3343,3342,3339,3338,3336,3335,3334,3333) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:51:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 20:53:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6424 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:11:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6424 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6424) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6424
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:11:
--------------------------------

                    -- В Умані з 9 поверху випав хлопчик: дитина не вижила
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('поверху')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6424
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:11:
--------------------------------

                    -- В Умані з 9 поверху випав хлопчик: дитина не вижила
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('хлопчик:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6424
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:11:
--------------------------------

                    -- В Умані з 9 поверху випав хлопчик: дитина не вижила
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('дитина')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6424
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:12:
--------------------------------

                    -- В Умані з 9 поверху випав хлопчик: дитина не вижила
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вижила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6424
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 729 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 729 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (729) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2044 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2044 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2044) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2427 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2427 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2427) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1699 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1699 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1699) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1191 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1191 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:53:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1191) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:53:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '504088e8b887d47af01ad4262285bd03', '66.249.72.14'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 20:59:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6364 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6364 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6364) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6364
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:00:
--------------------------------

                    -- У Черкасах молодик у під’їзді вирвав у жінки сумку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6364
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:00:
--------------------------------

                    -- У Черкасах молодик у під’їзді вирвав у жінки сумку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('молодик')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6364
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:00:
--------------------------------

                    -- У Черкасах молодик у під’їзді вирвав у жінки сумку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('під’їзді')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6364
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:00:
--------------------------------

                    -- У Черкасах молодик у під’їзді вирвав у жінки сумку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вирвав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6364
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b477ca1c8d8bce323575942be0e6a21', '5.255.250.167'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:59:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:01:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595,6594,6593,6592,6591,6590,6589,6588,6587,6586,6585,6584,6583,6582,6581,6580,6579,6578,6577,6576,6575,6574,6573,6572,6571,6570,6569,6568,6567,6566,6565,6564,6563,6562,6561,6560,6559,6558,6557,6556,6555,6554,6553,6552,6551,6550,6549,6548,6547,6546,6545,6544,6543,6542,6541,6540,6539,6538,6537,6536,6535,6534,6533,6532,6531,6530,6529,6528,6527,6526,6525,6524,6523,6522,6521,6520,6519,6518,6517,6516,6515,6514,6513,6512,6511,6510,6509,6508,6507,6506,6505,6504,6503,6502,6501,6500,6499,6498,6497,6496,6495,6494,6493,6492,6491,6490,6489,6488,6487,6486,6485,6484,6483,6482,6481,6480,6479,6478,6477,6476,6475,6474,6473,6472,6471,6470,6469,6468,6467,6466,6465,6464,6463,6462,6461,6460,6459,6458,6457,6456,6455,6454,6453,6452,6451,6450,6449,6448,6447,6446,6445,6444,6443,6442,6441,6440,6439,6438,6437,6436,6435,6434,6433,6432,6431,6430,6429,6428,6427,6426,6425,6424,6423,6422,6421,6420,6419,6418,6417,6416,6415,6414,6413,6412,6411,6410,6409,6408,6407,6406,6405,6404,6403,6402,6401,6400,6399,6398,6397,6396,6395,6394,6393,6392,6391,6390,6389,6388,6387,6386,6385,6384,6383,6382,6381,6380,6379,6378,6377,6376,6375,6374,6373,6372,6371,6370,6369,6368,6367,6366,6365,6364,6363,6362,6361,6360,6359,6358,6357,6356,6355,6354,6353,6352,6351,6350,6349,6348,6347,6346,6345,6344,6343,6342,6341,6340,6339,6338,6337,6336,6335,6334,6333,6332,6331,6330,6329,6328,6327,6326,6325,6324,6323,6322,6321,6320,6319,6318,6317,6316,6315,6314,6313,6312,6311,6310,6309,6308,6307,6306,6305,6304,6303,6302,6301,6300,6299,6298,6297,6296,6295,6294,6293,6292,6291,6290,6289,6288,6287,6286,6285,6284,6283,6282,6281,6280,6279,6278,6277,6276,6275,6274,6273,6272,6271,6270,6269,6268,6267,6266,6265,6264,6263,6262,6261,6260,6259,6258,6257,6256,6255,6254,6253,6252,6251,6250,6249,6248,6247,6246,6245,6244,6243,6242,6241,6240,6239,6238,6237,6236,6235,6234,6233,6232,6231,6230,6229,6228,6227,6226,6225,6224,6223,6222,6221,6220,6219,6218,6217,6216,6215,6214,6213,6212,6211,6210,6209,6208,6207,6206,6205,6204,6203,6202,6201,6200,6199,6198,6197,6196,6195,6194,6193,6192,6191,6190,6189,6188,6187,6186,6185,6184,6183,6182,6181,6180,6179,6178,6177,6176,6175,6174,6173,6172,6171,6170,6169,6168,6167,6166,6165,6164,6163,6162,6161,6160,6159,6158,6157,6156,6155,6154,6153,6152,6151,6150,6149,6148,6147,6146,6145,6144,6143,6142,6141,6140,6139,6138,6137,6136,6135,6134,6133,6132,6131,6130,6129,6128,6127,6126,6125,6124,6123,6122,6121,6120,6119,6118,6117,6116,6115,6114,6113,6112,6111,6110,6109,6108,6107,6106,6105,6104,6103,6102,6101,6100,6099,6098,6097,6096,6095,6094,6093,6092,6091,6090,6089,6088,6087,6086,6085,6084,6083,6082,6081,6080,6079,6078,6077,6076,6075,6074,6073,6072,6071,6070,6069,6068,6067,6066,6065,6064,6063,6062,6061,6060,6059,6058,6057,6056,6055,6054,6053,6052,6051,6050,6049,6048,6047,6046,6045,6044,6043,6042,6041,6040,6039,6038,6037,6036,6035,6034,6033,6032,6031,6030,6029,6028,6027,6026,6025,6024,6023,6022,6021,6020,6019,6018,6017,6016,6015,6014,6013,6012,6011,6010,6009,6008,6007,6006,6005,6004,6003,6002,6001,6000,5999,5998,5997,5996,5995,5994,5993,5992,5991,5990,5989,5988,5987,5986,5985,5984,5983,5982,5981,5980,5979,5978,5977,5976,5975,5974,5973,5972,5971,5970,5969,5968,5967,5966,5965,5964,5963,5962,5961,5960,5959,5958,5957,5956,5955,5954,5953,5952,5951,5950,5949,5948,5947,5946,5945,5944,5943,5942,5941,5940,5939,5938,5937,5936,5935,5934,5933,5932,5931,5930,5929,5928,5927,5926,5925,5924,5923,5922,5921,5920,5919,5918,5917,5916,5915,5914,5913,5912,5911,5910,5909,5908,5907,5906,5905,5904,5903,5902,5901,5900,5899,5898,5897,5896,5895,5894,5893,5892,5891,5890,5889,5888,5887,5886,5885,5884,5883,5882,5881,5880,5879,5878,5877,5876,5875,5874,5873,5872,5871,5870,5869,5868,5867,5866,5865,5864,5863,5862,5861,5860,5859,5858,5857,5856,5855,5854,5853,5852,5851,5850,5849,5848,5847,5846,5845,5844,5843,5842,5841,5840,5839,5838,5837,5836,5835,5834,5833,5832,5831,5830,5829,5828,5827,5826,5825,5824,5823,5822,5821,5820,5819,5818,5817,5816,5815,5814,5813,5812,5811,5810,5809,5808,5807,5806,5805,5804,5803,5802,5801,5800,5799,5798,5797,5796,5795,5794,5793,5792,5791,5790,5789,5788,5787,5786,5785,5784,5783,5782,5781,5780,5779,5778,5777,5776,5775,5774,5773,5772,5771,5770,5769,5768,5767,5766,5765,5764,5763,5762,5761,5760,5759,5758,5757,5756,5755,5754,5753,5752,5751,5750,5749,5748,5747,5746,5745,5744,5743,5742,5741,5740,5739,5738,5737,5736,5735,5734,5733,5732,5731,5730,5729,5728,5727,5726,5725,5724,5723,5722,5721,5720,5719,5718,5717,5716,5715,5714,5713,5712,5711,5710,5709,5708,5707,5706,5705,5704,5703,5702,5701,5700,5699,5698,5697,5696,5695,5694,5693,5692,5691,5690,5689,5688,5687,5686,5685,5684,5683,5682,5681,5680,5679,5678,5677,5676,5675,5674,5673,5672,5671,5670,5669,5668,5667,5666,5665,5664,5663,5662,5661,5660,5659,5658,5657,5656,5655,5654,5653,5652,5651,5650,5649,5648,5647,5646,5645,5644,5643,5642,5641,5640,5639,5638,5637,5636,5635,5634,5633,5632,5631,5630,5629,5628,5627,5626,5625,5624,5623,5622,5621,5620,5619,5618,5617,5616,5615,5614,5613,5612,5611,5610,5609,5608,5607,5606,5605,5604,5603,5602,5601,5600,5599,5598,5597,5596,5595,5594,5593,5592,5591,5590,5589,5588,5587,5586,5585,5584,5583,5582,5581,5580,5579,5578,5577,5576,5575,5574,5573,5572,5571,5570,5569,5568,5567,5566,5565,5564,5563,5562,5561,5560,5559,5558,5557,5556,5555,5554,5553,5552,5551,5550,5549,5548,5547,5546,5545,5544,5543,5542,5541,5540,5539,5538,5537,5536,5535,5534,5533,5532,5531,5530,5529,5528,5527,5526,5525,5524,5523,5522,5521,5520,5519,5518,5517,5516,5515,5514,5513,5512,5511,5510,5509,5508,5507,5506,5505,5504,5503,5502,5501,5500,5499,5498,5497,5496,5495,5494,5493,5492,5491,5490,5489,5488,5487,5486,5485,5484,5483,5482,5481,5480,5479,5478,5477,5476,5475,5474,5473,5472,5471,5470,5469,5468,5467,5466,5465,5464,5463,5462,5461,5460,5459,5458,5457,5456,5455,5454,5453,5452,5451,5450,5449,5448,5447,5446,5445,5444,5443,5442,5441,5440,5439,5438,5437,5436,5435,5434,5433,5432,5431,5430,5429,5428,5427,5426,5425,5424,5423,5422,5421,5420,5419,5418,5417,5416,5415,5414,5413,5412,5411,5410,5409,5408,5407,5406,5405,5404,5403,5402,5401,5400,5399,5398,5397,5396,5395,5394,5393,5392,5391,5390,5389,5388,5387,5386,5385,5384,5383,5382,5381,5380,5379,5378,5377,5376,5375,5374,5373,5372,5371,5370,5369,5368,5367,5366,5365,5364,5363,5362,5361,5360,5359,5358,5357,5356,5355,5354,5353,5352,5351,5350,5349,5348,5347,5346,5345,5344,5343,5342,5341,5340,5339,5338,5337,5336,5335,5334,5333,5332,5331,5330,5329,5328,5327,5326,5325,5324,5323,5322,5321,5320,5319,5318,5317,5316,5315,5314,5313,5312,5311,5310,5309,5308,5307,5306,5305,5304,5303,5302,5301,5300,5299,5298,5297,5296,5295,5294,5293,5292,5291,5290,5289,5288,5287,5286,5285,5284,5283,5282,5281,5280,5279,5278,5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5266,5265,5264,5263,5262,5261,5260,5259,5258,5257,5256,5255,5254,5253,5252,5251,5250,5249,5248,5247,5246,5245,5244,5243,5242,5241,5240,5239,5238,5237,5236,5235,5234,5233,5232,5231,5230,5229,5228,5227,5226,5225,5224,5223,5222,5221,5220,5219,5218,5217,5216,5215,5214,5213,5212,5211,5210,5209,5208,5207,5206,5205,5204,5203,5202,5201,5200,5199,5198,5197,5196,5195,5194,5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5182,5181,5180,5179,5178,5177,5176,5175,5174,5173,5172,5171,5170,5169,5168,5167,5166,5165,5164,5163,5162,5161,5160,5159,5158,5157,5156,5155,5154,5153,5152,5151,5150,5149,5148,5147,5146,5145,5144,5143,5142,5141,5140,5139,5138,5137,5136,5135,5134,5133,5132,5131,5130,5129,5128,5127,5126,5125,5124,5123,5122,5121,5120,5119,5118,5117,5116,5115,5114,5113,5112,5111,5110,5109,5108,5107,5106,5105,5104,5103,5102,5101,5100,5099,5098,5097,5096,5095,5094,5093,5092,5091,5090,5089,5088,5087,5086,5085,5084,5083,5082,5081,5080,5079,5078,5077,5076,5075,5074,5073,5072,5071,5070,5069,5068,5067,5066,5065,5064,5063,5062,5061,5060,5059,5058,5057,5056,5055,5054,5053,5052,5051,5050,5049,5048,5047,5046,5045,5044,5043,5042,5041,5040,5039,5038,5037,5036,5035,5034,5033,5032,5031,5030,5029,5028,5027,5026,5025,5024,5023,5022,5021,5020,5019,5018,5017,5016,5015,5014,5013,5012,5011,5010,5009,5008,5007,5006,5005,5004,5003,5002,5001,5000,4999,4998,4997,4996,4995,4994,4993,4992,4991,4990,4989,4988,4987,4986,4985,4984,4983,4982,4981,4980,4979,4978,4977,4976,4975,4974,4973,4972,4971,4970,4969,4968,4967,4966,4965,4964,4963,4962,4961,4960,4959,4958,4957,4956,4955,4954,4953,4952,4951,4950,4949,4948,4947,4946,4945,4944,4943,4942,4941,4940,4939,4938,4937,4936,4935,4934,4933,4932,4931,4930,4929,4928,4927,4926,4925,4924,4923,4922,4921,4920,4919,4918,4917,4916,4915,4914,4913,4912,4911,4910,4909,4908,4907,4906,4905,4904,4903,4902,4901,4900,4899,4898,4897,4896,4895,4894,4893,4892,4891,4890,4889,4888,4887,4886,4885,4884,4883,4882,4881,4880,4879,4878,4877,4876,4875,4874,4873,4872,4871,4870,4869,4868,4867,4866,4865,4864,4863,4862,4861,4860,4859,4858,4857,4856,4855,4854,4853,4852,4851,4850,4849,4848,4847,4846,4845,4844,4843,4842,4841,4840,4839,4838,4837,4836,4835,4834,4833,4832,4831,4830,4829,4828,4827,4826,4825,4824,4823,4822,4821,4820,4819,4818,4817,4816,4815,4814,4813,4812,4811,4810,4809,4808,4807,4806,4805,4804,4803,4802,4801,4800,4799,4798,4797,4796,4795,4794,4793,4792,4791,4790,4789,4788,4787,4786,4785,4784,4783,4782,4781,4780,4779,4778,4777,4776,4775,4774,4773,4772,4771,4770,4769,4768,4767,4766,4765,4764,4763,4762,4761,4760,4759,4758,4757,4756,4755,4754,4753,4752,4751,4750,4749,4748,4747,4746,4745,4744,4743,4742,4741,4740,4739,4738,4737,4736,4735,4734,4733,4732,4731,4730,4729,4728,4727,4726,4725,4724,4723,4722,4721,4720,4719,4718,4717,4716,4715,4714,4713,4712,4711,4710,4709,4708,4707,4706,4705,4704,4703,4702,4701,4700,4699,4698,4697,4696,4695,4694,4693,4692,4691,4690,4689,4688,4687,4686,4685,4684,4683,4682,4681,4680,4679,4678,4677,4676,4675,4674,4673,4672,4671,4670,4669,4668,4667,4666,4665,4664,4663,4662,4661,4660,4659,4658,4657,4656,4655,4654,4653,4652,4651,4650,4649,4648,4647,4646,4645,4644,4643,4642,4641,4640,4639,4638,4637,4636,4635,4634,4633,4632,4631,4630,4629,4628,4627,4626,4625,4624,4623,4622,4621,4620,4619,4618,4617,4616,4615,4614,4613,4612,4611,4610,4609,4608,4607,4606,4605,4604,4603,4602,4601,4600,4599,4598,4597,4596,4595,4594,4593,4592,4591,4590,4589,4588,4587,4586,4585,4584,4583,4582,4581,4580,4579,4578,4577,4576,4575,4574,4573,4572,4571,4570,4569,4568,4567,4566,4565,4564,4563,4562,4561,4560,4559,4558,4557,4556,4555,4554,4553,4552,4551,4550,4549,4548,4547,4546,4545,4544,4543,4542,4541,4540,4539,4538,4537,4536,4535,4534,4533,4532,4531,4530,4529,4528,4527,4526,4525,4524,4523,4522,4521,4520,4519,4518,4517,4516,4515,4514,4513,4512,4511,4510,4509,4508,4507,4506,4505,4504,4503,4502,4501,4500,4499,4498,4497,4496,4495,4494,4493,4492,4491,4490,4489,4488,4487,4486,4485,4484,4483,4482,4481,4480,4479,4478,4477,4476,4475,4474,4473,4472,4471,4470,4469,4468,4467,4466,4465,4464,4463,4462,4461,4460,4459,4458,4457,4456,4455,4454,4453,4452,4451,4450,4449,4448,4447,4446,4445,4444,4443,4442,4441,4440,4439,4438,4437,4436,4435,4434,4433,4432,4431,4430,4429,4428,4427,4426,4425,4424,4423,4422,4421,4420,4419,4418,4417,4416,4415,4414,4413,4412,4411,4410,4409,4408,4407,4406,4405,4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6448 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6448 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6448) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:12:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6448
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:12:
--------------------------------

                    -- 18 запитань до голови Черкаської ОДА Романа Боднара
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('запитань')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6448
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:12:
--------------------------------

                    -- 18 запитань до голови Черкаської ОДА Романа Боднара
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('голови')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6448
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------

                    -- 18 запитань до голови Черкаської ОДА Романа Боднара
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаської')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6448
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------

                    -- 18 запитань до голови Черкаської ОДА Романа Боднара
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Романа')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6448
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------

                    -- 18 запитань до голови Черкаської ОДА Романа Боднара
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Боднара')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6448
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1803 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1803 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1803) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1780 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1780 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1780) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1789 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1789 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1789) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6371 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3848 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3848 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3848) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:59:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595,6594,6593,6592,6591,6590,6589,6588,6587,6586,6585,6584,6583,6582,6581,6580,6579,6578,6577,6576,6575,6574,6573,6572,6571,6570,6569,6568,6567,6566,6565,6564,6563,6562,6561,6560,6559,6558,6557,6556,6555,6554,6553,6552,6551,6550,6549,6548,6547,6546,6545,6544,6543,6542,6541,6540,6539,6538,6537,6536,6535,6534,6533,6532,6531,6530,6529,6528,6527,6526,6525,6524,6523,6522,6521,6520,6519,6518,6517,6516,6515,6514,6513,6512,6511,6510,6509,6508,6507,6506,6505,6504,6503,6502,6501,6500,6499,6498,6497,6496,6495,6494,6493,6492,6491,6490,6489,6488,6487,6486,6485,6484,6483,6482,6481,6480,6479,6478,6477,6476,6475,6474,6473,6472,6471,6470,6469,6468,6467,6466,6465,6464,6463,6462,6461,6460,6459,6458,6457,6456,6455,6454,6453,6452,6451,6450,6449,6448,6447,6446,6445,6444,6443,6442,6441,6440,6439,6438,6437,6436,6435,6434,6433,6432,6431,6430,6429,6428,6427,6426,6425,6424,6423,6422,6421,6420,6419,6418,6417,6416,6415,6414,6413,6412,6411,6410,6409,6408,6407,6406,6405,6404,6403,6402,6401,6400,6399,6398,6397,6396,6395,6394,6393,6392,6391,6390,6389,6388,6387,6386,6385,6384,6383,6382,6381,6380,6379,6378,6377,6376,6375,6374,6373,6372,6371,6370,6369,6368,6367,6366,6365,6364,6363,6362,6361,6360,6359,6358,6357,6356,6355,6354,6353,6352,6351,6350,6349,6348,6347,6346,6345,6344,6343,6342,6341,6340,6339,6338,6337,6336,6335,6334,6333,6332,6331,6330,6329,6328,6327,6326,6325,6324,6323,6322,6321,6320,6319,6318,6317,6316,6315,6314,6313,6312,6311,6310,6309,6308,6307,6306,6305,6304,6303,6302,6301,6300,6299,6298,6297,6296,6295,6294,6293,6292,6291,6290,6289,6288,6287,6286,6285,6284,6283,6282,6281,6280,6279,6278,6277,6276,6275,6274,6273,6272,6271,6270,6269,6268,6267,6266,6265,6264,6263,6262,6261,6260,6259,6258,6257,6256,6255,6254,6253,6252,6251,6250,6249,6248,6247,6246,6245,6244,6243,6242,6241,6240,6239,6238,6237,6236,6235,6234,6233,6232,6231,6230,6229,6228,6227,6226,6225,6224,6223,6222,6221,6220,6219,6218,6217,6216,6215,6214,6213,6212,6211,6210,6209,6208,6207,6206,6205,6204,6203,6202,6201,6200,6199,6198,6197,6196,6195,6194,6193,6192,6191,6190,6189,6188,6187,6186,6185,6184,6183,6182,6181,6180,6179,6178,6177,6176,6175,6174,6173,6172,6171,6170,6169,6168,6167,6166,6165,6164,6163,6162,6161,6160,6159,6158,6157,6156,6155,6154,6153,6152,6151,6150,6149,6148,6147,6146,6145,6144,6143,6142,6141,6140,6139,6138,6137,6136,6135,6134,6133,6132,6131,6130,6129,6128,6127,6126,6125,6124,6123,6122,6121,6120,6119,6118,6117,6116,6115,6114,6113,6112,6111,6110,6109,6108,6107,6106,6105,6104,6103,6102,6101,6100,6099,6098,6097,6096,6095,6094,6093,6092,6091,6090,6089,6088,6087,6086,6085,6084,6083,6082,6081,6080,6079,6078,6077,6076,6075,6074,6073,6072,6071,6070,6069,6068,6067,6066,6065,6064,6063,6062,6061,6060,6059,6058,6057,6056,6055,6054,6053,6052,6051,6050,6049,6048,6047,6046,6045,6044,6043,6042,6041,6040,6039,6038,6037,6036,6035,6034,6033,6032,6031,6030,6029,6028,6027,6026,6025,6024,6023,6022,6021,6020,6019,6018,6017,6016,6015,6014,6013,6012,6011,6010,6009,6008,6007,6006,6005,6004,6003,6002,6001,6000,5999,5998,5997,5996,5995,5994,5993,5992,5991,5990,5989,5988,5987,5986,5985,5984,5983,5982,5981,5980,5979,5978,5977,5976,5975,5974,5973,5972,5971,5970,5969,5968,5967,5966,5965,5964,5963,5962,5961,5960,5959,5958,5957,5956,5955,5954,5953,5952,5951,5950,5949,5948,5947,5946,5945,5944,5943,5942,5941,5940,5939,5938,5937,5936,5935,5934,5933,5932,5931,5930,5929,5928,5927,5926,5925,5924,5923,5922,5921,5920,5919,5918,5917,5916,5915,5914,5913,5912,5911,5910,5909,5908,5907,5906,5905,5904,5903,5902,5901,5900,5899,5898,5897,5896,5895,5894,5893,5892,5891,5890,5889,5888,5887,5886,5885,5884,5883,5882,5881,5880,5879,5878,5877,5876,5875,5874,5873,5872,5871,5870,5869,5868,5867,5866,5865,5864,5863,5862,5861,5860,5859,5858,5857,5856,5855,5854,5853,5852,5851,5850,5849,5848,5847,5846,5845,5844,5843,5842,5841,5840,5839,5838,5837,5836,5835,5834,5833,5832,5831,5830,5829,5828,5827,5826,5825,5824,5823,5822,5821,5820,5819,5818,5817,5816,5815,5814,5813,5812,5811,5810,5809,5808,5807,5806,5805,5804,5803,5802,5801,5800,5799,5798,5797,5796,5795,5794,5793,5792,5791,5790,5789,5788,5787,5786,5785,5784,5783,5782,5781,5780,5779,5778,5777,5776,5775,5774,5773,5772,5771,5770,5769,5768,5767,5766,5765,5764,5763,5762,5761,5760,5759,5758,5757,5756,5755,5754,5753,5752,5751,5750,5749,5748,5747,5746,5745,5744,5743,5742,5741,5740,5739,5738,5737,5736,5735,5734,5733,5732,5731,5730,5729,5728,5727,5726,5725,5724,5723,5722,5721,5720,5719,5718,5717,5716,5715,5714,5713,5712,5711,5710,5709,5708,5707,5706,5705,5704,5703,5702,5701,5700,5699,5698,5697,5696,5695,5694,5693,5692,5691,5690,5689,5688,5687,5686,5685,5684,5683,5682,5681,5680,5679,5678,5677,5676,5675,5674,5673,5672,5671,5670,5669,5668,5667,5666,5665,5664,5663,5662,5661,5660,5659,5658,5657,5656,5655,5654,5653,5652,5651,5650,5649,5648,5647,5646,5645,5644,5643,5642,5641,5640,5639,5638,5637,5636,5635,5634,5633,5632,5631,5630,5629,5628,5627,5626,5625,5624,5623,5622,5621,5620,5619,5618,5617,5616,5615,5614,5613,5612,5611,5610,5609,5608,5607,5606,5605,5604,5603,5602,5601,5600,5599,5598,5597,5596,5595,5594,5593,5592,5591,5590,5589,5588,5587,5586,5585,5584,5583,5582,5581,5580,5579,5578,5577,5576,5575,5574,5573,5572,5571,5570,5569,5568,5567,5566,5565,5564,5563,5562,5561,5560,5559,5558,5557,5556,5555,5554,5553,5552,5551,5550,5549,5548,5547,5546,5545,5544,5543,5542,5541,5540,5539,5538,5537,5536,5535,5534,5533,5532,5531,5530,5529,5528,5527,5526,5525,5524,5523,5522,5521,5520,5519,5518,5517,5516,5515,5514,5513,5512,5511,5510,5509,5508,5507,5506,5505,5504,5503,5502,5501,5500,5499,5498,5497,5496,5495,5494,5493,5492,5491,5490,5489,5488,5487,5486,5485,5484,5483,5482,5481,5480,5479,5478,5477,5476,5475,5474,5473,5472,5471,5470,5469,5468,5467,5466,5465,5464,5463,5462,5461,5460,5459,5458,5457,5456,5455,5454,5453,5452,5451,5450,5449,5448,5447,5446,5445,5444,5443,5442,5441,5440,5439,5438,5437,5436,5435,5434,5433,5432,5431,5430,5429,5428,5427,5426,5425,5424,5423,5422,5421,5420,5419,5418,5417,5416,5415,5414,5413,5412,5411,5410,5409,5408,5407,5406,5405,5404,5403,5402,5401,5400,5399,5398,5397,5396,5395,5394,5393,5392,5391,5390,5389,5388,5387,5386,5385,5384,5383,5382,5381,5380,5379,5378,5377,5376,5375,5374,5373,5372,5371,5370,5369,5368,5367,5366,5365,5364,5363,5362,5361,5360,5359,5358,5357,5356,5355,5354,5353,5352,5351,5350,5349,5348,5347,5346,5345,5344,5343,5342,5341,5340,5339,5338,5337,5336,5335,5334,5333,5332,5331,5330,5329,5328,5327,5326,5325,5324,5323,5322,5321,5320,5319,5318,5317,5316,5315,5314,5313,5312,5311,5310,5309,5308,5307,5306,5305,5304,5303,5302,5301,5300,5299,5298,5297,5296,5295,5294,5293,5292,5291,5290,5289,5288,5287,5286,5285,5284,5283,5282,5281,5280,5279,5278,5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5266,5265,5264,5263,5262,5261,5260,5259,5258,5257,5256,5255,5254,5253,5252,5251,5250,5249,5248,5247,5246,5245,5244,5243,5242,5241,5240,5239,5238,5237,5236,5235,5234,5233,5232,5231,5230,5229,5228,5227,5226,5225,5224,5223,5222,5221,5220,5219,5218,5217,5216,5215,5214,5213,5212,5211,5210,5209,5208,5207,5206,5205,5204,5203,5202,5201,5200,5199,5198,5197,5196,5195,5194,5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5182,5181,5180,5179,5178,5177,5176,5175,5174,5173,5172,5171,5170,5169,5168,5167,5166,5165,5164,5163,5162,5161,5160,5159,5158,5157,5156,5155,5154,5153,5152,5151,5150,5149,5148,5147,5146,5145,5144,5143,5142,5141,5140,5139,5138,5137,5136,5135,5134,5133,5132,5131,5130,5129,5128,5127,5126,5125,5124,5123,5122,5121,5120,5119,5118,5117,5116,5115,5114,5113,5112,5111,5110,5109,5108,5107,5106,5105,5104,5103,5102,5101,5100,5099,5098,5097,5096,5095,5094,5093,5092,5091,5090,5089,5088,5087,5086,5085,5084,5083,5082,5081,5080,5079,5078,5077,5076,5075,5074,5073,5072,5071,5070,5069,5068,5067,5066,5065,5064,5063,5062,5061,5060,5059,5058,5057,5056,5055,5054,5053,5052,5051,5050,5049,5048,5047,5046,5045,5044,5043,5042,5041,5040,5039,5038,5037,5036,5035,5034,5033,5032,5031,5030,5029,5028,5027,5026,5025,5024,5023,5022,5021,5020,5019,5018,5017,5016,5015,5014,5013,5012,5011,5010,5009,5008,5007,5006,5005,5004,5003,5002,5001,5000,4999,4998,4997,4996,4995,4994,4993,4992,4991,4990,4989,4988,4987,4986,4985,4984,4983,4982,4981,4980,4979,4978,4977,4976,4975,4974,4973,4972,4971,4970,4969,4968,4967,4966,4965,4964,4963,4962,4961,4960,4959,4958,4957,4956,4955,4954,4953,4952,4951,4950,4949,4948,4947,4946,4945,4944,4943,4942,4941,4940,4939,4938,4937,4936,4935,4934,4933,4932,4931,4930,4929,4928,4927,4926,4925,4924,4923,4922,4921,4920,4919,4918,4917,4916,4915,4914,4913,4912,4911,4910,4909,4908,4907,4906,4905,4904,4903,4902,4901,4900,4899,4898,4897,4896,4895,4894,4893,4892,4891,4890,4889,4888,4887,4886,4885,4884,4883,4882,4881,4880,4879,4878,4877,4876,4875,4874,4873,4872,4871,4870,4869,4868,4867,4866,4865,4864,4863,4862,4861,4860,4859,4858,4857,4856,4855,4854,4853,4852,4851,4850,4849,4848,4847,4846,4845,4844,4843,4842,4841,4840,4839,4838,4837,4836,4835,4834,4833,4832,4831,4830,4829,4828,4827,4826,4825,4824,4823,4822,4821,4820,4819,4818,4817,4816,4815,4814,4813,4812,4811,4810,4809,4808,4807,4806,4805,4804,4803,4802,4801,4800,4799,4798,4797,4796,4795,4794,4793,4792,4791,4790,4789,4788,4787,4786,4785,4784,4783,4782,4781,4780,4779,4778,4777,4776,4775,4774,4773,4772,4771,4770,4769,4768,4767,4766,4765,4764,4763,4762,4761,4760,4759,4758,4757,4756,4755,4754,4753,4752,4751,4750,4749,4748,4747,4746,4745,4744,4743,4742,4741,4740,4739,4738,4737,4736,4735,4734,4733,4732,4731,4730,4729,4728,4727,4726,4725,4724,4723,4722,4721,4720,4719,4718,4717,4716,4715,4714,4713,4712,4711,4710,4709,4708,4707,4706,4705,4704,4703,4702,4701,4700,4699,4698,4697,4696,4695,4694,4693,4692,4691,4690,4689,4688,4687,4686,4685,4684,4683,4682,4681,4680,4679,4678,4677,4676,4675,4674,4673,4672,4671,4670,4669,4668,4667,4666,4665,4664,4663,4662,4661,4660,4659,4658,4657,4656,4655,4654,4653,4652,4651,4650,4649,4648,4647,4646,4645,4644,4643,4642,4641,4640,4639,4638,4637,4636,4635,4634,4633,4632,4631,4630,4629,4628,4627,4626,4625,4624,4623,4622,4621,4620,4619,4618,4617,4616,4615,4614,4613,4612,4611,4610,4609,4608,4607,4606,4605,4604,4603,4602,4601,4600,4599,4598,4597,4596,4595,4594,4593,4592,4591,4590,4589,4588,4587,4586,4585,4584,4583,4582,4581,4580,4579,4578,4577,4576,4575,4574,4573,4572,4571,4570,4569,4568,4567,4566,4565,4564,4563,4562,4561,4560,4559,4558,4557,4556,4555,4554,4553,4552,4551,4550,4549,4548,4547,4546,4545,4544,4543,4542,4541,4540,4539,4538,4537,4536,4535,4534,4533,4532,4531,4530,4529,4528,4527,4526,4525,4524,4523,4522,4521,4520,4519,4518,4517,4516,4515,4514,4513,4512,4511,4510,4509,4508,4507,4506,4505,4504,4503,4502,4501,4500,4499,4498,4497,4496,4495,4494,4493,4492,4491,4490,4489,4488,4487,4486,4485,4484,4483,4482,4481,4480,4479,4478,4477,4476,4475,4474,4473,4472,4471,4470,4469,4468,4467,4466,4465,4464,4463,4462,4461,4460,4459,4458,4457,4456,4455,4454,4453,4452,4451,4450,4449,4448,4447,4446,4445,4444,4443,4442,4441,4440,4439,4438,4437,4436,4435,4434,4433,4432,4431,4430,4429,4428,4427,4426,4425,4424,4423,4422,4421,4420,4419,4418,4417,4416,4415,4414,4413,4412,4411,4410,4409,4408,4407,4406,4405,4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6166 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6166 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6166) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6166
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------

                    -- Шукають кандидатів у присяжні Соснівського та Придніпровського судів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Шукають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6166
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------

                    -- Шукають кандидатів у присяжні Соснівського та Придніпровського судів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кандидатів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6166
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------

                    -- Шукають кандидатів у присяжні Соснівського та Придніпровського судів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('присяжні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6166
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------

                    -- Шукають кандидатів у присяжні Соснівського та Придніпровського судів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Соснівського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6166
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------

                    -- Шукають кандидатів у присяжні Соснівського та Придніпровського судів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Придніпровського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6166
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3046 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3046 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3046) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3672 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3672 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3672) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1707 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1707 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1707) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3959 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3959 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3959) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1069 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1069 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1069) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '57f8d243af9d3a50154ffc9f6ce0018d', '5.255.250.110'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:59:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:34:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595,6594,6593,6592,6591,6590,6589,6588,6587,6586,6585,6584,6583,6582,6581,6580,6579,6578,6577,6576,6575,6574,6573,6572,6571,6570,6569,6568,6567,6566,6565,6564,6563,6562,6561,6560,6559,6558,6557,6556,6555,6554,6553,6552,6551,6550,6549,6548,6547,6546,6545,6544,6543,6542,6541,6540,6539,6538,6537,6536,6535,6534,6533,6532,6531,6530,6529,6528,6527,6526,6525,6524,6523,6522,6521,6520,6519,6518,6517,6516,6515,6514,6513,6512,6511,6510,6509,6508,6507,6506,6505,6504,6503,6502,6501,6500,6499,6498,6497,6496,6495,6494,6493,6492,6491,6490,6489,6488,6487,6486,6485,6484,6483,6482,6481,6480,6479,6478,6477,6476,6475,6474,6473,6472,6471,6470,6469,6468,6467,6466,6465,6464,6463,6462,6461,6460,6459,6458,6457,6456,6455,6454,6453,6452,6451,6450,6449,6448,6447,6446,6445,6444,6443,6442,6441,6440,6439,6438,6437,6436,6435,6434,6433,6432,6431,6430,6429,6428,6427,6426,6425,6424,6423,6422,6421,6420,6419,6418,6417,6416,6415,6414,6413,6412,6411,6410,6409,6408,6407,6406,6405,6404,6403,6402,6401,6400,6399,6398,6397,6396,6395,6394,6393,6392,6391,6390,6389,6388,6387,6386,6385,6384,6383,6382,6381,6380,6379,6378,6377,6376,6375,6374,6373,6372,6371,6370,6369,6368,6367,6366,6365,6364,6363,6362,6361,6360,6359,6358,6357,6356,6355,6354,6353,6352,6351,6350,6349,6348,6347,6346,6345,6344,6343,6342,6341,6340,6339,6338,6337,6336,6335,6334,6333,6332,6331,6330,6329,6328,6327,6326,6325,6324,6323,6322,6321,6320,6319,6318,6317,6316,6315,6314,6313,6312,6311,6310,6309,6308,6307,6306,6305,6304,6303,6302,6301,6300,6299,6298,6297,6296,6295,6294,6293,6292,6291,6290,6289,6288,6287,6286,6285,6284,6283,6282,6281,6280,6279,6278,6277,6276,6275,6274,6273,6272,6271,6270,6269,6268,6267,6266,6265,6264,6263,6262,6261,6260,6259,6258,6257,6256,6255,6254,6253,6252,6251,6250,6249,6248,6247,6246,6245,6244,6243,6242,6241,6240,6239,6238,6237,6236,6235,6234,6233,6232,6231,6230,6229,6228,6227,6226,6225,6224,6223,6222,6221,6220,6219,6218,6217,6216,6215,6214,6213,6212,6211,6210,6209,6208,6207,6206,6205,6204,6203,6202,6201,6200,6199,6198,6197,6196,6195,6194,6193,6192,6191,6190,6189,6188,6187,6186,6185,6184,6183,6182,6181,6180,6179,6178,6177,6176,6175,6174,6173,6172,6171,6170,6169,6168,6167,6166,6165,6164,6163,6162,6161,6160,6159,6158,6157,6156,6155,6154,6153,6152,6151,6150,6149,6148,6147,6146,6145,6144,6143,6142,6141,6140,6139,6138,6137,6136,6135,6134,6133,6132,6131,6130,6129,6128,6127,6126,6125,6124,6123,6122,6121,6120,6119,6118,6117,6116,6115,6114,6113,6112,6111,6110,6109,6108,6107,6106,6105,6104,6103,6102,6101,6100,6099,6098,6097,6096,6095,6094,6093,6092,6091,6090,6089,6088,6087,6086,6085,6084,6083,6082,6081,6080,6079,6078,6077,6076,6075,6074,6073,6072,6071,6070,6069,6068,6067,6066,6065,6064,6063,6062,6061,6060,6059,6058,6057,6056,6055,6054,6053,6052,6051,6050,6049,6048,6047,6046,6045,6044,6043,6042,6041,6040,6039,6038,6037,6036,6035,6034,6033,6032,6031,6030,6029,6028,6027,6026,6025,6024,6023,6022,6021,6020,6019,6018,6017,6016,6015,6014,6013,6012,6011,6010,6009,6008,6007,6006,6005,6004,6003,6002,6001,6000,5999,5998,5997,5996,5995,5994,5993,5992,5991,5990,5989,5988,5987,5986,5985,5984,5983,5982,5981,5980,5979,5978,5977,5976,5975,5974,5973,5972,5971,5970,5969,5968,5967,5966,5965,5964,5963,5962,5961,5960,5959,5958,5957,5956,5955,5954,5953,5952,5951,5950,5949,5948,5947,5946,5945,5944,5943,5942,5941,5940,5939,5938,5937,5936,5935,5934,5933,5932,5931,5930,5929,5928,5927,5926,5925,5924,5923,5922,5921,5920,5919,5918,5917,5916,5915,5914,5913,5912,5911,5910,5909,5908,5907,5906,5905,5904,5903,5902,5901,5900,5899,5898,5897,5896,5895,5894,5893,5892,5891,5890,5889,5888,5887,5886,5885,5884,5883,5882,5881,5880,5879,5878,5877,5876,5875,5874,5873,5872,5871,5870,5869,5868,5867,5866,5865,5864,5863,5862,5861,5860,5859,5858,5857,5856,5855,5854,5853,5852,5851,5850,5849,5848,5847,5846,5845,5844,5843,5842,5841,5840,5839,5838,5837,5836,5835,5834,5833,5832,5831,5830,5829,5828,5827,5826,5825,5824,5823,5822,5821,5820,5819,5818,5817,5816,5815,5814,5813,5812,5811,5810,5809,5808,5807,5806,5805,5804,5803,5802,5801,5800,5799,5798,5797,5796,5795,5794,5793,5792,5791,5790,5789,5788,5787,5786,5785,5784,5783,5782,5781,5780,5779,5778,5777,5776,5775,5774,5773,5772,5771,5770,5769,5768,5767,5766,5765,5764,5763,5762,5761,5760,5759,5758,5757,5756,5755,5754,5753,5752,5751,5750,5749,5748,5747,5746,5745,5744,5743,5742,5741,5740,5739,5738,5737,5736,5735,5734,5733,5732,5731,5730,5729,5728,5727,5726,5725,5724,5723,5722,5721,5720,5719,5718,5717,5716,5715,5714,5713,5712,5711,5710,5709,5708,5707,5706,5705,5704,5703,5702,5701,5700,5699,5698,5697,5696,5695,5694,5693,5692,5691,5690,5689,5688,5687,5686,5685,5684,5683,5682,5681,5680,5679,5678,5677,5676,5675,5674,5673,5672,5671,5670,5669,5668,5667,5666,5665,5664,5663,5662,5661,5660,5659,5658,5657,5656,5655,5654,5653,5652,5651,5650,5649,5648,5647,5646,5645,5644,5643,5642,5641,5640,5639,5638,5637,5636,5635,5634,5633,5632,5631,5630,5629,5628,5627,5626,5625,5624,5623,5622,5621,5620,5619,5618,5617,5616,5615,5614,5613,5612,5611,5610,5609,5608,5607,5606,5605,5604,5603,5602,5601,5600,5599,5598,5597,5596,5595,5594,5593,5592,5591,5590,5589,5588,5587,5586,5585,5584,5583,5582,5581,5580,5579,5578,5577,5576,5575,5574,5573,5572,5571,5570,5569,5568,5567,5566,5565,5564,5563,5562,5561,5560,5559,5558,5557,5556,5555,5554,5553,5552,5551,5550,5549,5548,5547,5546,5545,5544,5543,5542,5541,5540,5539,5538,5537,5536,5535,5534,5533,5532,5531,5530,5529,5528,5527,5526,5525,5524,5523,5522,5521,5520,5519,5518,5517,5516,5515,5514,5513,5512,5511,5510,5509,5508,5507,5506,5505,5504,5503,5502,5501,5500,5499,5498,5497,5496,5495,5494,5493,5492,5491,5490,5489,5488,5487,5486,5485,5484,5483,5482,5481,5480,5479,5478,5477,5476,5475,5474,5473,5472,5471,5470,5469,5468,5467,5466,5465,5464,5463,5462,5461,5460,5459,5458,5457,5456,5455,5454,5453,5452,5451,5450,5449,5448,5447,5446,5445,5444,5443,5442,5441,5440,5439,5438,5437,5436,5435,5434,5433,5432,5431,5430,5429,5428,5427,5426,5425,5424,5423,5422,5421,5420,5419,5418,5417,5416,5415,5414,5413,5412,5411,5410,5409,5408,5407,5406,5405,5404,5403,5402,5401,5400,5399,5398,5397,5396,5395,5394,5393,5392,5391,5390,5389,5388,5387,5386,5385,5384,5383,5382,5381,5380,5379,5378,5377,5376,5375,5374,5373,5372,5371,5370,5369,5368,5367,5366,5365,5364,5363,5362,5361,5360,5359,5358,5357,5356,5355,5354,5353,5352,5351,5350,5349,5348,5347,5346,5345,5344,5343,5342,5341,5340,5339,5338,5337,5336,5335,5334,5333,5332,5331,5330,5329,5328,5327,5326,5325,5324,5323,5322,5321,5320,5319,5318,5317,5316,5315,5314,5313,5312,5311,5310,5309,5308,5307,5306,5305,5304,5303,5302,5301,5300,5299,5298,5297,5296,5295,5294,5293,5292,5291,5290,5289,5288,5287,5286,5285,5284,5283,5282,5281,5280,5279,5278,5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5266,5265,5264,5263,5262,5261,5260,5259,5258,5257,5256,5255,5254,5253,5252,5251,5250,5249,5248,5247,5246,5245,5244,5243,5242,5241,5240,5239,5238,5237,5236,5235,5234,5233,5232,5231,5230,5229,5228,5227,5226,5225,5224,5223,5222,5221,5220,5219,5218,5217,5216,5215,5214,5213,5212,5211,5210,5209,5208,5207,5206,5205,5204,5203,5202,5201,5200,5199,5198,5197,5196,5195,5194,5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5182,5181,5180,5179,5178,5177,5176,5175,5174,5173,5172,5171,5170,5169,5168,5167,5166,5165,5164,5163,5162,5161,5160,5159,5158,5157,5156,5155,5154,5153,5152,5151,5150,5149,5148,5147,5146,5145,5144,5143,5142,5141,5140,5139,5138,5137,5136,5135,5134,5133,5132,5131,5130,5129,5128,5127,5126,5125,5124,5123,5122,5121,5120,5119,5118,5117,5116,5115,5114,5113,5112,5111,5110,5109,5108,5107,5106,5105,5104,5103,5102,5101,5100,5099,5098,5097,5096,5095,5094,5093,5092,5091,5090,5089,5088,5087,5086,5085,5084,5083,5082,5081,5080,5079,5078,5077,5076,5075,5074,5073,5072,5071,5070,5069,5068,5067,5066,5065,5064,5063,5062,5061,5060,5059,5058,5057,5056,5055,5054,5053,5052,5051,5050,5049,5048,5047,5046,5045,5044,5043,5042,5041,5040,5039,5038,5037,5036,5035,5034,5033,5032,5031,5030,5029,5028,5027,5026,5025,5024,5023,5022,5021,5020,5019,5018,5017,5016,5015,5014,5013,5012,5011,5010,5009,5008,5007,5006,5005,5004,5003,5002,5001,5000,4999,4998,4997,4996,4995,4994,4993,4992,4991,4990,4989,4988,4987,4986,4985,4984,4983,4982,4981,4980,4979,4978,4977,4976,4975,4974,4973,4972,4971,4970,4969,4968,4967,4966,4965,4964,4963,4962,4961,4960,4959,4958,4957,4956,4955,4954,4953,4952,4951,4950,4949,4948,4947,4946,4945,4944,4943,4942,4941,4940,4939,4938,4937,4936,4935,4934,4933,4932,4931,4930,4929,4928,4927,4926,4925,4924,4923,4922,4921,4920,4919,4918,4917,4916,4915,4914,4913,4912,4911,4910,4909,4908,4907,4906,4905,4904,4903,4902,4901,4900,4899,4898,4897,4896,4895,4894,4893,4892,4891,4890,4889,4888,4887,4886,4885,4884,4883,4882,4881,4880,4879,4878,4877,4876,4875,4874,4873,4872,4871,4870,4869,4868,4867,4866,4865,4864,4863,4862,4861,4860,4859,4858,4857,4856,4855,4854,4853,4852,4851,4850,4849,4848,4847,4846,4845,4844,4843,4842,4841,4840,4839,4838,4837,4836,4835,4834,4833,4832,4831,4830,4829,4828,4827,4826,4825,4824,4823,4822,4821,4820,4819,4818,4817,4816,4815,4814,4813,4812,4811,4810,4809,4808,4807,4806,4805,4804,4803,4802,4801,4800,4799,4798,4797,4796,4795,4794,4793,4792,4791,4790,4789,4788,4787,4786,4785,4784,4783,4782,4781,4780,4779,4778,4777,4776,4775,4774,4773,4772,4771,4770,4769,4768,4767,4766,4765,4764,4763,4762,4761,4760,4759,4758,4757,4756,4755,4754,4753,4752,4751,4750,4749,4748,4747,4746,4745,4744,4743,4742,4741,4740,4739,4738,4737,4736,4735,4734,4733,4732,4731,4730,4729,4728,4727,4726,4725,4724,4723,4722,4721,4720,4719,4718,4717,4716,4715,4714,4713,4712,4711,4710,4709,4708,4707,4706,4705,4704,4703,4702,4701,4700,4699,4698,4697,4696,4695,4694,4693,4692,4691,4690,4689,4688,4687,4686,4685,4684,4683,4682,4681,4680,4679,4678,4677,4676,4675,4674,4673,4672,4671,4670,4669,4668,4667,4666,4665,4664,4663,4662,4661,4660,4659,4658,4657,4656,4655,4654,4653,4652,4651,4650,4649,4648,4647,4646,4645,4644,4643,4642,4641,4640,4639,4638,4637,4636,4635,4634,4633,4632,4631,4630,4629,4628,4627,4626,4625,4624,4623,4622,4621,4620,4619,4618,4617,4616,4615,4614,4613,4612,4611,4610,4609,4608,4607,4606,4605,4604,4603,4602,4601,4600,4599,4598,4597,4596,4595,4594,4593,4592,4591,4590,4589,4588,4587,4586,4585,4584,4583,4582,4581,4580,4579,4578,4577,4576,4575,4574,4573,4572,4571,4570,4569,4568,4567,4566,4565,4564,4563,4562,4561,4560,4559,4558,4557,4556,4555,4554,4553,4552,4551,4550,4549,4548,4547,4546,4545,4544,4543,4542,4541,4540,4539,4538,4537,4536,4535,4534,4533,4532,4531,4530,4529,4528,4527,4526,4525,4524,4523,4522,4521,4520,4519,4518,4517,4516,4515,4514,4513,4512,4511,4510,4509,4508,4507,4506,4505,4504,4503,4502,4501,4500,4499,4498,4497,4496,4495,4494,4493,4492,4491,4490,4489,4488,4487,4486,4485,4484,4483,4482,4481,4480,4479,4478,4477,4476,4475,4474,4473,4472,4471,4470,4469,4468,4467,4466,4465,4464,4463,4462,4461,4460,4459,4458,4457,4456,4455,4454,4453,4452,4451,4450,4449,4448,4447,4446,4445,4444,4443,4442,4441,4440,4439,4438,4437,4436,4435,4434,4433,4432,4431,4430,4429,4428,4427,4426,4425,4424,4423,4422,4421,4420,4419,4418,4417,4416,4415,4414,4413,4412,4411,4410,4409,4408,4407,4406,4405,4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6434 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:42:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6434 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6434) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:42:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6434
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:42:
--------------------------------

                    -- Черкасці долучилися до Міжнародного дня музейного селфі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6434
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:42:
--------------------------------

                    -- Черкасці долучилися до Міжнародного дня музейного селфі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('долучилися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6434
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------

                    -- Черкасці долучилися до Міжнародного дня музейного селфі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Міжнародного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6434
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------

                    -- Черкасці долучилися до Міжнародного дня музейного селфі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('музейного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6434
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1913 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1913 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1913) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1752 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1752 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1752) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4150 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4150 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4150) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2587 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2587 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2587) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3663 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3663 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3663) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 20:59:43:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 20:59:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 20:59:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595,6594,6593,6592,6591,6590,6589,6588,6587,6586,6585,6584,6583,6582,6581,6580,6579,6578,6577,6576,6575,6574,6573,6572,6571,6570,6569,6568,6567,6566,6565,6564,6563,6562,6561,6560,6559,6558,6557,6556,6555,6554,6553,6552,6551,6550,6549,6548,6547,6546,6545,6544,6543,6542,6541,6540,6539,6538,6537,6536,6535,6534,6533,6532,6531,6530,6529,6528,6527,6526,6525,6524,6523,6522,6521,6520,6519,6518,6517,6516,6515,6514,6513,6512,6511,6510,6509,6508,6507,6506,6505,6504,6503,6502,6501,6500,6499,6498,6497,6496,6495,6494,6493,6492,6491,6490,6489,6488,6487,6486,6485,6484,6483,6482,6481,6480,6479,6478,6477,6476,6475,6474,6473,6472,6471,6470,6469,6468,6467,6466,6465,6464,6463,6462,6461,6460,6459,6458,6457,6456,6455,6454,6453,6452,6451,6450,6449,6448,6447,6446,6445,6444,6443,6442,6441,6440,6439,6438,6437,6436,6435,6434,6433,6432,6431,6430,6429,6428,6427,6426,6425,6424,6423,6422,6421,6420,6419,6418,6417,6416,6415,6414,6413,6412,6411,6410,6409,6408,6407,6406,6405,6404,6403,6402,6401,6400,6399,6398,6397,6396,6395,6394,6393,6392,6391,6390,6389,6388,6387,6386,6385,6384,6383,6382,6381,6380,6379,6378,6377,6376,6375,6374,6373,6372,6371,6370,6369,6368,6367,6366,6365,6364,6363,6362,6361,6360,6359,6358,6357,6356,6355,6354,6353,6352,6351,6350,6349,6348,6347,6346,6345,6344,6343,6342,6341,6340,6339,6338,6337,6336,6335,6334,6333,6332,6331,6330,6329,6328,6327,6326,6325,6324,6323,6322,6321,6320,6319,6318,6317,6316,6315,6314,6313,6312,6311,6310,6309,6308,6307,6306,6305,6304,6303,6302,6301,6300,6299,6298,6297,6296,6295,6294,6293,6292,6291,6290,6289,6288,6287,6286,6285,6284,6283,6282,6281,6280,6279,6278,6277,6276,6275,6274,6273,6272,6271,6270,6269,6268,6267,6266,6265,6264,6263,6262,6261,6260,6259,6258,6257,6256,6255,6254,6253,6252,6251,6250,6249,6248,6247,6246,6245,6244,6243,6242,6241,6240,6239,6238,6237,6236,6235,6234,6233,6232,6231,6230,6229,6228,6227,6226,6225,6224,6223,6222,6221,6220,6219,6218,6217,6216,6215,6214,6213,6212,6211,6210,6209,6208,6207,6206,6205,6204,6203,6202,6201,6200,6199,6198,6197,6196,6195,6194,6193,6192,6191,6190,6189,6188,6187,6186,6185,6184,6183,6182,6181,6180,6179,6178,6177,6176,6175,6174,6173,6172,6171,6170,6169,6168,6167,6166,6165,6164,6163,6162,6161,6160,6159,6158,6157,6156,6155,6154,6153,6152,6151,6150,6149,6148,6147,6146,6145,6144,6143,6142,6141,6140,6139,6138,6137,6136,6135,6134,6133,6132,6131,6130,6129,6128,6127,6126,6125,6124,6123,6122,6121,6120,6119,6118,6117,6116,6115,6114,6113,6112,6111,6110,6109,6108,6107,6106,6105,6104,6103,6102,6101,6100,6099,6098,6097,6096,6095,6094,6093,6092,6091,6090,6089,6088,6087,6086,6085,6084,6083,6082,6081,6080,6079,6078,6077,6076,6075,6074,6073,6072,6071,6070,6069,6068,6067,6066,6065,6064,6063,6062,6061,6060,6059,6058,6057,6056,6055,6054,6053,6052,6051,6050,6049,6048,6047,6046,6045,6044,6043,6042,6041,6040,6039,6038,6037,6036,6035,6034,6033,6032,6031,6030,6029,6028,6027,6026,6025,6024,6023,6022,6021,6020,6019,6018,6017,6016,6015,6014,6013,6012,6011,6010,6009,6008,6007,6006,6005,6004,6003,6002,6001,6000,5999,5998,5997,5996,5995,5994,5993,5992,5991,5990,5989,5988,5987,5986,5985,5984,5983,5982,5981,5980,5979,5978,5977,5976,5975,5974,5973,5972,5971,5970,5969,5968,5967,5966,5965,5964,5963,5962,5961,5960,5959,5958,5957,5956,5955,5954,5953,5952,5951,5950,5949,5948,5947,5946,5945,5944,5943,5942,5941,5940,5939,5938,5937,5936,5935,5934,5933,5932,5931,5930,5929,5928,5927,5926,5925,5924,5923,5922,5921,5920,5919,5918,5917,5916,5915,5914,5913,5912,5911,5910,5909,5908,5907,5906,5905,5904,5903,5902,5901,5900,5899,5898,5897,5896,5895,5894,5893,5892,5891,5890,5889,5888,5887,5886,5885,5884,5883,5882,5881,5880,5879,5878,5877,5876,5875,5874,5873,5872,5871,5870,5869,5868,5867,5866,5865,5864,5863,5862,5861,5860,5859,5858,5857,5856,5855,5854,5853,5852,5851,5850,5849,5848,5847,5846,5845,5844,5843,5842,5841,5840,5839,5838,5837,5836,5835,5834,5833,5832,5831,5830,5829,5828,5827,5826,5825,5824,5823,5822,5821,5820,5819,5818,5817,5816,5815,5814,5813,5812,5811,5810,5809,5808,5807,5806,5805,5804,5803,5802,5801,5800,5799,5798,5797,5796,5795,5794,5793,5792,5791,5790,5789,5788,5787,5786,5785,5784,5783,5782,5781,5780,5779,5778,5777,5776,5775,5774,5773,5772,5771,5770,5769,5768,5767,5766,5765,5764,5763,5762,5761,5760,5759,5758,5757,5756,5755,5754,5753,5752,5751,5750,5749,5748,5747,5746,5745,5744,5743,5742,5741,5740,5739,5738,5737,5736,5735,5734,5733,5732,5731,5730,5729,5728,5727,5726,5725,5724,5723,5722,5721,5720,5719,5718,5717,5716,5715,5714,5713,5712,5711,5710,5709,5708,5707,5706,5705,5704,5703,5702,5701,5700,5699,5698,5697,5696,5695,5694,5693,5692,5691,5690,5689,5688,5687,5686,5685,5684,5683,5682,5681,5680,5679,5678,5677,5676,5675,5674,5673,5672,5671,5670,5669,5668,5667,5666,5665,5664,5663,5662,5661,5660,5659,5658,5657,5656,5655,5654,5653,5652,5651,5650,5649,5648,5647,5646,5645,5644,5643,5642,5641,5640,5639,5638,5637,5636,5635,5634,5633,5632,5631,5630,5629,5628,5627,5626,5625,5624,5623,5622,5621,5620,5619,5618,5617,5616,5615,5614,5613,5612,5611,5610,5609,5608,5607,5606,5605,5604,5603,5602,5601,5600,5599,5598,5597,5596,5595,5594,5593,5592,5591,5590,5589,5588,5587,5586,5585,5584,5583,5582,5581,5580,5579,5578,5577,5576,5575,5574,5573,5572,5571,5570,5569,5568,5567,5566,5565,5564,5563,5562,5561,5560,5559,5558,5557,5556,5555,5554,5553,5552,5551,5550,5549,5548,5547,5546,5545,5544,5543,5542,5541,5540,5539,5538,5537,5536,5535,5534,5533,5532,5531,5530,5529,5528,5527,5526,5525,5524,5523,5522,5521,5520,5519,5518,5517,5516,5515,5514,5513,5512,5511,5510,5509,5508,5507,5506,5505,5504,5503,5502,5501,5500,5499,5498,5497,5496,5495,5494,5493,5492,5491,5490,5489,5488,5487,5486,5485,5484,5483,5482,5481,5480,5479,5478,5477,5476,5475,5474,5473,5472,5471,5470,5469,5468,5467,5466,5465,5464,5463,5462,5461,5460,5459,5458,5457,5456,5455,5454,5453,5452,5451,5450,5449,5448,5447,5446,5445,5444,5443,5442,5441,5440,5439,5438,5437,5436,5435,5434,5433,5432,5431,5430,5429,5428,5427,5426,5425,5424,5423,5422,5421,5420,5419,5418,5417,5416,5415,5414,5413,5412,5411,5410,5409,5408,5407,5406,5405,5404,5403,5402,5401,5400,5399,5398,5397,5396,5395,5394,5393,5392,5391,5390,5389,5388,5387,5386,5385,5384,5383,5382,5381,5380,5379,5378,5377,5376,5375,5374,5373,5372,5371,5370,5369,5368,5367,5366,5365,5364,5363,5362,5361,5360,5359,5358,5357,5356,5355,5354,5353,5352,5351,5350,5349,5348,5347,5346,5345,5344,5343,5342,5341,5340,5339,5338,5337,5336,5335,5334,5333,5332,5331,5330,5329,5328,5327,5326,5325,5324,5323,5322,5321,5320,5319,5318,5317,5316,5315,5314,5313,5312,5311,5310,5309,5308,5307,5306,5305,5304,5303,5302,5301,5300,5299,5298,5297,5296,5295,5294,5293,5292,5291,5290,5289,5288,5287,5286,5285,5284,5283,5282,5281,5280,5279,5278,5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5266,5265,5264,5263,5262,5261,5260,5259,5258,5257,5256,5255,5254,5253,5252,5251,5250,5249,5248,5247,5246,5245,5244,5243,5242,5241,5240,5239,5238,5237,5236,5235,5234,5233,5232,5231,5230,5229,5228,5227,5226,5225,5224,5223,5222,5221,5220,5219,5218,5217,5216,5215,5214,5213,5212,5211,5210,5209,5208,5207,5206,5205,5204,5203,5202,5201,5200,5199,5198,5197,5196,5195,5194,5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5182,5181,5180,5179,5178,5177,5176,5175,5174,5173,5172,5171,5170,5169,5168,5167,5166,5165,5164,5163,5162,5161,5160,5159,5158,5157,5156,5155,5154,5153,5152,5151,5150,5149,5148,5147,5146,5145,5144,5143,5142,5141,5140,5139,5138,5137,5136,5135,5134,5133,5132,5131,5130,5129,5128,5127,5126,5125,5124,5123,5122,5121,5120,5119,5118,5117,5116,5115,5114,5113,5112,5111,5110,5109,5108,5107,5106,5105,5104,5103,5102,5101,5100,5099,5098,5097,5096,5095,5094,5093,5092,5091,5090,5089,5088,5087,5086,5085,5084,5083,5082,5081,5080,5079,5078,5077,5076,5075,5074,5073,5072,5071,5070,5069,5068,5067,5066,5065,5064,5063,5062,5061,5060,5059,5058,5057,5056,5055,5054,5053,5052,5051,5050,5049,5048,5047,5046,5045,5044,5043,5042,5041,5040,5039,5038,5037,5036,5035,5034,5033,5032,5031,5030,5029,5028,5027,5026,5025,5024,5023,5022,5021,5020,5019,5018,5017,5016,5015,5014,5013,5012,5011,5010,5009,5008,5007,5006,5005,5004,5003,5002,5001,5000,4999,4998,4997,4996,4995,4994,4993,4992,4991,4990,4989,4988,4987,4986,4985,4984,4983,4982,4981,4980,4979,4978,4977,4976,4975,4974,4973,4972,4971,4970,4969,4968,4967,4966,4965,4964,4963,4962,4961,4960,4959,4958,4957,4956,4955,4954,4953,4952,4951,4950,4949,4948,4947,4946,4945,4944,4943,4942,4941,4940,4939,4938,4937,4936,4935,4934,4933,4932,4931,4930,4929,4928,4927,4926,4925,4924,4923,4922,4921,4920,4919,4918,4917,4916,4915,4914,4913,4912,4911,4910,4909,4908,4907,4906,4905,4904,4903,4902,4901,4900,4899,4898,4897,4896,4895,4894,4893,4892,4891,4890,4889,4888,4887,4886,4885,4884,4883,4882,4881,4880,4879,4878,4877,4876,4875,4874,4873,4872,4871,4870,4869,4868,4867,4866,4865,4864,4863,4862,4861,4860,4859,4858,4857,4856,4855,4854,4853,4852,4851,4850,4849,4848,4847,4846,4845,4844,4843,4842,4841,4840,4839,4838,4837,4836,4835,4834,4833,4832,4831,4830,4829,4828,4827,4826,4825,4824,4823,4822,4821,4820,4819,4818,4817,4816,4815,4814,4813,4812,4811,4810,4809,4808,4807,4806,4805,4804,4803,4802,4801,4800,4799,4798,4797,4796,4795,4794,4793,4792,4791,4790,4789,4788,4787,4786,4785,4784,4783,4782,4781,4780,4779,4778,4777,4776,4775,4774,4773,4772,4771,4770,4769,4768,4767,4766,4765,4764,4763,4762,4761,4760,4759,4758,4757,4756,4755,4754,4753,4752,4751,4750,4749,4748,4747,4746,4745,4744,4743,4742,4741,4740,4739,4738,4737,4736,4735,4734,4733,4732,4731,4730,4729,4728,4727,4726,4725,4724,4723,4722,4721,4720,4719,4718,4717,4716,4715,4714,4713,4712,4711,4710,4709,4708,4707,4706,4705,4704,4703,4702,4701,4700,4699,4698,4697,4696,4695,4694,4693,4692,4691,4690,4689,4688,4687,4686,4685,4684,4683,4682,4681,4680,4679,4678,4677,4676,4675,4674,4673,4672,4671,4670,4669,4668,4667,4666,4665,4664,4663,4662,4661,4660,4659,4658,4657,4656,4655,4654,4653,4652,4651,4650,4649,4648,4647,4646,4645,4644,4643,4642,4641,4640,4639,4638,4637,4636,4635,4634,4633,4632,4631,4630,4629,4628,4627,4626,4625,4624,4623,4622,4621,4620,4619,4618,4617,4616,4615,4614,4613,4612,4611,4610,4609,4608,4607,4606,4605,4604,4603,4602,4601,4600,4599,4598,4597,4596,4595,4594,4593,4592,4591,4590,4589,4588,4587,4586,4585,4584,4583,4582,4581,4580,4579,4578,4577,4576,4575,4574,4573,4572,4571,4570,4569,4568,4567,4566,4565,4564,4563,4562,4561,4560,4559,4558,4557,4556,4555,4554,4553,4552,4551,4550,4549,4548,4547,4546,4545,4544,4543,4542,4541,4540,4539,4538,4537,4536,4535,4534,4533,4532,4531,4530,4529,4528,4527,4526,4525,4524,4523,4522,4521,4520,4519,4518,4517,4516,4515,4514,4513,4512,4511,4510,4509,4508,4507,4506,4505,4504,4503,4502,4501,4500,4499,4498,4497,4496,4495,4494,4493,4492,4491,4490,4489,4488,4487,4486,4485,4484,4483,4482,4481,4480,4479,4478,4477,4476,4475,4474,4473,4472,4471,4470,4469,4468,4467,4466,4465,4464,4463,4462,4461,4460,4459,4458,4457,4456,4455,4454,4453,4452,4451,4450,4449,4448,4447,4446,4445,4444,4443,4442,4441,4440,4439,4438,4437,4436,4435,4434,4433,4432,4431,4430,4429,4428,4427,4426,4425,4424,4423,4422,4421,4420,4419,4418,4417,4416,4415,4414,4413,4412,4411,4410,4409,4408,4407,4406,4405,4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 60 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6394,6393,6392,6385,6381,6380,6379,6375,6374,6367) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '004d6fd79c257c2dada5470d6fe4154c', '5.255.250.114'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:00:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595,6594,6593,6592,6591,6590,6589,6588,6587,6586,6585,6584,6583,6582,6581,6580,6579,6578,6577,6576,6575,6574,6573,6572,6571,6570,6569,6568,6567,6566,6565,6564,6563,6562,6561,6560,6559,6558,6557,6556,6555,6554,6553,6552,6551,6550,6549,6548,6547,6546,6545,6544,6543,6542,6541,6540,6539,6538,6537,6536,6535,6534,6533,6532,6531,6530,6529,6528,6527,6526,6525,6524,6523,6522,6521,6520,6519,6518,6517,6516,6515,6514,6513,6512,6511,6510,6509,6508,6507,6506,6505,6504,6503,6502,6501,6500,6499,6498,6497,6496,6495,6494,6493,6492,6491,6490,6489,6488,6487,6486,6485,6484,6483,6482,6481,6480,6479,6478,6477,6476,6475,6474,6473,6472,6471,6470,6469,6468,6467,6466,6465,6464,6463,6462,6461,6460,6459,6458,6457,6456,6455,6454,6453,6452,6451,6450,6449,6448,6447,6446,6445,6444,6443,6442,6441,6440,6439,6438,6437,6436,6435,6434,6433,6432,6431,6430,6429,6428,6427,6426,6425,6424,6423,6422,6421,6420,6419,6418,6417,6416,6415,6414,6413,6412,6411,6410,6409,6408,6407,6406,6405,6404,6403,6402,6401,6400,6399,6398,6397,6396,6395,6394,6393,6392,6391,6390,6389,6388,6387,6386,6385,6384,6383,6382,6381,6380,6379,6378,6377,6376,6375,6374,6373,6372,6371,6370,6369,6368,6367,6366,6365,6364,6363,6362,6361,6360,6359,6358,6357,6356,6355,6354,6353,6352,6351,6350,6349,6348,6347,6346,6345,6344,6343,6342,6341,6340,6339,6338,6337,6336,6335,6334,6333,6332,6331,6330,6329,6328,6327,6326,6325,6324,6323,6322,6321,6320,6319,6318,6317,6316,6315,6314,6313,6312,6311,6310,6309,6308,6307,6306,6305,6304,6303,6302,6301,6300,6299,6298,6297,6296,6295,6294,6293,6292,6291,6290,6289,6288,6287,6286,6285,6284,6283,6282,6281,6280,6279,6278,6277,6276,6275,6274,6273,6272,6271,6270,6269,6268,6267,6266,6265,6264,6263,6262,6261,6260,6259,6258,6257,6256,6255,6254,6253,6252,6251,6250,6249,6248,6247,6246,6245,6244,6243,6242,6241,6240,6239,6238,6237,6236,6235,6234,6233,6232,6231,6230,6229,6228,6227,6226,6225,6224,6223,6222,6221,6220,6219,6218,6217,6216,6215,6214,6213,6212,6211,6210,6209,6208,6207,6206,6205,6204,6203,6202,6201,6200,6199,6198,6197,6196,6195,6194,6193,6192,6191,6190,6189,6188,6187,6186,6185,6184,6183,6182,6181,6180,6179,6178,6177,6176,6175,6174,6173,6172,6171,6170,6169,6168,6167,6166,6165,6164,6163,6162,6161,6160,6159,6158,6157,6156,6155,6154,6153,6152,6151,6150,6149,6148,6147,6146,6145,6144,6143,6142,6141,6140,6139,6138,6137,6136,6135,6134,6133,6132,6131,6130,6129,6128,6127,6126,6125,6124,6123,6122,6121,6120,6119,6118,6117,6116,6115,6114,6113,6112,6111,6110,6109,6108,6107,6106,6105,6104,6103,6102,6101,6100,6099,6098,6097,6096,6095,6094,6093,6092,6091,6090,6089,6088,6087,6086,6085,6084,6083,6082,6081,6080,6079,6078,6077,6076,6075,6074,6073,6072,6071,6070,6069,6068,6067,6066,6065,6064,6063,6062,6061,6060,6059,6058,6057,6056,6055,6054,6053,6052,6051,6050,6049,6048,6047,6046,6045,6044,6043,6042,6041,6040,6039,6038,6037,6036,6035,6034,6033,6032,6031,6030,6029,6028,6027,6026,6025,6024,6023,6022,6021,6020,6019,6018,6017,6016,6015,6014,6013,6012,6011,6010,6009,6008,6007,6006,6005,6004,6003,6002,6001,6000,5999,5998,5997,5996,5995,5994,5993,5992,5991,5990,5989,5988,5987,5986,5985,5984,5983,5982,5981,5980,5979,5978,5977,5976,5975,5974,5973,5972,5971,5970,5969,5968,5967,5966,5965,5964,5963,5962,5961,5960,5959,5958,5957,5956,5955,5954,5953,5952,5951,5950,5949,5948,5947,5946,5945,5944,5943,5942,5941,5940,5939,5938,5937,5936,5935,5934,5933,5932,5931,5930,5929,5928,5927,5926,5925,5924,5923,5922,5921,5920,5919,5918,5917,5916,5915,5914,5913,5912,5911,5910,5909,5908,5907,5906,5905,5904,5903,5902,5901,5900,5899,5898,5897,5896,5895,5894,5893,5892,5891,5890,5889,5888,5887,5886,5885,5884,5883,5882,5881,5880,5879,5878,5877,5876,5875,5874,5873,5872,5871,5870,5869,5868,5867,5866,5865,5864,5863,5862,5861,5860,5859,5858,5857,5856,5855,5854,5853,5852,5851,5850,5849,5848,5847,5846,5845,5844,5843,5842,5841,5840,5839,5838,5837,5836,5835,5834,5833,5832,5831,5830,5829,5828,5827,5826,5825,5824,5823,5822,5821,5820,5819,5818,5817,5816,5815,5814,5813,5812,5811,5810,5809,5808,5807,5806,5805,5804,5803,5802,5801,5800,5799,5798,5797,5796,5795,5794,5793,5792,5791,5790,5789,5788,5787,5786,5785,5784,5783,5782,5781,5780,5779,5778,5777,5776,5775,5774,5773,5772,5771,5770,5769,5768,5767,5766,5765,5764,5763,5762,5761,5760,5759,5758,5757,5756,5755,5754,5753,5752,5751,5750,5749,5748,5747,5746,5745,5744,5743,5742,5741,5740,5739,5738,5737,5736,5735,5734,5733,5732,5731,5730,5729,5728,5727,5726,5725,5724,5723,5722,5721,5720,5719,5718,5717,5716,5715,5714,5713,5712,5711,5710,5709,5708,5707,5706,5705,5704,5703,5702,5701,5700,5699,5698,5697,5696,5695,5694,5693,5692,5691,5690,5689,5688,5687,5686,5685,5684,5683,5682,5681,5680,5679,5678,5677,5676,5675,5674,5673,5672,5671,5670,5669,5668,5667,5666,5665,5664,5663,5662,5661,5660,5659,5658,5657,5656,5655,5654,5653,5652,5651,5650,5649,5648,5647,5646,5645,5644,5643,5642,5641,5640,5639,5638,5637,5636,5635,5634,5633,5632,5631,5630,5629,5628,5627,5626,5625,5624,5623,5622,5621,5620,5619,5618,5617,5616,5615,5614,5613,5612,5611,5610,5609,5608,5607,5606,5605,5604,5603,5602,5601,5600,5599,5598,5597,5596,5595,5594,5593,5592,5591,5590,5589,5588,5587,5586,5585,5584,5583,5582,5581,5580,5579,5578,5577,5576,5575,5574,5573,5572,5571,5570,5569,5568,5567,5566,5565,5564,5563,5562,5561,5560,5559,5558,5557,5556,5555,5554,5553,5552,5551,5550,5549,5548,5547,5546,5545,5544,5543,5542,5541,5540,5539,5538,5537,5536,5535,5534,5533,5532,5531,5530,5529,5528,5527,5526,5525,5524,5523,5522,5521,5520,5519,5518,5517,5516,5515,5514,5513,5512,5511,5510,5509,5508,5507,5506,5505,5504,5503,5502,5501,5500,5499,5498,5497,5496,5495,5494,5493,5492,5491,5490,5489,5488,5487,5486,5485,5484,5483,5482,5481,5480,5479,5478,5477,5476,5475,5474,5473,5472,5471,5470,5469,5468,5467,5466,5465,5464,5463,5462,5461,5460,5459,5458,5457,5456,5455,5454,5453,5452,5451,5450,5449,5448,5447,5446,5445,5444,5443,5442,5441,5440,5439,5438,5437,5436,5435,5434,5433,5432,5431,5430,5429,5428,5427,5426,5425,5424,5423,5422,5421,5420,5419,5418,5417,5416,5415,5414,5413,5412,5411,5410,5409,5408,5407,5406,5405,5404,5403,5402,5401,5400,5399,5398,5397,5396,5395,5394,5393,5392,5391,5390,5389,5388,5387,5386,5385,5384,5383,5382,5381,5380,5379,5378,5377,5376,5375,5374,5373,5372,5371,5370,5369,5368,5367,5366,5365,5364,5363,5362,5361,5360,5359,5358,5357,5356,5355,5354,5353,5352,5351,5350,5349,5348,5347,5346,5345,5344,5343,5342,5341,5340,5339,5338,5337,5336,5335,5334,5333,5332,5331,5330,5329,5328,5327,5326,5325,5324,5323,5322,5321,5320,5319,5318,5317,5316,5315,5314,5313,5312,5311,5310,5309,5308,5307,5306,5305,5304,5303,5302,5301,5300,5299,5298,5297,5296,5295,5294,5293,5292,5291,5290,5289,5288,5287,5286,5285,5284,5283,5282,5281,5280,5279,5278,5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5266,5265,5264,5263,5262,5261,5260,5259,5258,5257,5256,5255,5254,5253,5252,5251,5250,5249,5248,5247,5246,5245,5244,5243,5242,5241,5240,5239,5238,5237,5236,5235,5234,5233,5232,5231,5230,5229,5228,5227,5226,5225,5224,5223,5222,5221,5220,5219,5218,5217,5216,5215,5214,5213,5212,5211,5210,5209,5208,5207,5206,5205,5204,5203,5202,5201,5200,5199,5198,5197,5196,5195,5194,5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5182,5181,5180,5179,5178,5177,5176,5175,5174,5173,5172,5171,5170,5169,5168,5167,5166,5165,5164,5163,5162,5161,5160,5159,5158,5157,5156,5155,5154,5153,5152,5151,5150,5149,5148,5147,5146,5145,5144,5143,5142,5141,5140,5139,5138,5137,5136,5135,5134,5133,5132,5131,5130,5129,5128,5127,5126,5125,5124,5123,5122,5121,5120,5119,5118,5117,5116,5115,5114,5113,5112,5111,5110,5109,5108,5107,5106,5105,5104,5103,5102,5101,5100,5099,5098,5097,5096,5095,5094,5093,5092,5091,5090,5089,5088,5087,5086,5085,5084,5083,5082,5081,5080,5079,5078,5077,5076,5075,5074,5073,5072,5071,5070,5069,5068,5067,5066,5065,5064,5063,5062,5061,5060,5059,5058,5057,5056,5055,5054,5053,5052,5051,5050,5049,5048,5047,5046,5045,5044,5043,5042,5041,5040,5039,5038,5037,5036,5035,5034,5033,5032,5031,5030,5029,5028,5027,5026,5025,5024,5023,5022,5021,5020,5019,5018,5017,5016,5015,5014,5013,5012,5011,5010,5009,5008,5007,5006,5005,5004,5003,5002,5001,5000,4999,4998,4997,4996,4995,4994,4993,4992,4991,4990,4989,4988,4987,4986,4985,4984,4983,4982,4981,4980,4979,4978,4977,4976,4975,4974,4973,4972,4971,4970,4969,4968,4967,4966,4965,4964,4963,4962,4961,4960,4959,4958,4957,4956,4955,4954,4953,4952,4951,4950,4949,4948,4947,4946,4945,4944,4943,4942,4941,4940,4939,4938,4937,4936,4935,4934,4933,4932,4931,4930,4929,4928,4927,4926,4925,4924,4923,4922,4921,4920,4919,4918,4917,4916,4915,4914,4913,4912,4911,4910,4909,4908,4907,4906,4905,4904,4903,4902,4901,4900,4899,4898,4897,4896,4895,4894,4893,4892,4891,4890,4889,4888,4887,4886,4885,4884,4883,4882,4881,4880,4879,4878,4877,4876,4875,4874,4873,4872,4871,4870,4869,4868,4867,4866,4865,4864,4863,4862,4861,4860,4859,4858,4857,4856,4855,4854,4853,4852,4851,4850,4849,4848,4847,4846,4845,4844,4843,4842,4841,4840,4839,4838,4837,4836,4835,4834,4833,4832,4831,4830,4829,4828,4827,4826,4825,4824,4823,4822,4821,4820,4819,4818,4817,4816,4815,4814,4813,4812,4811,4810,4809,4808,4807,4806,4805,4804,4803,4802,4801,4800,4799,4798,4797,4796,4795,4794,4793,4792,4791,4790,4789,4788,4787,4786,4785,4784,4783,4782,4781,4780,4779,4778,4777,4776,4775,4774,4773,4772,4771,4770,4769,4768,4767,4766,4765,4764,4763,4762,4761,4760,4759,4758,4757,4756,4755,4754,4753,4752,4751,4750,4749,4748,4747,4746,4745,4744,4743,4742,4741,4740,4739,4738,4737,4736,4735,4734,4733,4732,4731,4730,4729,4728,4727,4726,4725,4724,4723,4722,4721,4720,4719,4718,4717,4716,4715,4714,4713,4712,4711,4710,4709,4708,4707,4706,4705,4704,4703,4702,4701,4700,4699,4698,4697,4696,4695,4694,4693,4692,4691,4690,4689,4688,4687,4686,4685,4684,4683,4682,4681,4680,4679,4678,4677,4676,4675,4674,4673,4672,4671,4670,4669,4668,4667,4666,4665,4664,4663,4662,4661,4660,4659,4658,4657,4656,4655,4654,4653,4652,4651,4650,4649,4648,4647,4646,4645,4644,4643,4642,4641,4640,4639,4638,4637,4636,4635,4634,4633,4632,4631,4630,4629,4628,4627,4626,4625,4624,4623,4622,4621,4620,4619,4618,4617,4616,4615,4614,4613,4612,4611,4610,4609,4608,4607,4606,4605,4604,4603,4602,4601,4600,4599,4598,4597,4596,4595,4594,4593,4592,4591,4590,4589,4588,4587,4586,4585,4584,4583,4582,4581,4580,4579,4578,4577,4576,4575,4574,4573,4572,4571,4570,4569,4568,4567,4566,4565,4564,4563,4562,4561,4560,4559,4558,4557,4556,4555,4554,4553,4552,4551,4550,4549,4548,4547,4546,4545,4544,4543,4542,4541,4540,4539,4538,4537,4536,4535,4534,4533,4532,4531,4530,4529,4528,4527,4526,4525,4524,4523,4522,4521,4520,4519,4518,4517,4516,4515,4514,4513,4512,4511,4510,4509,4508,4507,4506,4505,4504,4503,4502,4501,4500,4499,4498,4497,4496,4495,4494,4493,4492,4491,4490,4489,4488,4487,4486,4485,4484,4483,4482,4481,4480,4479,4478,4477,4476,4475,4474,4473,4472,4471,4470,4469,4468,4467,4466,4465,4464,4463,4462,4461,4460,4459,4458,4457,4456,4455,4454,4453,4452,4451,4450,4449,4448,4447,4446,4445,4444,4443,4442,4441,4440,4439,4438,4437,4436,4435,4434,4433,4432,4431,4430,4429,4428,4427,4426,4425,4424,4423,4422,4421,4420,4419,4418,4417,4416,4415,4414,4413,4412,4411,4410,4409,4408,4407,4406,4405,4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5665 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5665 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5665) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5665
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------

                    -- На новорічні свята з АЗС області вилучили майже 67 тонн “лівого” пального
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('новорічні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5665
                        AND posts.tag_id && ARRAY['5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------

                    -- На новорічні свята з АЗС області вилучили майже 67 тонн “лівого” пального
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5665
                        AND posts.tag_id && ARRAY['5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------

                    -- На новорічні свята з АЗС області вилучили майже 67 тонн “лівого” пального
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вилучили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5665
                        AND posts.tag_id && ARRAY['5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------

                    -- На новорічні свята з АЗС області вилучили майже 67 тонн “лівого” пального
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“лівого”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5665
                        AND posts.tag_id && ARRAY['5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------

                    -- На новорічні свята з АЗС області вилучили майже 67 тонн “лівого” пального
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пального')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5665
                        AND posts.tag_id && ARRAY['5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4844 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4844 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4844) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4848 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4848 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4848) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3828 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3828 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3828) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 418 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 418 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (418) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 189 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 189 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (189) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '030142e38346ca0876d5623813632141', '77.88.47.83'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:00:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:20:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10000;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:00:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595,6594,6593,6592,6591,6590,6589,6588,6587,6586,6585,6584,6583,6582,6581,6580,6579,6578,6577,6576,6575,6574,6573,6572,6571,6570,6569,6568,6567,6566,6565,6564,6563,6562,6561,6560,6559,6558,6557,6556,6555,6554,6553,6552,6551,6550,6549,6548,6547,6546,6545,6544,6543,6542,6541,6540,6539,6538,6537,6536,6535,6534,6533,6532,6531,6530,6529,6528,6527,6526,6525,6524,6523,6522,6521,6520,6519,6518,6517,6516,6515,6514,6513,6512,6511,6510,6509,6508,6507,6506,6505,6504,6503,6502,6501,6500,6499,6498,6497,6496,6495,6494,6493,6492,6491,6490,6489,6488,6487,6486,6485,6484,6483,6482,6481,6480,6479,6478,6477,6476,6475,6474,6473,6472,6471,6470,6469,6468,6467,6466,6465,6464,6463,6462,6461,6460,6459,6458,6457,6456,6455,6454,6453,6452,6451,6450,6449,6448,6447,6446,6445,6444,6443,6442,6441,6440,6439,6438,6437,6436,6435,6434,6433,6432,6431,6430,6429,6428,6427,6426,6425,6424,6423,6422,6421,6420,6419,6418,6417,6416,6415,6414,6413,6412,6411,6410,6409,6408,6407,6406,6405,6404,6403,6402,6401,6400,6399,6398,6397,6396,6395,6394,6393,6392,6391,6390,6389,6388,6387,6386,6385,6384,6383,6382,6381,6380,6379,6378,6377,6376,6375,6374,6373,6372,6371,6370,6369,6368,6367,6366,6365,6364,6363,6362,6361,6360,6359,6358,6357,6356,6355,6354,6353,6352,6351,6350,6349,6348,6347,6346,6345,6344,6343,6342,6341,6340,6339,6338,6337,6336,6335,6334,6333,6332,6331,6330,6329,6328,6327,6326,6325,6324,6323,6322,6321,6320,6319,6318,6317,6316,6315,6314,6313,6312,6311,6310,6309,6308,6307,6306,6305,6304,6303,6302,6301,6300,6299,6298,6297,6296,6295,6294,6293,6292,6291,6290,6289,6288,6287,6286,6285,6284,6283,6282,6281,6280,6279,6278,6277,6276,6275,6274,6273,6272,6271,6270,6269,6268,6267,6266,6265,6264,6263,6262,6261,6260,6259,6258,6257,6256,6255,6254,6253,6252,6251,6250,6249,6248,6247,6246,6245,6244,6243,6242,6241,6240,6239,6238,6237,6236,6235,6234,6233,6232,6231,6230,6229,6228,6227,6226,6225,6224,6223,6222,6221,6220,6219,6218,6217,6216,6215,6214,6213,6212,6211,6210,6209,6208,6207,6206,6205,6204,6203,6202,6201,6200,6199,6198,6197,6196,6195,6194,6193,6192,6191,6190,6189,6188,6187,6186,6185,6184,6183,6182,6181,6180,6179,6178,6177,6176,6175,6174,6173,6172,6171,6170,6169,6168,6167,6166,6165,6164,6163,6162,6161,6160,6159,6158,6157,6156,6155,6154,6153,6152,6151,6150,6149,6148,6147,6146,6145,6144,6143,6142,6141,6140,6139,6138,6137,6136,6135,6134,6133,6132,6131,6130,6129,6128,6127,6126,6125,6124,6123,6122,6121,6120,6119,6118,6117,6116,6115,6114,6113,6112,6111,6110,6109,6108,6107,6106,6105,6104,6103,6102,6101,6100,6099,6098,6097,6096,6095,6094,6093,6092,6091,6090,6089,6088,6087,6086,6085,6084,6083,6082,6081,6080,6079,6078,6077,6076,6075,6074,6073,6072,6071,6070,6069,6068,6067,6066,6065,6064,6063,6062,6061,6060,6059,6058,6057,6056,6055,6054,6053,6052,6051,6050,6049,6048,6047,6046,6045,6044,6043,6042,6041,6040,6039,6038,6037,6036,6035,6034,6033,6032,6031,6030,6029,6028,6027,6026,6025,6024,6023,6022,6021,6020,6019,6018,6017,6016,6015,6014,6013,6012,6011,6010,6009,6008,6007,6006,6005,6004,6003,6002,6001,6000,5999,5998,5997,5996,5995,5994,5993,5992,5991,5990,5989,5988,5987,5986,5985,5984,5983,5982,5981,5980,5979,5978,5977,5976,5975,5974,5973,5972,5971,5970,5969,5968,5967,5966,5965,5964,5963,5962,5961,5960,5959,5958,5957,5956,5955,5954,5953,5952,5951,5950,5949,5948,5947,5946,5945,5944,5943,5942,5941,5940,5939,5938,5937,5936,5935,5934,5933,5932,5931,5930,5929,5928,5927,5926,5925,5924,5923,5922,5921,5920,5919,5918,5917,5916,5915,5914,5913,5912,5911,5910,5909,5908,5907,5906,5905,5904,5903,5902,5901,5900,5899,5898,5897,5896,5895,5894,5893,5892,5891,5890,5889,5888,5887,5886,5885,5884,5883,5882,5881,5880,5879,5878,5877,5876,5875,5874,5873,5872,5871,5870,5869,5868,5867,5866,5865,5864,5863,5862,5861,5860,5859,5858,5857,5856,5855,5854,5853,5852,5851,5850,5849,5848,5847,5846,5845,5844,5843,5842,5841,5840,5839,5838,5837,5836,5835,5834,5833,5832,5831,5830,5829,5828,5827,5826,5825,5824,5823,5822,5821,5820,5819,5818,5817,5816,5815,5814,5813,5812,5811,5810,5809,5808,5807,5806,5805,5804,5803,5802,5801,5800,5799,5798,5797,5796,5795,5794,5793,5792,5791,5790,5789,5788,5787,5786,5785,5784,5783,5782,5781,5780,5779,5778,5777,5776,5775,5774,5773,5772,5771,5770,5769,5768,5767,5766,5765,5764,5763,5762,5761,5760,5759,5758,5757,5756,5755,5754,5753,5752,5751,5750,5749,5748,5747,5746,5745,5744,5743,5742,5741,5740,5739,5738,5737,5736,5735,5734,5733,5732,5731,5730,5729,5728,5727,5726,5725,5724,5723,5722,5721,5720,5719,5718,5717,5716,5715,5714,5713,5712,5711,5710,5709,5708,5707,5706,5705,5704,5703,5702,5701,5700,5699,5698,5697,5696,5695,5694,5693,5692,5691,5690,5689,5688,5687,5686,5685,5684,5683,5682,5681,5680,5679,5678,5677,5676,5675,5674,5673,5672,5671,5670,5669,5668,5667,5666,5665,5664,5663,5662,5661,5660,5659,5658,5657,5656,5655,5654,5653,5652,5651,5650,5649,5648,5647,5646,5645,5644,5643,5642,5641,5640,5639,5638,5637,5636,5635,5634,5633,5632,5631,5630,5629,5628,5627,5626,5625,5624,5623,5622,5621,5620,5619,5618,5617,5616,5615,5614,5613,5612,5611,5610,5609,5608,5607,5606,5605,5604,5603,5602,5601,5600,5599,5598,5597,5596,5595,5594,5593,5592,5591,5590,5589,5588,5587,5586,5585,5584,5583,5582,5581,5580,5579,5578,5577,5576,5575,5574,5573,5572,5571,5570,5569,5568,5567,5566,5565,5564,5563,5562,5561,5560,5559,5558,5557,5556,5555,5554,5553,5552,5551,5550,5549,5548,5547,5546,5545,5544,5543,5542,5541,5540,5539,5538,5537,5536,5535,5534,5533,5532,5531,5530,5529,5528,5527,5526,5525,5524,5523,5522,5521,5520,5519,5518,5517,5516,5515,5514,5513,5512,5511,5510,5509,5508,5507,5506,5505,5504,5503,5502,5501,5500,5499,5498,5497,5496,5495,5494,5493,5492,5491,5490,5489,5488,5487,5486,5485,5484,5483,5482,5481,5480,5479,5478,5477,5476,5475,5474,5473,5472,5471,5470,5469,5468,5467,5466,5465,5464,5463,5462,5461,5460,5459,5458,5457,5456,5455,5454,5453,5452,5451,5450,5449,5448,5447,5446,5445,5444,5443,5442,5441,5440,5439,5438,5437,5436,5435,5434,5433,5432,5431,5430,5429,5428,5427,5426,5425,5424,5423,5422,5421,5420,5419,5418,5417,5416,5415,5414,5413,5412,5411,5410,5409,5408,5407,5406,5405,5404,5403,5402,5401,5400,5399,5398,5397,5396,5395,5394,5393,5392,5391,5390,5389,5388,5387,5386,5385,5384,5383,5382,5381,5380,5379,5378,5377,5376,5375,5374,5373,5372,5371,5370,5369,5368,5367,5366,5365,5364,5363,5362,5361,5360,5359,5358,5357,5356,5355,5354,5353,5352,5351,5350,5349,5348,5347,5346,5345,5344,5343,5342,5341,5340,5339,5338,5337,5336,5335,5334,5333,5332,5331,5330,5329,5328,5327,5326,5325,5324,5323,5322,5321,5320,5319,5318,5317,5316,5315,5314,5313,5312,5311,5310,5309,5308,5307,5306,5305,5304,5303,5302,5301,5300,5299,5298,5297,5296,5295,5294,5293,5292,5291,5290,5289,5288,5287,5286,5285,5284,5283,5282,5281,5280,5279,5278,5277,5276,5275,5274,5273,5272,5271,5270,5269,5268,5267,5266,5265,5264,5263,5262,5261,5260,5259,5258,5257,5256,5255,5254,5253,5252,5251,5250,5249,5248,5247,5246,5245,5244,5243,5242,5241,5240,5239,5238,5237,5236,5235,5234,5233,5232,5231,5230,5229,5228,5227,5226,5225,5224,5223,5222,5221,5220,5219,5218,5217,5216,5215,5214,5213,5212,5211,5210,5209,5208,5207,5206,5205,5204,5203,5202,5201,5200,5199,5198,5197,5196,5195,5194,5193,5192,5191,5190,5189,5188,5187,5186,5185,5184,5183,5182,5181,5180,5179,5178,5177,5176,5175,5174,5173,5172,5171,5170,5169,5168,5167,5166,5165,5164,5163,5162,5161,5160,5159,5158,5157,5156,5155,5154,5153,5152,5151,5150,5149,5148,5147,5146,5145,5144,5143,5142,5141,5140,5139,5138,5137,5136,5135,5134,5133,5132,5131,5130,5129,5128,5127,5126,5125,5124,5123,5122,5121,5120,5119,5118,5117,5116,5115,5114,5113,5112,5111,5110,5109,5108,5107,5106,5105,5104,5103,5102,5101,5100,5099,5098,5097,5096,5095,5094,5093,5092,5091,5090,5089,5088,5087,5086,5085,5084,5083,5082,5081,5080,5079,5078,5077,5076,5075,5074,5073,5072,5071,5070,5069,5068,5067,5066,5065,5064,5063,5062,5061,5060,5059,5058,5057,5056,5055,5054,5053,5052,5051,5050,5049,5048,5047,5046,5045,5044,5043,5042,5041,5040,5039,5038,5037,5036,5035,5034,5033,5032,5031,5030,5029,5028,5027,5026,5025,5024,5023,5022,5021,5020,5019,5018,5017,5016,5015,5014,5013,5012,5011,5010,5009,5008,5007,5006,5005,5004,5003,5002,5001,5000,4999,4998,4997,4996,4995,4994,4993,4992,4991,4990,4989,4988,4987,4986,4985,4984,4983,4982,4981,4980,4979,4978,4977,4976,4975,4974,4973,4972,4971,4970,4969,4968,4967,4966,4965,4964,4963,4962,4961,4960,4959,4958,4957,4956,4955,4954,4953,4952,4951,4950,4949,4948,4947,4946,4945,4944,4943,4942,4941,4940,4939,4938,4937,4936,4935,4934,4933,4932,4931,4930,4929,4928,4927,4926,4925,4924,4923,4922,4921,4920,4919,4918,4917,4916,4915,4914,4913,4912,4911,4910,4909,4908,4907,4906,4905,4904,4903,4902,4901,4900,4899,4898,4897,4896,4895,4894,4893,4892,4891,4890,4889,4888,4887,4886,4885,4884,4883,4882,4881,4880,4879,4878,4877,4876,4875,4874,4873,4872,4871,4870,4869,4868,4867,4866,4865,4864,4863,4862,4861,4860,4859,4858,4857,4856,4855,4854,4853,4852,4851,4850,4849,4848,4847,4846,4845,4844,4843,4842,4841,4840,4839,4838,4837,4836,4835,4834,4833,4832,4831,4830,4829,4828,4827,4826,4825,4824,4823,4822,4821,4820,4819,4818,4817,4816,4815,4814,4813,4812,4811,4810,4809,4808,4807,4806,4805,4804,4803,4802,4801,4800,4799,4798,4797,4796,4795,4794,4793,4792,4791,4790,4789,4788,4787,4786,4785,4784,4783,4782,4781,4780,4779,4778,4777,4776,4775,4774,4773,4772,4771,4770,4769,4768,4767,4766,4765,4764,4763,4762,4761,4760,4759,4758,4757,4756,4755,4754,4753,4752,4751,4750,4749,4748,4747,4746,4745,4744,4743,4742,4741,4740,4739,4738,4737,4736,4735,4734,4733,4732,4731,4730,4729,4728,4727,4726,4725,4724,4723,4722,4721,4720,4719,4718,4717,4716,4715,4714,4713,4712,4711,4710,4709,4708,4707,4706,4705,4704,4703,4702,4701,4700,4699,4698,4697,4696,4695,4694,4693,4692,4691,4690,4689,4688,4687,4686,4685,4684,4683,4682,4681,4680,4679,4678,4677,4676,4675,4674,4673,4672,4671,4670,4669,4668,4667,4666,4665,4664,4663,4662,4661,4660,4659,4658,4657,4656,4655,4654,4653,4652,4651,4650,4649,4648,4647,4646,4645,4644,4643,4642,4641,4640,4639,4638,4637,4636,4635,4634,4633,4632,4631,4630,4629,4628,4627,4626,4625,4624,4623,4622,4621,4620,4619,4618,4617,4616,4615,4614,4613,4612,4611,4610,4609,4608,4607,4606,4605,4604,4603,4602,4601,4600,4599,4598,4597,4596,4595,4594,4593,4592,4591,4590,4589,4588,4587,4586,4585,4584,4583,4582,4581,4580,4579,4578,4577,4576,4575,4574,4573,4572,4571,4570,4569,4568,4567,4566,4565,4564,4563,4562,4561,4560,4559,4558,4557,4556,4555,4554,4553,4552,4551,4550,4549,4548,4547,4546,4545,4544,4543,4542,4541,4540,4539,4538,4537,4536,4535,4534,4533,4532,4531,4530,4529,4528,4527,4526,4525,4524,4523,4522,4521,4520,4519,4518,4517,4516,4515,4514,4513,4512,4511,4510,4509,4508,4507,4506,4505,4504,4503,4502,4501,4500,4499,4498,4497,4496,4495,4494,4493,4492,4491,4490,4489,4488,4487,4486,4485,4484,4483,4482,4481,4480,4479,4478,4477,4476,4475,4474,4473,4472,4471,4470,4469,4468,4467,4466,4465,4464,4463,4462,4461,4460,4459,4458,4457,4456,4455,4454,4453,4452,4451,4450,4449,4448,4447,4446,4445,4444,4443,4442,4441,4440,4439,4438,4437,4436,4435,4434,4433,4432,4431,4430,4429,4428,4427,4426,4425,4424,4423,4422,4421,4420,4419,4418,4417,4416,4415,4414,4413,4412,4411,4410,4409,4408,4407,4406,4405,4404,4403,4402,4401,4400,4399,4398,4397,4396,4395,4394,4393,4392,4391,4390,4389,4388,4387,4386,4385,4384,4383,4382,4381,4380,4379,4378,4377,4376,4375,4374,4373,4372,4371,4370,4369,4368,4367,4366,4365,4364,4363,4362,4361,4360,4359,4358,4357,4356,4355,4354,4353,4352,4351,4350,4349,4348,4347,4346,4345,4344,4343,4342,4341,4340,4339,4338,4337,4336,4335,4334,4333,4332,4331,4330,4329,4328,4327,4326,4325,4324,4323,4322,4321,4320,4319,4318,4317,4316,4315,4314,4313,4312,4311,4310,4309,4308,4307,4306,4305,4304,4303,4302,4301,4300,4299,4298,4297,4296,4295,4294,4293,4292,4291,4290,4289,4288,4287,4286,4285,4284,4283,4282,4281,4280,4279,4278,4277,4276,4275,4274,4273,4272,4271,4270,4269,4268,4267,4266,4265,4264,4263,4262,4261,4260,4259,4258,4257,4256,4255,4254,4253,4252,4251,4250,4249,4248,4247,4246,4245,4244,4243,4242,4241,4240,4239,4238,4237,4236,4235,4234,4233,4232,4231,4230,4229,4228,4227,4226,4225,4224,4223,4222,4221,4220,4219,4218,4217,4216,4215,4214,4213,4212,4211,4210,4209,4208,4207,4206,4205,4204,4203,4202,4201,4200,4199,4198,4197,4196,4195,4194,4193,4192,4191,4190,4189,4188,4187,4186,4185,4184,4183,4182,4181,4178,4177,4176,4175,4174,4173,4172,4171,4170,4169,4168,4167,4166,4165,4164,4163,4162,4161,4160,4159,4158,4157,4155,4154,4153,4152,4151,4150,4149,4148,4147,4146,4145,4144,4143,4142,4141,4140,4139,4138,4137,4136,4135,4134,4133,4132,4131,4130,4129,4128,4127,4126,4125,4124,4123,4122,4121,4120,4119,4118,4117,4116,4115,4114,4113,4112,4111,4110,4109,4108,4107,4106,4105,4104,4103,4102,4101,4100,4099,4098,4097,4096,4095,4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4083,4082,4081,4080,4079,4078,4077,4076,4075,4074,4073,4072,4071,4070,4069,4068,4067,4066,4065,4064,4063,4062,4061,4060,4059,4058,4057,4056,4055,4054,4053,4052,4051,4050,4049,4048,4047,4046,4045,4044,4043,4042,4041,4040,4039,4038,4037,4036,4035,4034,4033,4032,4031,4030,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4019,4018,4017,4016,4015,4014,4013,4012,4011,4010,4009,4008,4007,4006,4005,4004,4003,4002,4001,4000,3999,3998,3997,3996,3995,3994,3993,3992,3991,3990,3989,3988,3987,3986,3985,3984,3983,3982,3981,3980,3979,3978,3977,3976,3975,3974,3973,3972,3971,3970,3969,3968,3967,3966,3965,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3954,3953,3952,3951,3950,3949,3948,3947,3946,3945,3944,3943,3942,3941,3940,3939,3938,3937,3936,3935,3934,3933,3932,3931,3930,3929,3928,3927,3926,3925,3924,3923,3922,3921,3920,3919,3918,3917,3916,3915,3914,3913,3912,3911,3910,3909,3908,3907,3906,3905,3904,3903,3902,3901,3900,3899,3898,3897,3896,3895,3894,3893,3892,3891,3890,3889,3888,3887,3886,3885,3884,3883,3882,3881,3880,3879,3878,3877,3876,3875,3874,3873,3872,3871,3870,3869,3868,3867,3866,3865,3864,3863,3862,3861,3860,3859,3858,3857,3856,3855,3854,3853,3852,3851,3850,3849,3848,3847,3846,3845,3844,3843,3842,3841,3840,3839,3838,3837,3836,3835,3834,3833,3832,3831,3830,3829,3828,3827,3826,3825,3824,3823,3822,3821,3820,3819,3818,3817,3816,3815,3814,3813,3812,3811,3810,3809,3808,3807,3806,3805,3804,3803,3802,3801,3800,3799,3798,3797,3796,3795,3794,3793,3792,3791,3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3769,3768,3767,3766,3765,3764,3763,3762,3761,3760,3759,3758,3757,3756,3755,3754,3753,3752,3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739,3738,3737,3736,3735,3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722,3721,3720,3719,3718,3717,3716,3715,3714,3713,3712,3711,3710,3709,3708,3707,3706,3705,3704,3703,3702,3701,3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3689,3688,3687,3686,3685,3684,3683,3682,3681,3680,3679,3678,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3665,3664,3663,3662,3661,3660,3659,3658,3657,3656,3655,3654,3653,3652,3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3619,3618,3617,3616,3615,3614,3613,3612,3611,3610,3609,3608,3607,3606,3605,3604,3603,3602,3601,3600,3599,3598,3597,3596,3595,3594,3593,3592,3591,3590,3589,3588,3587,3586,3585,3584,3583,3582,3581,3580,3579,3578,3577,3576,3575,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3564,3563,3562,3561,3560,3559,3558,3557,3556,3555,3554,3553,3552,3551,3550,3549,3548,3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3530,3529,3528,3527,3526,3525,3524,3523,3522,3521,3520,3519,3518,3517,3516,3515,3514,3513,3512,3511,3510,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3499,3498,3497,3496,3495,3494,3493,3492,3491,3490,3489,3488,3487,3486,3485,3484,3483,3482,3481,3480,3479,3478,3477,3476,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,3464,3463,3462,3461,3460,3459,3458,3457,3456,3455,3454,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3428,3427,3426,3425,3424,3423,3422,3421,3420,3419,3418,3417,3416,3415,3414,3413,3412,3411,3410,3409,3408,3407,3406,3405,3404,3403,3402,3401,3400,3399,3398,3397,3396,3395,3394,3393,3392,3391,3390,3389,3388,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,3365,3364,3363,3362,3361,3360,3359,3358,3357,3356,3355,3354,3353,3352,3351,3350,3349,3348,3347,3346,3345,3344,3343,3342,3341,3340,3339,3338,3337,3336,3335,3334,3333,3332,3331,3330,3329,3328,3327,3326,3325,3324,3323,3322,3321,3320,3319,3318,3317,3316,3315,3314,3313,3312,3311,3310,3309,3308,3307,3306,3305,3304,3303,3302,3301,3300,3299,3298,3297,3296,3295,3294,3293,3292,3291,3290,3289,3288,3287,3286,3285,3284,3283,3282,3281,3280,3279,3278,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3250,3249,3248,3247,3246,3245,3244,3243,3242,3241,3240,3239,3238,3237,3236,3235,3234,3233,3232,3231,3230,3229,3228,3227,3226,3225,3224,3223,3222,3221,3220,3219,3218,3217,3216,3215,3214,3213,3212,3211,3210,3209,3208,3207,3206,3205,3204,3203,3202,3201,3200,3199,3198,3197,3196,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3185,3184,3183,3182,3181,3180,3179,3178,3177,3176,3175,3174,3173,3172,3171,3170,3169,3168,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,3145,3144,3143,3142,3141,3140,3139,3138,3137,3136,3135,3134,3133,3132,3131,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3120,3119,3118,3117,3116,3115,3114,3113,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,3101,3100,3099,3098,3097,3096,3095,3094,3093,3092,3091,3090,3089,3088,3087,3086,3085,3084,3083,3082,3081,3080,3079,3078,3077,3076,3075,3074,3073,3072,3071,3070,3069,3068,3067,3066,3065,3064,3063,3062,3061,3060,3059,3058,3057,3056,3055,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3044,3043,3042,3041,3040,3039,3038,3037,3036,3035,3034,3033,3032,3031,3030,3029,3028,3027,3026,3025,3024,3023,3022,3021,3020,3019,3018,3017,3016,3015,3014,3013,3012,3011,3010,3009,3008,3007,3006,3005,3004,3003,3002,3001,3000,2999,2998,2997,2996,2995,2994,2993,2992,2991,2990,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2979,2978,2977,2976,2975,2974,2973,2972,2971,2970,2969,2968,2967,2966,2965,2964,2963,2962,2961,2960,2959,2958,2957,2956,2955,2954,2953,2952,2951,2950,2949,2948,2947,2946,2945,2944,2943,2942,2941,2940,2939,2938,2937,2936,2935,2934,2933,2932,2931,2930,2929,2928,2927,2926,2925,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2899,2898,2897,2896,2895,2894,2893,2892,2891,2890,2889,2888,2887,2885,2884,2883,2882,2881,2880,2879,2878,2877,2876,2875,2874,2873,2872,2871,2870,2869,2868,2867,2866,2865,2864,2863,2862,2861,2860,2859,2858,2857,2856,2855,2854,2853,2852,2851,2849,2848,2847,2846,2845,2844,2843,2842,2841,2840,2839,2838,2837,2836,2835,2834,2833,2832,2831,2830,2829,2828,2827,2826,2825,2824,2823,2822,2821,2820,2819,2818,2817,2816,2815,2814,2813,2812,2811,2810,2809,2808,2807,2806,2805,2804,2803,2802,2801,2800,2799,2798,2797,2796,2795,2794,2793,2792,2791,2790,2789,2788,2787,2786,2785,2784,2783,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2757,2756,2755,2754,2753,2752,2751,2750,2749,2748,2747,2746,2745,2744,2743,2742,2741,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2730,2729,2728,2727,2726,2725,2724,2723,2722,2721,2720,2719,2718,2717,2716,2715,2714,2713,2712,2711,2710,2709,2708,2707,2706,2705,2704,2703,2702,2701,2700,2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2689,2688,2687,2686,2685,2684,2683,2682,2681,2680,2679,2678,2677,2676,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2665,2664,2663,2662,2661,2660,2659,2658,2657,2656,2655,2654,2653,2652,2651,2650,2649,2648,2647,2646,2645,2644,2643,2642,2641,2640,2639,2638,2637,2636,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2600,2599,2598,2597,2596,2595,2594,2593,2592,2591,2590,2589,2588,2587,2586,2585,2584,2583,2582,2581,2580,2579,2578,2577,2576,2575,2574,2573,2572,2571,2570,2569,2568,2567,2566,2565,2564,2563,2562,2561,2560,2559,2558,2557,2556,2555,2554,2553,2552,2551,2550,2549,2548,2547,2546,2545,2544,2543,2542,2541,2540,2539,2538,2537,2536,2535,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514,2513,2512,2511,2510,2509,2508,2507,2506,2505,2504,2503,2502,2501,2500,2499,2498,2497,2496,2495,2494,2493,2492,2491,2490,2489,2488,2487,2486,2485,2484,2483,2482,2481,2480,2479,2478,2477,2476,2475,2474,2473,2472,2471,2470,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,2441,2440,2439,2438,2437,2436,2435,2434,2433,2432,2431,2430,2429,2428,2427,2426,2425,2424,2423,2422,2421,2420,2419,2418,2417,2416,2415,2414,2413,2412,2411,2410,2409,2408,2407,2406,2405,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2394,2393,2392,2391,2390,2389,2388,2387,2386,2385,2384,2383,2382,2381,2380,2379,2378,2377,2376,2375,2374,2373,2372,2371,2370,2369,2368,2367,2366,2365,2364,2363,2362,2361,2360,2359,2358,2357,2356,2355,2354,2353,2352,2351,2350,2349,2348,2347,2346,2345,2344,2343,2342,2341,2340,2339,2338,2337,2336,2335,2334,2333,2332,2331,2330,2329,2328,2327,2326,2325,2324,2323,2322,2321,2320,2319,2318,2317,2316,2315,2314,2313,2312,2311,2310,2309,2308,2307,2306,2305,2304,2303,2302,2301,2300,2299,2298,2297,2296,2295,2294,2293,2292,2291,2290,2289,2288,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2261,2260,2259,2258,2257,2256,2255,2254,2253,2252,2251,2250,2249,2248,2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225,2224,2223,2222,2221,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2210,2209,2208,2207,2206,2205,2204,2203,2202,2201,2200,2199,2198,2197,2196,2195,2194,2193,2192,2191,2190,2189,2188,2187,2186,2185,2184,2183,2182,2181,2180,2179,2178,2177,2176,2175,2174,2173,2172,2171,2170,2169,2168,2167,2166,2165,2164,2163,2162,2161,2160,2159,2158,2157,2156,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2145,2144,2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2126,2125,2124,2123,2122,2121,2120,2119,2118,2117,2116,2115,2114,2113,2112,2111,2110,2109,2108,2107,2106,2105,2104,2103,2102,2101,2100,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2076,2075,2074,2073,2072,2071,2070,2069,2068,2067,2066,2065,2064,2063,2062,2061,2060,2059,2058,2057,2056,2055,2054,2053,2052,2051,2050,2049,2048,2047,2046,2045,2044,2043,2042,2041,2040,2039,2038,2037,2036,2035,2034,2033,2032,2031,2030,2029,2028,2027,2026,2025,2024,2023,2022,2021,2020,2019,2018,2017,2016,2015,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,2004,2003,2002,2001,2000,1999,1998,1997,1996,1995,1994,1993,1992,1991,1990,1989,1988,1987,1986,1985,1984,1983,1982,1981,1980,1979,1978,1977,1976,1975,1974,1973,1972,1971,1970,1969,1968,1967,1966,1965,1964,1963,1962,1961,1960,1959,1958,1957,1956,1955,1954,1953,1952,1951,1950,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1939,1938,1937,1936,1935,1934,1933,1932,1931,1930,1929,1928,1927,1926,1925,1924,1923,1922,1921,1920,1919,1918,1917,1916,1915,1914,1913,1912,1911,1910,1909,1908,1907,1906,1905,1904,1903,1902,1901,1900,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1888,1887,1886,1885,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1874,1873,1872,1871,1870,1869,1868,1867,1866,1865,1864,1863,1862,1861,1860,1859,1858,1857,1856,1855,1854,1853,1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830,1829,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1805,1804,1803,1802,1801,1800,1799,1798,1797,1796,1795,1794,1793,1792,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,1757,1756,1755,1754,1753,1752,1751,1750,1749,1748,1747,1746,1745,1744,1743,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,1732,1731,1730,1729,1728,1727,1726,1725,1724,1723,1722,1721,1720,1719,1718,1717,1716,1715,1714,1713,1712,1711,1710,1709,1708,1707,1706,1705,1704,1703,1702,1701,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1670,1669,1668,1667,1666,1665,1664,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1624,1623,1622,1621,1620,1619,1618,1617,1616,1615,1614,1613,1612,1611,1610,1609,1608,1607,1606,1605,1604,1603,1602,1601,1600,1599,1598,1597,1596,1595,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,1584,1583,1582,1581,1580,1579,1578,1577,1576,1575,1574,1573,1572,1571,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,1529,1528,1527,1526,1525,1524,1523,1522,1521,1520,1519,1518,1517,1516,1515,1514,1513,1512,1511,1510,1509,1508,1507,1506,1505,1504,1503,1502,1501,1500,1499,1498,1497,1496,1495,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1484,1483,1482,1481,1480,1479,1478,1477,1476,1475,1474,1473,1472,1471,1470,1469,1468,1467,1466,1465,1464,1463,1462,1461,1460,1459,1458,1457,1456,1455,1454,1453,1452,1451,1447,1446,1445,1444,1443,1442,1441,1440,1439,1438,1437,1436,1435,1434,1433,1432,1431,1430,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1405,1404,1403,1402,1401,1400,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1377,1376,1375,1374,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1354,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1320,1319,1318,1317,1316,1315,1314,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,1303,1302,1301,1300,1299,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254,1253,1252,1251,1250,1249,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1228,1227,1226,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1144,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,1093,1092,1091,1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,1029,1028,1027,1026,1025,1024,1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,998,997,996,995,994,993,992,991,990,989,988,987,986,985,984,983,982,981,980,979,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,915,914,913,912,911,910,909,908,907,906,905,904,903,902,901,900,899,898,897,896,895,894,893,892,891,890,889,888,887,886,885,884,883,882,881,880,879,878,877,876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,861,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,819,818,817,816,815,814,813,812,811,810,809,808,807,806,805,804,803,802,801,800,799,798,797,796,795,794,793,792,791,790,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,770,769,768,767,766,765,764,763,762,761,760,759,758,757,756,755,754,753,752,751,750,749,748,747,746,745,744,743,742,741,740,739,738,737,736,735,734,733,732,731,730,729,728,727,726,725,724,723,722,721,720,719,718,717,716,715,714,713,712,711,710,709,708,707,706,705,704,703,702,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,682,681,680,679,678,677,676,675,674,673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,646,645,644,643,642,641,640,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,618,617,616,615,614,613,612,611,610,609,608,607,606,605,604,603,602,601,600,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551,550,549,548,547,546,545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,516,515,514,513,512,511,510,509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,491,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,388,387,386,385,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,357,356,355,354,353,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,278,277,276,275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,206,205,204,203,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:00:22:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2020.01.18 21:01:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:01:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2060 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:01:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3228,3227,3226,3225,3223,3222,3221,3220,3219,3218) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:01:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '08937411134fef27e277581d1e1d11ac', '66.249.72.11'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:02:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6353 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:02:39:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6353 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:02:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6353) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:02:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6353
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:02:39:
--------------------------------

                    -- Черкаський театр хочуть запустити вже цього року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6353
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:02:39:
--------------------------------

                    -- Черкаський театр хочуть запустити вже цього року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('хочуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6353
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:02:39:
--------------------------------

                    -- Черкаський театр хочуть запустити вже цього року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('запустити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6353
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:02:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1524f53c3461c001c7212a774f13f462', '66.249.72.11'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 21:10:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:10:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2010 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:10:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3315,3314,3310,3309,3308,3307,3305,3302,3301,3299) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:10:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:12:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6313 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6313 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6313) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6313
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:07:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:07:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('зафіксовано')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:07:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('випадків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('групових')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('захворювань')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('гострі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кишкові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------

                    -- На Черкащині зафіксовано 5 випадків групових захворювань на гострі кишкові інфекції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('інфекції')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6313
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1714 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1714 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1714) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5863 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5863 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5863) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1812 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1812 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1812) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4529 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4529 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4529) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1609 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1609 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:12:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1609) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:12:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 21:16:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['20'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:16:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['20'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 320 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:16:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (638,621,616,611,591,562,552,547,461,435) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c278de52da42d2dd6d495bc7c1d6ecde', '100.43.90.165'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:16:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3164 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:16:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3164 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:16:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3164) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3164
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:24:
--------------------------------

                    -- На Черкащині активізувалися шахраї, які видають себе за податківців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3164
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:25:
--------------------------------

                    -- На Черкащині активізувалися шахраї, які видають себе за податківців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('активізувалися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3164
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:25:
--------------------------------

                    -- На Черкащині активізувалися шахраї, які видають себе за податківців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('шахраї,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3164
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:25:
--------------------------------

                    -- На Черкащині активізувалися шахраї, які видають себе за податківців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('видають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3164
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:25:
--------------------------------

                    -- На Черкащині активізувалися шахраї, які видають себе за податківців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('податківців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3164
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5261 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:16:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5261 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:16:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5261) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:16:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1746317ceefcdd50c75fc42366e7f6bd', '5.255.250.137'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:17:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6348 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:17:21:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6348 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:17:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6348) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6348
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:21:
--------------------------------

                    -- Команда заступників представляє людей від заходу до сходу, — Роман Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Команда')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6348
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:21:
--------------------------------

                    -- Команда заступників представляє людей від заходу до сходу, — Роман Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('заступників')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6348
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:21:
--------------------------------

                    -- Команда заступників представляє людей від заходу до сходу, — Роман Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('представляє')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6348
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:21:
--------------------------------

                    -- Команда заступників представляє людей від заходу до сходу, — Роман Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('заходу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6348
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:22:
--------------------------------

                    -- Команда заступників представляє людей від заходу до сходу, — Роман Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сходу,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6348
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:22:
--------------------------------

                    -- Команда заступників представляє людей від заходу до сходу, — Роман Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Боднар')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6348
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:17:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a80125dd2d44a0b41058e9bdce0426a0', '77.88.47.79'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:20:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:20:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2080 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:20:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3203,3202,3201,3200,3197,3196,3194,3192,3191,3190) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:20:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c5fa834f809b8e89f0818b5a8ffff300', '66.249.72.14'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:21:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6399 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:21:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6399 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:21:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6399) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:21:35:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6399
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:21:35:
--------------------------------

                    -- Борець із Черкас готується до поєдинку в Молдові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Борець')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6399
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:21:35:
--------------------------------

                    -- Борець із Черкас готується до поєдинку в Молдові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6399
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:21:35:
--------------------------------

                    -- Борець із Черкас готується до поєдинку в Молдові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('готується')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6399
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:21:36:
--------------------------------

                    -- Борець із Черкас готується до поєдинку в Молдові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('поєдинку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6399
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:21:36:
--------------------------------

                    -- Борець із Черкас готується до поєдинку в Молдові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Молдові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6399
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:21:36:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '14d446d6132dbbb250b359eb955cd0df', '66.249.72.16'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 21:22:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5725 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5725 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5725) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:53:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5725
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:53:
--------------------------------

                    -- П’яний водій інватаксі скоїв аварію в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('П’яний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5725
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------

                    -- П’яний водій інватаксі скоїв аварію в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('інватаксі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5725
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------

                    -- П’яний водій інватаксі скоїв аварію в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('аварію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5725
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------

                    -- П’яний водій інватаксі скоїв аварію в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5725
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1923 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1923 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1923) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1903 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1903 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1903) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5784 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5784 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5784) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3675 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3675 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3675) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6468 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6468 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6468) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a9e3463685fe521d7a8ae45776b1b159', '37.9.87.213'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:22:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5692 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:56:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5692 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:22:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5692) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5692
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:56:
--------------------------------

                    -- Черкаська модель стала морпіхом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5692
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:56:
--------------------------------

                    -- Черкаська модель стала морпіхом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('модель')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5692
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:57:
--------------------------------

                    -- Черкаська модель стала морпіхом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('морпіхом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5692
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:22:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'eb1b01914a20b9ed6cc6eaf9728e4ba9', '93.158.161.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:29:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:29:36:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2130 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:29:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3121,3120,3118,3117,3115,3113,3111,3110,3109,3108) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:29:36:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:31:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['20'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:31:03:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['20'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 100 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:31:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4892,4891,4888,4875,4867,4833,4814,4785,4780,4771) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:31:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '14d446d6132dbbb250b359eb955cd0df', '66.249.72.16'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6358 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6358 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6358) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6358
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------

                    -- У грудні субсидії стали меншими через падіння ціни на газ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('грудні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6358
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------

                    -- У грудні субсидії стали меншими через падіння ціни на газ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('субсидії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6358
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------

                    -- У грудні субсидії стали меншими через падіння ціни на газ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('меншими')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6358
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------

                    -- У грудні субсидії стали меншими через падіння ціни на газ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('падіння')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6358
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6292 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6292 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6292) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5926 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5926 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5926) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 806 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 806 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (806) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 934 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 934 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (934) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5230 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5230 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5230) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'da3aa0cfe5c57f6194bf8ecd80e81e18', '93.158.166.129'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:35:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ebd2cf2ccabe546997847d08a1f1dfc6', '5.255.250.25'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:35:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 210 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6184,6182,6181,6180,6176,6175,6173,6171,6170,6169) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f039b8be062893b9aa48951c52986214', '77.88.47.139'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:35:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3314 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:23:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3314 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3314) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3314
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------

                    -- Невдало послизнувся. Черкащанин зламав ногу через слизький тротуар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Невдало')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3314
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------

                    -- Невдало послизнувся. Черкащанин зламав ногу через слизький тротуар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('послизнувся.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3314
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------

                    -- Невдало послизнувся. Черкащанин зламав ногу через слизький тротуар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3314
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------

                    -- Невдало послизнувся. Черкащанин зламав ногу через слизький тротуар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('зламав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3314
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------

                    -- Невдало послизнувся. Черкащанин зламав ногу через слизький тротуар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('слизький')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3314
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------

                    -- Невдало послизнувся. Черкащанин зламав ногу через слизький тротуар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('тротуар')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3314
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2663 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:23:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2663 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2663) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2864 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2864 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2864) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6581 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6581 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6581) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 636 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 636 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (636) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 654 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 654 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (654) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '437d4ced1a72a53b31fab17a953a4843', '93.158.161.7'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1045 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1045 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1045) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 1045
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------

                    -- Протягнув понад 10 метрів: на Черкащині водій насмерть збив жінку і втік
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Протягнув')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1045
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:24:
--------------------------------

                    -- Протягнув понад 10 метрів: на Черкащині водій насмерть збив жінку і втік
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('метрів:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1045
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:25:
--------------------------------

                    -- Протягнув понад 10 метрів: на Черкащині водій насмерть збив жінку і втік
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1045
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:25:
--------------------------------

                    -- Протягнув понад 10 метрів: на Черкащині водій насмерть збив жінку і втік
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('насмерть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1045
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f4d12e184854bffc4d9707bca209718', '77.88.47.167'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:35:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['19'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['19'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 20 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6215,6206,6198,6194,6108,6053,6007,5987,5982,5981) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:35:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 230 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5322,5319,5318,5317,5309,5301,5294,5288,5285,5284) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ebd2cf2ccabe546997847d08a1f1dfc6', '5.255.250.25'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:35:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5723 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5723 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5723) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5723
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:41:
--------------------------------

                    -- “Дуже хочу жити”: черкащанка потребує допомоги у боротьбі з недугом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('жити”:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5723
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:41:
--------------------------------

                    -- “Дуже хочу жити”: черкащанка потребує допомоги у боротьбі з недугом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5723
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:41:
--------------------------------

                    -- “Дуже хочу жити”: черкащанка потребує допомоги у боротьбі з недугом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('потребує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5723
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------

                    -- “Дуже хочу жити”: черкащанка потребує допомоги у боротьбі з недугом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('допомоги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5723
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------

                    -- “Дуже хочу жити”: черкащанка потребує допомоги у боротьбі з недугом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('боротьбі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5723
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------

                    -- “Дуже хочу жити”: черкащанка потребує допомоги у боротьбі з недугом
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('недугом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5723
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4448 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4448 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4448) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 373 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 373 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (373) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 371 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 371 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (371) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2630 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2630 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2630) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4930 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4930 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:35:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4930) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:35:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '57f8d243af9d3a50154ffc9f6ce0018d', '5.255.250.110'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:39:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:39:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2170 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:39:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3063,3062,3061,3058,3056,3055,3053,3052,3051,3050) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:39:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5c9681a98daa62cb4af0e2c5a281cf64', '66.249.72.13'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:40:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6406 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:40:31:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6406 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:40:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6406) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:31:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6406
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:31:
--------------------------------

                    -- Десять аварій за участі автомобілів патрульної сталося в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Десять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6406
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:31:
--------------------------------

                    -- Десять аварій за участі автомобілів патрульної сталося в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('аварій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6406
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:31:
--------------------------------

                    -- Десять аварій за участі автомобілів патрульної сталося в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('участі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6406
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:32:
--------------------------------

                    -- Десять аварій за участі автомобілів патрульної сталося в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('автомобілів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6406
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:32:
--------------------------------

                    -- Десять аварій за участі автомобілів патрульної сталося в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('патрульної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6406
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:32:
--------------------------------

                    -- Десять аварій за участі автомобілів патрульної сталося в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сталося')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6406
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:32:
--------------------------------

                    -- Десять аварій за участі автомобілів патрульної сталося в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6406
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:40:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1524f53c3461c001c7212a774f13f462', '66.249.72.11'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 21:48:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:48:32:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2020 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:48:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3298,3297,3295,3294,3293,3292,3290,3289,3288,3287) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:48:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c5fa834f809b8e89f0818b5a8ffff300', '66.249.72.14'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6367 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6367 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6367) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6367
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------

                    -- На Уманщині двоє осіб провалилися під кригу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Уманщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6367
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------

                    -- На Уманщині двоє осіб провалилися під кригу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('провалилися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6367
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2755 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2755 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2755) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1445 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1445 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1445) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5009 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5009 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3864 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3864 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3864) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5172 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5172 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:49:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5172) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:49:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 21:52:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:52:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 630 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:52:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5292,5291,5289,5288,5287,5286,5285,5284,5282,5279) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:52:13:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f40df86f26e046059cd99cea957d1e7', '66.249.72.16'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:55:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['13'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:55:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['13'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:55:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6054,6052,6048,6046,6042,6036,6032,6029,6021,6016) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:55:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9aa1a269534ea11c9fda025da7abb5fc', '141.8.188.141'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:57:34:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6446 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:34:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6446 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:34:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6446) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:34:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6446
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:34:
--------------------------------

                    -- На одній із вулиць черкасці знайшли мінометну міну
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вулиць')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6446
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------

                    -- На одній із вулиць черкасці знайшли мінометну міну
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкасці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6446
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------

                    -- На одній із вулиць черкасці знайшли мінометну міну
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('знайшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6446
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------

                    -- На одній із вулиць черкасці знайшли мінометну міну
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('мінометну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6446
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2410 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2410 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2410) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2152 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2152 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2152) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4800 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4800 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4800) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 17 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 17 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (17) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1885 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1885 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1885) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '7cee8fcb7013907022970333e9076016', '77.88.47.98'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:57:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:39:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 470 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4791,4790,4787,4786,4781,4777,4767,4752,4746,4744) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9c1033d860c02451ac59002c45e427f8', '5.255.250.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:57:58:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3179 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:58:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3179 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:57:58:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3179) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:58:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3179
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Уманська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('прокуратура')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розслідувала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('незаконне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('зберігання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('наркотиків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('великих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:57:59:
--------------------------------

                    -- Уманська прокуратура розслідувала незаконне зберігання наркотиків у великих розмірах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розмірах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3179
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5265 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5265 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5265) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5301 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5301 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5301) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4056 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4056 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4056) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 780 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 780 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (780) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4093 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4093 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4093) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:58:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '2dc76e885ffee1ea19e021f019f61aca', '141.8.143.136'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2040 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:58:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3265,3262,3261,3258,3256,3255,3253,3252,3250,3248) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:58:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b09ade9397bfb2c5d690a9da7f816588', '66.249.72.15'::inet, 'Chrome' );
--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6383 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6383 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6383) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6383
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------

                    -- Без суттєвих змін: туман та денне тепло прогнозують синоптики на завтра
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('суттєвих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6383
                        AND posts.tag_id && ARRAY['20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------

                    -- Без суттєвих змін: туман та денне тепло прогнозують синоптики на завтра
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('прогнозують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6383
                        AND posts.tag_id && ARRAY['20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------

                    -- Без суттєвих змін: туман та денне тепло прогнозують синоптики на завтра
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('синоптики')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6383
                        AND posts.tag_id && ARRAY['20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------

                    -- Без суттєвих змін: туман та денне тепло прогнозують синоптики на завтра
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('завтра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6383
                        AND posts.tag_id && ARRAY['20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2851 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2851 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2851) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3835 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3835 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3835) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5518 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5518 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5518) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1259 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1259 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1259) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5432 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5432 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 21:59:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5432) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 21:59:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '10c88a023563d8b9f5aa0c19851615ee', '66.249.72.13'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:01:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6450 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:01:38:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6450 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:01:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6450) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:01:38:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6450
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:01:38:
--------------------------------

                    -- За якими адресами в Черкасах не привозитимуть артезіанську воду
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('адресами')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6450
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:01:38:
--------------------------------

                    -- За якими адресами в Черкасах не привозитимуть артезіанську воду
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6450
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:01:38:
--------------------------------

                    -- За якими адресами в Черкасах не привозитимуть артезіанську воду
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('привозитимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6450
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:01:39:
--------------------------------

                    -- За якими адресами в Черкасах не привозитимуть артезіанську воду
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('артезіанську')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6450
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:01:39:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '08937411134fef27e277581d1e1d11ac', '66.249.72.11'::inet, 'Chrome' );
--------------------------------
2020.01.18 22:02:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 242 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 242 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (242) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:50:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 242
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:50:
--------------------------------

                    -- Відбувся літературно-музичний вечір про українське коріння роду Пушкіних
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Відбувся')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 242
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------

                    -- Відбувся літературно-музичний вечір про українське коріння роду Пушкіних
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('літературно-музичний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 242
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------

                    -- Відбувся літературно-музичний вечір про українське коріння роду Пушкіних
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('українське')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 242
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------

                    -- Відбувся літературно-музичний вечір про українське коріння роду Пушкіних
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('коріння')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 242
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------

                    -- Відбувся літературно-музичний вечір про українське коріння роду Пушкіних
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Пушкіних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 242
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 815 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 815 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (815) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5000 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5000 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5000) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1165 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1165 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1165) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2252 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2252 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2252) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2338 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2338 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:02:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2338) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:02:51:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:07:28:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:07:28:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2160 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:07:28:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3082,3081,3080,3078,3077,3074,3072,3067,3065,3064) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:07:28:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 22:08:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6331 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:08:55:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6331 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:08:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6331) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:08:55:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6331
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:08:55:
--------------------------------

                    -- У ДТП на Черкащині минулоріч загинуло 113 осіб
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6331
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:08:55:
--------------------------------

                    -- У ДТП на Черкащині минулоріч загинуло 113 осіб
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('минулоріч')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6331
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:08:55:
--------------------------------

                    -- У ДТП на Черкащині минулоріч загинуло 113 осіб
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('загинуло')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6331
                        AND posts.tag_id && ARRAY['5'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:08:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 250 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:08:55:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 250 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:08:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (250) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:08:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:13:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6380 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:13:56:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6380 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:13:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6380) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:13:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6380
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:13:56:
--------------------------------

                    -- Двоє людей провалилися під кригу на Черкащині
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('провалилися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6380
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:13:56:
--------------------------------

                    -- Двоє людей провалилися під кригу на Черкащині
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6380
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:13:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'd860b1ed94308415175422146084349d', '93.158.161.36'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:13:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['12'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:13:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['12'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 330 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:13:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3516,3490,3469,3466,3439,3419,3412,3411,3393,3389) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:13:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a80125dd2d44a0b41058e9bdce0426a0', '77.88.47.79'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:13:59:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2020.01.18 22:13:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['22'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:13:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['22'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 200 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:13:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3119,3087,3082,3064,3061,3006,2944,2826,2800,2796) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:13:59:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '581f97f68de837f6b0146d7d25549918', '5.255.250.12'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:14:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6417 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6417 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6417) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6417
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:00:
--------------------------------

                    -- Студенти ЧДТУ ознайомилися з можливостями працевлаштування на одному з підприємств області
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Студенти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6417
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:00:
--------------------------------

                    -- Студенти ЧДТУ ознайомилися з можливостями працевлаштування на одному з підприємств області
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ознайомилися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6417
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:00:
--------------------------------

                    -- Студенти ЧДТУ ознайомилися з можливостями працевлаштування на одному з підприємств області
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('можливостями')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6417
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:00:
--------------------------------

                    -- Студенти ЧДТУ ознайомилися з можливостями працевлаштування на одному з підприємств області
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('працевлаштування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6417
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:00:
--------------------------------

                    -- Студенти ЧДТУ ознайомилися з можливостями працевлаштування на одному з підприємств області
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('одному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6417
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:01:
--------------------------------

                    -- Студенти ЧДТУ ознайомилися з можливостями працевлаштування на одному з підприємств області
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('підприємств')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6417
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:01:
--------------------------------

                    -- Студенти ЧДТУ ознайомилися з можливостями працевлаштування на одному з підприємств області
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6417
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2781 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:01:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2781 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2781) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'cfa616810c7c7aac113b740c8551027f', '93.158.161.120'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:14:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6146 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6146 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6146) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6146
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:05:
--------------------------------

                    -- Без паніки: наступного місяця черкасці отримають видозмінені платіжки за тепло
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('паніки:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6146
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '18'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:05:
--------------------------------

                    -- Без паніки: наступного місяця черкасці отримають видозмінені платіжки за тепло
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('наступного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6146
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '18'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:05:
--------------------------------

                    -- Без паніки: наступного місяця черкасці отримають видозмінені платіжки за тепло
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('місяця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6146
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '18'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:05:
--------------------------------

                    -- Без паніки: наступного місяця черкасці отримають видозмінені платіжки за тепло
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкасці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6146
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '18'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------

                    -- Без паніки: наступного місяця черкасці отримають видозмінені платіжки за тепло
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('отримають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6146
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '18'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------

                    -- Без паніки: наступного місяця черкасці отримають видозмінені платіжки за тепло
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('видозмінені')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6146
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '18'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------

                    -- Без паніки: наступного місяця черкасці отримають видозмінені платіжки за тепло
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('платіжки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6146
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '18'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2544 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2544 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2544) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2923 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2923 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2923) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6121 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6121 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6121) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1590 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1590 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1590) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1173 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1173 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1173) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '8d9857f30306f67591c2363a789eb639', '141.8.144.12'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:14:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '523294434128c819111602fd870dbc1d', '93.158.161.148'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:14:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2357 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2357 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2357) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 2357
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:07:
--------------------------------

                    -- “Черкаські Мавпи” не потрапили до чвертьфіналу Кубка України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:07:
--------------------------------

                    -- “Черкаські Мавпи” не потрапили до чвертьфіналу Кубка України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Мавпи”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:07:
--------------------------------

                    -- “Черкаські Мавпи” не потрапили до чвертьфіналу Кубка України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('потрапили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:08:
--------------------------------

                    -- “Черкаські Мавпи” не потрапили до чвертьфіналу Кубка України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('чвертьфіналу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:08:
--------------------------------

                    -- “Черкаські Мавпи” не потрапили до чвертьфіналу Кубка України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 122 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 122 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (122) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 390 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 390 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (390) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3783 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3783 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3783) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3750 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3750 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3750) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9c1033d860c02451ac59002c45e427f8', '5.255.250.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:14:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6392 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6392 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:14:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6392) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:19:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6392
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:20:
--------------------------------

                    -- Визначено чотири місця для купанння у Черкасах на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Визначено')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6392
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:20:
--------------------------------

                    -- Визначено чотири місця для купанння у Черкасах на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('чотири')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6392
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:20:
--------------------------------

                    -- Визначено чотири місця для купанння у Черкасах на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('купанння')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6392
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:20:
--------------------------------

                    -- Визначено чотири місця для купанння у Черкасах на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6392
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:20:
--------------------------------

                    -- Визначено чотири місця для купанння у Черкасах на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Водохреща')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6392
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:14:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '961eff7e1130fab6b68e6ed65a65e3c3', '141.8.188.153'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:17:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:17:49:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2090 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:17:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3189,3188,3187,3186,3182,3179,3178,3177,3176,3175) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:17:49:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '08937411134fef27e277581d1e1d11ac', '66.249.72.11'::inet, 'Chrome' );
--------------------------------
2020.01.18 22:18:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f4b8701a53a48cd103a0891d2a43651e', '66.249.72.15'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:18:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5646 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:18:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5646 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:18:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5646) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:18:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5646
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:18:41:
--------------------------------

                    -- На Святвечір на Черкащині згоріли два сараї
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Святвечір')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5646
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '8'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:18:41:
--------------------------------

                    -- На Святвечір на Черкащині згоріли два сараї
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5646
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '8'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:18:41:
--------------------------------

                    -- На Святвечір на Черкащині згоріли два сараї
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('згоріли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5646
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '8'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:18:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c78e640eaf95109f4fa7a7765c3e506b', '37.9.87.191'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:18:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5656 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:18:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5656 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:18:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5656) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:18:59:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5656
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------

                    -- У магазинах міняються назви алкоголю та сирів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('магазинах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5656
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------

                    -- У магазинах міняються назви алкоголю та сирів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('міняються')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5656
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------

                    -- У магазинах міняються назви алкоголю та сирів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('алкоголю')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5656
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5367 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5367 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5367) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5319 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5319 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5319) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2581 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2581 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2581) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4816 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4816 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4816) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6107 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6107 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:19:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6107) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:19:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bff0a5e999e1e63665926d92ec9d051e', '37.9.87.218'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:24:31:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 371
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:31:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Залишилося')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:31:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('дітей:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:31:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('родина')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:31:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('загиблого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:32:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('подружжя')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:32:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:32:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('потребує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:32:
--------------------------------

                    -- Залишилося двоє дітей: родина загиблого в ДТП подружжя черкащан потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('допомоги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 371
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2101 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:24:32:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2101 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:24:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2101) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3429 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:24:32:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3429 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:24:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3429) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:24:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '504088e8b887d47af01ad4262285bd03', '66.249.72.14'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:26:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:26:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2200 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:26:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3007,3006,3005,3004,3003,3001,3000,2997,2995,2993) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:26:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f40df86f26e046059cd99cea957d1e7', '66.249.72.16'::inet, 'Chrome' );
--------------------------------
2020.01.18 22:27:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6371
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:27:51:
--------------------------------

                    -- Боднар шукає керівника для департаменту культури. Бачить його менеджером
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Боднар')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6371
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:27:51:
--------------------------------

                    -- Боднар шукає керівника для департаменту культури. Бачить його менеджером
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('керівника')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6371
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:27:51:
--------------------------------

                    -- Боднар шукає керівника для департаменту культури. Бачить його менеджером
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('департаменту')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6371
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:27:52:
--------------------------------

                    -- Боднар шукає керівника для департаменту культури. Бачить його менеджером
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('культури.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6371
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:27:52:
--------------------------------

                    -- Боднар шукає керівника для департаменту культури. Бачить його менеджером
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Бачить')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6371
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:27:52:
--------------------------------

                    -- Боднар шукає керівника для департаменту культури. Бачить його менеджером
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('менеджером')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6371
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:27:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:32:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5398 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5398 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5398) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5398
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:51:
--------------------------------

                    -- У Христинівці врятували тварину з вигрібної ями
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Христинівці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5398
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:51:
--------------------------------

                    -- У Христинівці врятували тварину з вигрібної ями
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('врятували')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5398
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------

                    -- У Христинівці врятували тварину з вигрібної ями
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('тварину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5398
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------

                    -- У Христинівці врятували тварину з вигрібної ями
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вигрібної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5398
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5482 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5482 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5482) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2469 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2469 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2469) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3266 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 273 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 273 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (273) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 311 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 311 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (311) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bff0a5e999e1e63665926d92ec9d051e', '37.9.87.218'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6376 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6376 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6376) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6376
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:52:
--------------------------------

                    -- «Треба запускати аеропорт, але варто бачити модель, як він працюватиме», – Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('«Треба')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6376
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------

                    -- «Треба запускати аеропорт, але варто бачити модель, як він працюватиме», – Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('запускати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6376
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------

                    -- «Треба запускати аеропорт, але варто бачити модель, як він працюватиме», – Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('аеропорт,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6376
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------

                    -- «Треба запускати аеропорт, але варто бачити модель, як він працюватиме», – Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('бачити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6376
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------

                    -- «Треба запускати аеропорт, але варто бачити модель, як він працюватиме», – Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('модель,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6376
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------

                    -- «Треба запускати аеропорт, але варто бачити модель, як він працюватиме», – Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('працюватиме»,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6376
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------

                    -- «Треба запускати аеропорт, але варто бачити модель, як він працюватиме», – Боднар
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Боднар')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6376
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6201 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6201 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6201) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1746317ceefcdd50c75fc42366e7f6bd', '5.255.250.137'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:32:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4261 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4261 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4261) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:54:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 4261
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:54:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:54:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('увійшли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:54:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('тренерського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:54:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('комітету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:54:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Національної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:55:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Федерації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:55:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Бодібілдігу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:55:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Фітнесу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:55:
--------------------------------

                    -- Двоє черкащан увійшли до тренерського комітету Національної Федерації Бодібілдігу і Фітнесу України
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('України')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4261
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:55:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '00415f62b1fad454f7ecae051f4af7ad', '5.255.250.141'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4320 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4320 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4320) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 4320
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------

                    -- Юних талантів Черкащини нагородять премією
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('талантів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4320
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------

                    -- Юних талантів Черкащини нагородять премією
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4320
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------

                    -- Юних талантів Черкащини нагородять премією
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('нагородять')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4320
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------

                    -- Юних талантів Черкащини нагородять премією
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('премією')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4320
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 416 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 416 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (416) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3795 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3795 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3795) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5824 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5824 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5824) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 683 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 683 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (683) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3789 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3789 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3789) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '7331f44e53f80e6d8fac75cbfefa4af4', '5.255.250.6'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:32:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1dc54660daa698a764ee7e8f336e3384', '100.43.90.120'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:32:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6412 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6412 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:32:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6412) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:59:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6412
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:59:
--------------------------------

                    -- Киньте гріш Кучерові, або “рогаті” вимагателі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Киньте')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6412
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:59:
--------------------------------

                    -- Киньте гріш Кучерові, або “рогаті” вимагателі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Кучерові,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6412
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:32:59:
--------------------------------

                    -- Киньте гріш Кучерові, або “рогаті” вимагателі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“рогаті”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6412
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:00:
--------------------------------

                    -- Киньте гріш Кучерові, або “рогаті” вимагателі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вимагателі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6412
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3369 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3369 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3369) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2514 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2514 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2514) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '59b0e61fd3c88b1301b17a690ec1f504', '93.158.166.128'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:33:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5765 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5765 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5765) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:04:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5765
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:05:
--------------------------------

                    -- Черкаська студента увійшла до ряду кращих спортсменів міста за підсумками 2019 року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаська')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5765
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:05:
--------------------------------

                    -- Черкаська студента увійшла до ряду кращих спортсменів міста за підсумками 2019 року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('студента')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5765
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:05:
--------------------------------

                    -- Черкаська студента увійшла до ряду кращих спортсменів міста за підсумками 2019 року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('увійшла')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5765
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:05:
--------------------------------

                    -- Черкаська студента увійшла до ряду кращих спортсменів міста за підсумками 2019 року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кращих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5765
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:05:
--------------------------------

                    -- Черкаська студента увійшла до ряду кращих спортсменів міста за підсумками 2019 року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('спортсменів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5765
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:05:
--------------------------------

                    -- Черкаська студента увійшла до ряду кращих спортсменів міста за підсумками 2019 року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('підсумками')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5765
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4dd8d9a04dd6e27c335671602d349712', '93.158.161.26'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:33:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6036 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:18:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6036 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6036) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6036
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:18:
--------------------------------

                    -- Новорічна ялинка у мера об’єднала всіх малюків громади
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Новорічна')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6036
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:18:
--------------------------------

                    -- Новорічна ялинка у мера об’єднала всіх малюків громади
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ялинка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6036
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:18:
--------------------------------

                    -- Новорічна ялинка у мера об’єднала всіх малюків громади
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('об’єднала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6036
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:18:
--------------------------------

                    -- Новорічна ялинка у мера об’єднала всіх малюків громади
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('малюків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6036
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:19:
--------------------------------

                    -- Новорічна ялинка у мера об’єднала всіх малюків громади
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('громади')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6036
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4585 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4585 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4585) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3950 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3950 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3950) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3955 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3955 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3955) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5049 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5049 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5049) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4101 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4101 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:19:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4101) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a80125dd2d44a0b41058e9bdce0426a0', '77.88.47.79'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:33:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['7'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:20:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['7'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 260 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:33:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6180,6178,6177,6176,6174,6172,6171,6169,6168,6167) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:33:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '581f97f68de837f6b0146d7d25549918', '5.255.250.12'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:35:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:35:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2180 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:35:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3048,3047,3046,3044,3043,3042,3038,3037,3036,3030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:35:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '08937411134fef27e277581d1e1d11ac', '66.249.72.11'::inet, 'Chrome' );
--------------------------------
2020.01.18 22:37:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1524f53c3461c001c7212a774f13f462', '66.249.72.11'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:45:20:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:45:20:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2070 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:45:20:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3217,3216,3215,3214,3212,3211,3209,3207,3205,3204) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:45:20:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f40df86f26e046059cd99cea957d1e7', '66.249.72.16'::inet, 'Chrome' );
--------------------------------
2020.01.18 22:46:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5695 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5695 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5695) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5695
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------

                    -- Взято під варту чоловіка, який насмерть збив дитину
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('чоловіка,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5695
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------

                    -- Взято під варту чоловіка, який насмерть збив дитину
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('насмерть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5695
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------

                    -- Взято під варту чоловіка, який насмерть збив дитину
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('дитину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5695
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5051 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5051 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5051) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5064 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5064 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5064) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5174 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5174 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:51:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5174) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:51:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1746317ceefcdd50c75fc42366e7f6bd', '5.255.250.137'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:54:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:54:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2190 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:54:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3028,3026,3023,3022,3021,3016,3014,3012,3011,3009) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:54:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 22:55:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1907 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1907 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1907) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:40:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 1907
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:40:
--------------------------------

                    -- 20 років афери: черкаський мер підписав “вигідний” договір із “Новою якістю”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('афери:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1907
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:40:
--------------------------------

                    -- 20 років афери: черкаський мер підписав “вигідний” договір із “Новою якістю”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1907
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:40:
--------------------------------

                    -- 20 років афери: черкаський мер підписав “вигідний” договір із “Новою якістю”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('підписав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1907
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:40:
--------------------------------

                    -- 20 років афери: черкаський мер підписав “вигідний” договір із “Новою якістю”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“вигідний”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1907
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:41:
--------------------------------

                    -- 20 років афери: черкаський мер підписав “вигідний” договір із “Новою якістю”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('договір')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1907
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:41:
--------------------------------

                    -- 20 років афери: черкаський мер підписав “вигідний” договір із “Новою якістю”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“Новою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1907
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:41:
--------------------------------

                    -- 20 років афери: черкаський мер підписав “вигідний” договір із “Новою якістю”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('якістю”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1907
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5330 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5330 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5330) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1314 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1314 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1314) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1312 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1312 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:55:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1312) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:55:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '3f6c48de04f7f8f5d09c14853d7d699c', '141.8.143.139'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:56:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6357 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:15:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6357 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6357) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6357
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:15:
--------------------------------

                    -- Добудувати аеропорт не проблема, потрібно, щоб він був рентабельним, — голова ОДА
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Добудувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '8'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:15:
--------------------------------

                    -- Добудувати аеропорт не проблема, потрібно, щоб він був рентабельним, — голова ОДА
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('аеропорт')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '8'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:15:
--------------------------------

                    -- Добудувати аеропорт не проблема, потрібно, щоб він був рентабельним, — голова ОДА
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('проблема,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '8'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------

                    -- Добудувати аеропорт не проблема, потрібно, щоб він був рентабельним, — голова ОДА
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('потрібно,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '8'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------

                    -- Добудувати аеропорт не проблема, потрібно, щоб він був рентабельним, — голова ОДА
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('рентабельним,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '8'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------

                    -- Добудувати аеропорт не проблема, потрібно, щоб він був рентабельним, — голова ОДА
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('голова')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6357
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '8'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6344 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6344 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6344) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3880 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3880 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3880) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1765 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1765 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1765) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 653 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 653 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (653) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '504088e8b887d47af01ad4262285bd03', '66.249.72.14'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 22:56:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 733 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 733 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (733) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:30:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 733
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------

                    -- Черкащанин урятував лебедя, підстреленого браконьєрами
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащанин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 733
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '15'::int8, '19'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------

                    -- Черкащанин урятував лебедя, підстреленого браконьєрами
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('урятував')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 733
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '15'::int8, '19'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------

                    -- Черкащанин урятував лебедя, підстреленого браконьєрами
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('лебедя,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 733
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '15'::int8, '19'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------

                    -- Черкащанин урятував лебедя, підстреленого браконьєрами
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('підстреленого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 733
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '15'::int8, '19'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------

                    -- Черкащанин урятував лебедя, підстреленого браконьєрами
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('браконьєрами')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 733
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '15'::int8, '19'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3692 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3692 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3692) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3863 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3863 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3863) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4392 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4392 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4392) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3433 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3433 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3433) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 385 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 385 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:56:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (385) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:56:31:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a9e3463685fe521d7a8ae45776b1b159', '37.9.87.213'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 22:57:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:57:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 0 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 22:57:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6596,6595,6594,6593,6592,6591,6590,6589,6588,6587) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 22:57:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '9a2df303831d31c23c126f4565dfc697', '212.103.50.77'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:00:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 713 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:00:02:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 713 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:00:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (713) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 713
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:02:
--------------------------------

                    -- Співаки з Черкащини отримали нагороди на Всеукраїнському фестивалі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Співаки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 713
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:02:
--------------------------------

                    -- Співаки з Черкащини отримали нагороди на Всеукраїнському фестивалі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 713
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:02:
--------------------------------

                    -- Співаки з Черкащини отримали нагороди на Всеукраїнському фестивалі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('отримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 713
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:02:
--------------------------------

                    -- Співаки з Черкащини отримали нагороди на Всеукраїнському фестивалі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('нагороди')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 713
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:03:
--------------------------------

                    -- Співаки з Черкащини отримали нагороди на Всеукраїнському фестивалі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Всеукраїнському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 713
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:03:
--------------------------------

                    -- Співаки з Черкащини отримали нагороди на Всеукраїнському фестивалі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('фестивалі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 713
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3802 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:00:03:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3802 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:00:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3802) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:00:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a9e3463685fe521d7a8ae45776b1b159', '37.9.87.213'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:00:03:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2020.01.18 23:00:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:04:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:04:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2050 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:04:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3247,3244,3243,3242,3240,3239,3238,3237,3236,3234) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:04:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5c9681a98daa62cb4af0e2c5a281cf64', '66.249.72.13'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:05:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6433 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6433 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6433) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:43:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6433
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:43:
--------------------------------

                    -- Без мінімального замовлення та з актуальним меню: черкащанам розповіли про права відвідувачів ресторанів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('мінімального')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6433
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:43:
--------------------------------

                    -- Без мінімального замовлення та з актуальним меню: черкащанам розповіли про права відвідувачів ресторанів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('замовлення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6433
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:43:
--------------------------------

                    -- Без мінімального замовлення та з актуальним меню: черкащанам розповіли про права відвідувачів ресторанів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('актуальним')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6433
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------

                    -- Без мінімального замовлення та з актуальним меню: черкащанам розповіли про права відвідувачів ресторанів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкащанам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6433
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------

                    -- Без мінімального замовлення та з актуальним меню: черкащанам розповіли про права відвідувачів ресторанів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6433
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------

                    -- Без мінімального замовлення та з актуальним меню: черкащанам розповіли про права відвідувачів ресторанів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відвідувачів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6433
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------

                    -- Без мінімального замовлення та з актуальним меню: черкащанам розповіли про права відвідувачів ресторанів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ресторанів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6433
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3405 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3405 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3405) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2531 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2531 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2531) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 27 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 27 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (27) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3907 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3907 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3907) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5138 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5138 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:05:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5138) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:05:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '10c88a023563d8b9f5aa0c19851615ee', '66.249.72.13'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 23:10:09:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['10'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:10:09:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['10'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:10:09:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5999,5995,5990,5987,5985,5979,5975,5941,5936,5935) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:10:09:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'eb1b01914a20b9ed6cc6eaf9728e4ba9', '93.158.161.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:10:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6086 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:10:46:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6086 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:10:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6086) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:10:46:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6086
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:10:46:
--------------------------------

                    -- На Черкащині порахують диких тварин
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6086
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:10:46:
--------------------------------

                    -- На Черкащині порахують диких тварин
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('порахують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6086
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:10:46:
--------------------------------

                    -- На Черкащині порахують диких тварин
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('тварин')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6086
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:10:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:12:18:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2205 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:12:18:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2205 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:12:18:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2205) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 2205
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------

                    -- У Раді не вщухає скандал довкола персони черкаського мажоритарника
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вщухає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2205
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------

                    -- У Раді не вщухає скандал довкола персони черкаського мажоритарника
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('скандал')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2205
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------

                    -- У Раді не вщухає скандал довкола персони черкаського мажоритарника
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('довкола')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2205
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------

                    -- У Раді не вщухає скандал довкола персони черкаського мажоритарника
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('персони')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2205
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------

                    -- У Раді не вщухає скандал довкола персони черкаського мажоритарника
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкаського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2205
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------

                    -- У Раді не вщухає скандал довкола персони черкаського мажоритарника
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('мажоритарника')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2205
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:12:18:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:13:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:13:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2140 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:13:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3107,3105,3103,3102,3101,3099,3098,3097,3096,3095) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:13:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6304 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6304 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6304) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6304
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------

                    -- На Черкащині продукти подешевшали, а от алкоголь виріс в ціні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6304
                        AND posts.tag_id && ARRAY['9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------

                    -- На Черкащині продукти подешевшали, а от алкоголь виріс в ціні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('продукти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6304
                        AND posts.tag_id && ARRAY['9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------

                    -- На Черкащині продукти подешевшали, а от алкоголь виріс в ціні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('подешевшали,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6304
                        AND posts.tag_id && ARRAY['9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------

                    -- На Черкащині продукти подешевшали, а от алкоголь виріс в ціні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('алкоголь')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6304
                        AND posts.tag_id && ARRAY['9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1795 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1795 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1795) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1728 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1728 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:15:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1728) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:15:11:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 23:16:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6204 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:49:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6204 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6204) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:49:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6204
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:49:
--------------------------------

                    -- Канів у десятці інвестиційно привабливих громад
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('десятці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6204
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:49:
--------------------------------

                    -- Канів у десятці інвестиційно привабливих громад
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('інвестиційно')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6204
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:50:
--------------------------------

                    -- Канів у десятці інвестиційно привабливих громад
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('привабливих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6204
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:50:
--------------------------------

                    -- Канів у десятці інвестиційно привабливих громад
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('громад')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6204
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4353 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4353 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4353) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3499 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3499 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3499) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5347 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5347 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5347) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6517 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6517 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:16:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6517) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:16:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:23:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:23:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2280 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:23:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2879,2877,2876,2873,2869,2865,2862,2861,2858,2856) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:23:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f40df86f26e046059cd99cea957d1e7', '66.249.72.16'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:24:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6405 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:39:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6405 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6405) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6405
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:39:
--------------------------------

                    -- Завтра на черкащан впливатиме антициклон з Румунії
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Завтра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6405
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:39:
--------------------------------

                    -- Завтра на черкащан впливатиме антициклон з Румунії
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6405
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:39:
--------------------------------

                    -- Завтра на черкащан впливатиме антициклон з Румунії
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('впливатиме')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6405
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:40:
--------------------------------

                    -- Завтра на черкащан впливатиме антициклон з Румунії
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('антициклон')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6405
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:40:
--------------------------------

                    -- Завтра на черкащан впливатиме антициклон з Румунії
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Румунії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6405
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1208 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1208 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1208) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1313 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1313 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1313) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6251 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6251 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6251) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3033 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3033 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:24:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3033) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:24:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '504088e8b887d47af01ad4262285bd03', '66.249.72.14'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6145 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6145 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6145) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6145
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------

                    -- За добу в області на пожежах загинули дві особи
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6145
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------

                    -- За добу в області на пожежах загинули дві особи
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пожежах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6145
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------

                    -- За добу в області на пожежах загинули дві особи
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('загинули')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6145
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2354 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2354 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2354) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1769 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1769 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1769) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1793 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1793 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1793) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5889 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5889 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5889) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5887 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5887 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5887) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:29:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:29:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['12'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['12'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 40 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:29:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6168,6167,6162,6149,6143,6131,6129,6113,6110,6107) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:29:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:30:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6389 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:03:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6389 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6389) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:03:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6389
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:03:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:03:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сільський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:03:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('голова')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:03:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розтратив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:03:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('чверть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:03:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('мільйона')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('бюджетних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('коштів,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('поремонтувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('будинок')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------

                    -- На Черкащині сільський голова розтратив чверть мільйона бюджетних коштів, за які мав поремонтувати будинок культури
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('культури')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6389
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2457 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2457 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2457) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1162 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1162 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1162) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:30:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6339 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6339 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6339) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:05:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6339
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:05:
--------------------------------

                    -- Черкаський тренер і спортсмен потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6339
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:06:
--------------------------------

                    -- Черкаський тренер і спортсмен потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('тренер')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6339
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:06:
--------------------------------

                    -- Черкаський тренер і спортсмен потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('спортсмен')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6339
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:06:
--------------------------------

                    -- Черкаський тренер і спортсмен потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('потребує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6339
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:06:
--------------------------------

                    -- Черкаський тренер і спортсмен потребує допомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('допомоги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6339
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:06:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:30:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 420 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5890,5889,5888,5887,5886,5885,5884,5883,5880,5879) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:30:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 360 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5880,5879,5877,5876,5875,5874,5873,5872,5870,5868) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:30:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 180 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5565,5563,5560,5558,5556,5553,5550,5545,5538,5531) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:17:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:30:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 493 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 493 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (493) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:52:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 493
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:52:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:52:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('запрошують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:52:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відвідати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:52:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('прем’єру')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:52:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('музичної')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вистави')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('«Балада')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------

                    -- Черкащан запрошують відвідати прем’єру музичної вистави «Балада про любов»
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('любов»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 493
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1918 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1918 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1918) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1286 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1286 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1286) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4346 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4346 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4346) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 473 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 473 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:30:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (473) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:30:53:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:31:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 300 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5781,5779,5777,5776,5775,5774,5770,5763,5757,5741) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:31:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6375 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:26:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6375 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6375) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6375
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:26:
--------------------------------

                    -- Хотів погратися м’ячем: на Уманщині юнак провалився під тонку кригу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('погратися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6375
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:27:
--------------------------------

                    -- Хотів погратися м’ячем: на Уманщині юнак провалився під тонку кригу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('м’ячем:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6375
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:27:
--------------------------------

                    -- Хотів погратися м’ячем: на Уманщині юнак провалився під тонку кригу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Уманщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6375
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:27:
--------------------------------

                    -- Хотів погратися м’ячем: на Уманщині юнак провалився під тонку кригу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('провалився')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6375
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4523 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4523 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4523) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1061 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1061 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1061) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5167 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5167 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:31:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5167) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:31:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:32:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:32:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2220 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:32:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2976,2975,2974,2973,2970,2969,2968,2967,2966,2965) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:32:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c5fa834f809b8e89f0818b5a8ffff300', '66.249.72.14'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:34:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6307 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6307 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6307) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6307
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:07:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Розмовляти')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:07:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('руками:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('єдиний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Золотоніщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('спеціаліст')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сурдоперекладу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('працює')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('центрі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------

                    -- Розмовляти руками: єдиний на Золотоніщині спеціаліст із сурдоперекладу працює в центрі соцдопомоги
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('соцдопомоги')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6307
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 932 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 932 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (932) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1290 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1290 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1290) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3463 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3463 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3463) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3447 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3447 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3447) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2628 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2628 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:34:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2628) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:34:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '14d446d6132dbbb250b359eb955cd0df', '66.249.72.16'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 23:42:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:42:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2210 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:42:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2992,2991,2990,2988,2987,2986,2983,2980,2978,2977) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:42:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6415 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6415 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6415) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6415
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

                    -- До сотні безробітних: у Канівській лікарні плануються суттєві скорочення персоналу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('безробітних:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6415
                        AND posts.tag_id && ARRAY['0'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

                    -- До сотні безробітних: у Канівській лікарні плануються суттєві скорочення персоналу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Канівській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6415
                        AND posts.tag_id && ARRAY['0'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

                    -- До сотні безробітних: у Канівській лікарні плануються суттєві скорочення персоналу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('лікарні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6415
                        AND posts.tag_id && ARRAY['0'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

                    -- До сотні безробітних: у Канівській лікарні плануються суттєві скорочення персоналу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('плануються')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6415
                        AND posts.tag_id && ARRAY['0'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

                    -- До сотні безробітних: у Канівській лікарні плануються суттєві скорочення персоналу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('суттєві')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6415
                        AND posts.tag_id && ARRAY['0'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

                    -- До сотні безробітних: у Канівській лікарні плануються суттєві скорочення персоналу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('скорочення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6415
                        AND posts.tag_id && ARRAY['0'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------

                    -- До сотні безробітних: у Канівській лікарні плануються суттєві скорочення персоналу
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('персоналу')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6415
                        AND posts.tag_id && ARRAY['0'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2982 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2982 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2982) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6179 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6179 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6179) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1535 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1535 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1535) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 941 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 941 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:43:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (941) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:43:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '14d446d6132dbbb250b359eb955cd0df', '66.249.72.16'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 23:50:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['4'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:50:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['4'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 110 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:50:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6398,6397,6396,6395,6394,6392,6391,6386,6385,6384) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:50:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5803 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:50:26:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5803 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:50:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5803) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5803
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:27:
--------------------------------

                    -- На Черкащині через коротке замикання мало не згорів автокооператив
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5803
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:27:
--------------------------------

                    -- На Черкащині через коротке замикання мало не згорів автокооператив
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('коротке')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5803
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:27:
--------------------------------

                    -- На Черкащині через коротке замикання мало не згорів автокооператив
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('замикання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5803
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:27:
--------------------------------

                    -- На Черкащині через коротке замикання мало не згорів автокооператив
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('згорів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5803
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:27:
--------------------------------

                    -- На Черкащині через коротке замикання мало не згорів автокооператив
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('автокооператив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5803
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:50:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['10'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:50:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['10'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 110 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:50:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5842,5839,5829,5828,5804,5799,5791,5790,5789,5778) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:50:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.18 23:51:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:51:36:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2230 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:51:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2964,2961,2960,2959,2958,2957,2953,2952,2950,2948) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:51:36:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '660ba6fd041321426c8520f9c03cb94e', '66.249.72.12'::inet, 'Chrome' );
--------------------------------
2020.01.18 23:53:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6394 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:03:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6394 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6394) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:03:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6394
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:03:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('фактом')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:03:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('загинув')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('директор')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкаської')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('школи,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відкрито')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розслідується')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кримінальне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------

                    -- За фактом ДТП, у якій загинув директор черкаської школи, відкрито та розслідується кримінальне провадження
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('провадження')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6394
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5266 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5266 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5266) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 897 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 897 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (897) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 813 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 813 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (813) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4153 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4153 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4153) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 787 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 787 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:53:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (787) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:53:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '504088e8b887d47af01ad4262285bd03', '66.249.72.14'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.18 23:56:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:56:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 90 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.18 23:56:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6133,6132,6131,6129,6128,6121,6117,6111,6107,6106) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.18 23:56:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:01:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:01:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2240 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:01:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2946,2945,2944,2943,2942,2941,2939,2938,2937,2936) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:01:04:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5c9681a98daa62cb4af0e2c5a281cf64', '66.249.72.13'::inet, 'Chrome' );
--------------------------------
2020.01.19 00:01:04:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2020.01.19 00:02:31:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6422 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:02:31:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6422 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:02:31:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6422) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:02:31:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6422
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:02:31:
--------------------------------

                    -- У Черкасах встановили 80 майданчиків для негабариту. До весни мають облаштувати решту
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6422
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:02:31:
--------------------------------

                    -- У Черкасах встановили 80 майданчиків для негабариту. До весни мають облаштувати решту
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('встановили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6422
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:02:31:
--------------------------------

                    -- У Черкасах встановили 80 майданчиків для негабариту. До весни мають облаштувати решту
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('майданчиків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6422
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:02:32:
--------------------------------

                    -- У Черкасах встановили 80 майданчиків для негабариту. До весни мають облаштувати решту
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('негабариту.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6422
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:02:32:
--------------------------------

                    -- У Черкасах встановили 80 майданчиків для негабариту. До весни мають облаштувати решту
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('облаштувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6422
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:02:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '10c88a023563d8b9f5aa0c19851615ee', '66.249.72.13'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 00:10:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:10:32:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2260 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:10:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2914,2913,2912,2911,2909,2907,2906,2905,2904,2902) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:10:32:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c5fa834f809b8e89f0818b5a8ffff300', '66.249.72.14'::inet, 'Chrome' );
--------------------------------
2020.01.19 00:11:59:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6404 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:11:59:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6404 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:11:59:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6404) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:11:59:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6404
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:11:59:
--------------------------------

                    -- У Золотоноші жінка покінчила із життям повісившись на шафі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Золотоноші')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6404
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '8'::int8, '10'::int8, '12'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:11:59:
--------------------------------

                    -- У Золотоноші жінка покінчила із життям повісившись на шафі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('покінчила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6404
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '8'::int8, '10'::int8, '12'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:11:59:
--------------------------------

                    -- У Золотоноші жінка покінчила із життям повісившись на шафі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('життям')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6404
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '8'::int8, '10'::int8, '12'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:12:00:
--------------------------------

                    -- У Золотоноші жінка покінчила із життям повісившись на шафі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('повісившись')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6404
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '8'::int8, '10'::int8, '12'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4753 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4753 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4753) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 290 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 290 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (290) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1822 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1822 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1822) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2668 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2668 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2668) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4431 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4431 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:12:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4431) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:12:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '14d446d6132dbbb250b359eb955cd0df', '66.249.72.16'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6092 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6092 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6092) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6092
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------

                    -- Божена та Абубакр: як на Сміланщині незвично дітей називали
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Божена')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6092
                        AND posts.tag_id && ARRAY['6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------

                    -- Божена та Абубакр: як на Сміланщині незвично дітей називали
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Абубакр:')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6092
                        AND posts.tag_id && ARRAY['6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------

                    -- Божена та Абубакр: як на Сміланщині незвично дітей називали
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Сміланщині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6092
                        AND posts.tag_id && ARRAY['6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------

                    -- Божена та Абубакр: як на Сміланщині незвично дітей називали
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('незвично')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6092
                        AND posts.tag_id && ARRAY['6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------

                    -- Божена та Абубакр: як на Сміланщині незвично дітей називали
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('називали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6092
                        AND posts.tag_id && ARRAY['6'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5457 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5457 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5457) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5874 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5874 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5874) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4045 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4045 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4045) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5945 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5945 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:10:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5945) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:10:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4ef7f6938629abac435167d8487edb70', '37.9.87.161'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:13:13:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6397 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:13:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6397 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:13:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6397) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:13:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6397
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:13:
--------------------------------

                    -- Депутатський та громадський актив Чорнобаївщини ініціює створення в районі однієї ОТГ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Депутатський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6397
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------

                    -- Депутатський та громадський актив Чорнобаївщини ініціює створення в районі однієї ОТГ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('громадський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6397
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------

                    -- Депутатський та громадський актив Чорнобаївщини ініціює створення в районі однієї ОТГ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Чорнобаївщини')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6397
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------

                    -- Депутатський та громадський актив Чорнобаївщини ініціює створення в районі однієї ОТГ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ініціює')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6397
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------

                    -- Депутатський та громадський актив Чорнобаївщини ініціює створення в районі однієї ОТГ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('створення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6397
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------

                    -- Депутатський та громадський актив Чорнобаївщини ініціює створення в районі однієї ОТГ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('районі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6397
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------

                    -- Депутатський та громадський актив Чорнобаївщини ініціює створення в районі однієї ОТГ
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('однієї')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6397
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3963 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3963 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3963) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4488 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4488 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4488) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1379 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1379 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1379) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5740 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5740 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5740) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5570 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5570 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5570) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:14:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '59b0e61fd3c88b1301b17a690ec1f504', '93.158.166.128'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:13:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6368 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:26:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6368 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6368) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6368
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:26:
--------------------------------

                    -- «Черкасиводоканал» отримав позику Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('«Черкасиводоканал»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6368
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------

                    -- «Черкасиводоканал» отримав позику Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('отримав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6368
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------

                    -- «Черкасиводоканал» отримав позику Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('позику')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6368
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------

                    -- «Черкасиводоканал» отримав позику Світового Банку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Світового')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6368
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5703 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5703 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5703) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5696 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5696 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5696) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5694 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5694 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5694) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5701 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5701 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5701) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4126 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4126 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4126) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4dd8d9a04dd6e27c335671602d349712', '93.158.161.26'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:13:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 600 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:13:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5996,5995,5994,5993,5992,5991,5990,5989,5988,5987) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:13:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'd860b1ed94308415175422146084349d', '93.158.161.36'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:14:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['7'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:14:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['7'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 300 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:14:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6121,6119,6118,6117,6115,6114,6111,6110,6109,6108) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:14:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '581f97f68de837f6b0146d7d25549918', '5.255.250.12'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:20:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:20:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['6'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 2270 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:20:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2900,2898,2896,2894,2889,2888,2887,2884,2883,2882) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:20:00:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b09ade9397bfb2c5d690a9da7f816588', '66.249.72.15'::inet, 'Chrome' );
--------------------------------
2020.01.19 00:21:27:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6350 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:21:27:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6350 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:21:27:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6350) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:27:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6350
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:27:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пішохідному')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('переході,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відвіз')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('додому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('грошей,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('претензій.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('шукають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------

                    -- Збив на пішохідному переході, відвіз додому і дав грошей, щоб не було претензій. В Черкасах шукають свідків ДТП
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('свідків')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6350
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:21:28:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1524f53c3461c001c7212a774f13f462', '66.249.72.11'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 00:30:55:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6396 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:55:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6396 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:55:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6396) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:55:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6396
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:55:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:55:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('прокуратура')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:56:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('повідомила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:56:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сільському')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:56:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('голові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:56:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('підозру')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:56:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розтраті')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:56:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('коштів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:56:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('місцевого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:57:
--------------------------------

                    -- На Черкащині прокуратура повідомила сільському голові про підозру в розтраті коштів місцевого бюджету
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('бюджету')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6396
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4185 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4185 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4185) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3223 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3223 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3223) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5208 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5208 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5208) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1501 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1501 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1501) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2937 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2937 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:30:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2937) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:30:57:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f4b8701a53a48cd103a0891d2a43651e', '66.249.72.15'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 00:31:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6208 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6208 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6208) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6208
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:51:
--------------------------------

                    -- Обласний краєзнавчий музей запроваджує еко традиції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Обласний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6208
                        AND posts.tag_id && ARRAY['5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:51:
--------------------------------

                    -- Обласний краєзнавчий музей запроваджує еко традиції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('краєзнавчий')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6208
                        AND posts.tag_id && ARRAY['5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:51:
--------------------------------

                    -- Обласний краєзнавчий музей запроваджує еко традиції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('запроваджує')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6208
                        AND posts.tag_id && ARRAY['5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:52:
--------------------------------

                    -- Обласний краєзнавчий музей запроваджує еко традиції
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('традиції')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6208
                        AND posts.tag_id && ARRAY['5'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 512 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 512 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (512) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1929 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1929 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1929) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 518 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 518 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (518) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 281 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 281 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (281) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 510 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 510 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:31:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (510) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:31:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b09ade9397bfb2c5d690a9da7f816588', '66.249.72.15'::inet, 'Chrome' );
--------------------------------
2020.01.19 00:33:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3535 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:33:47:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3535 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:33:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3535) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:33:47:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3535
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:33:47:
--------------------------------

                    -- На Черкащині продовжують зариблювати Кременчуцьке водосховище
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3535
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:33:47:
--------------------------------

                    -- На Черкащині продовжують зариблювати Кременчуцьке водосховище
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('продовжують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3535
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:33:47:
--------------------------------

                    -- На Черкащині продовжують зариблювати Кременчуцьке водосховище
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('зариблювати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3535
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:33:47:
--------------------------------

                    -- На Черкащині продовжують зариблювати Кременчуцьке водосховище
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Кременчуцьке')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3535
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:33:47:
--------------------------------

                    -- На Черкащині продовжують зариблювати Кременчуцьке водосховище
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('водосховище')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3535
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:33:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:34:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4425 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4425 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4425) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:16:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 4425
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:16:
--------------------------------

                    -- Уманські поліцейські вилучили вантажівку з перебитим номером кузова
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Уманські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4425
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:16:
--------------------------------

                    -- Уманські поліцейські вилучили вантажівку з перебитим номером кузова
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('поліцейські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4425
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:16:
--------------------------------

                    -- Уманські поліцейські вилучили вантажівку з перебитим номером кузова
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вилучили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4425
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:16:
--------------------------------

                    -- Уманські поліцейські вилучили вантажівку з перебитим номером кузова
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вантажівку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4425
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:16:
--------------------------------

                    -- Уманські поліцейські вилучили вантажівку з перебитим номером кузова
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('перебитим')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4425
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:16:
--------------------------------

                    -- Уманські поліцейські вилучили вантажівку з перебитим номером кузова
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('номером')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4425
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:17:
--------------------------------

                    -- Уманські поліцейські вилучили вантажівку з перебитим номером кузова
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кузова')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4425
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8, '19'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 259 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 259 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (259) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4595 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4595 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4595) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2271 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2271 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2271) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 884 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 884 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (884) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:17:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:34:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['3'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:22:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['3'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 450 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4398,4396,4394,4391,4390,4389,4387,4382,4375,4368) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e9b1db0260c66a4a575b68af22519007', '100.43.90.103'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:34:35:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:35:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 170 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:35:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5935,5931,5920,5918,5916,5914,5911,5904,5896,5895) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c78e640eaf95109f4fa7a7765c3e506b', '37.9.87.191'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:34:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['12'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:46:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['12'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 400 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:34:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2678,2674,2667,2657,2654,2649,2646,2645,2643,2628) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:34:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f158168f300d5791c305d8925e9a0fc', '141.8.143.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:35:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['4'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:35:21:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['4'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 250 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:35:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6167,6166,6165,6164,6160,6159,6156,6155,6154,6153) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:35:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4b13d20b6e8a1381c539d809bc3aba9c', '5.255.250.7'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:36:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6139 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:36:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6139 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:36:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6139) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6139
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------

                    -- У Черкаській міськраді поменшало прихильників Порошенка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6139
                        AND posts.tag_id && ARRAY['4'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------

                    -- У Черкаській міськраді поменшало прихильників Порошенка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('міськраді')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6139
                        AND posts.tag_id && ARRAY['4'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------

                    -- У Черкаській міськраді поменшало прихильників Порошенка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('поменшало')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6139
                        AND posts.tag_id && ARRAY['4'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------

                    -- У Черкаській міськраді поменшало прихильників Порошенка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('прихильників')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6139
                        AND posts.tag_id && ARRAY['4'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------

                    -- У Черкаській міськраді поменшало прихильників Порошенка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Порошенка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6139
                        AND posts.tag_id && ARRAY['4'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3424 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:36:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3424 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:36:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3424) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c278de52da42d2dd6d495bc7c1d6ecde', '100.43.90.165'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:36:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '523294434128c819111602fd870dbc1d', '93.158.161.148'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:36:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6056 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:36:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6056 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:36:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6056) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6056
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:41:
--------------------------------

                    -- У Черкасах авто врізалося в електроопору. Водій залишив машину і зник
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6056
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:42:
--------------------------------

                    -- У Черкасах авто врізалося в електроопору. Водій залишив машину і зник
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('врізалося')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6056
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:42:
--------------------------------

                    -- У Черкасах авто врізалося в електроопору. Водій залишив машину і зник
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('електроопору.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6056
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:42:
--------------------------------

                    -- У Черкасах авто врізалося в електроопору. Водій залишив машину і зник
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('залишив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6056
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:42:
--------------------------------

                    -- У Черкасах авто врізалося в електроопору. Водій залишив машину і зник
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('машину')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6056
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:36:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1746317ceefcdd50c75fc42366e7f6bd', '5.255.250.137'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:37:01:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['18'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:37:01:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['18'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 250 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:37:01:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (147,143,142,141,96,94,18) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:37:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '00415f62b1fad454f7ecae051f4af7ad', '5.255.250.141'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:40:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '14d446d6132dbbb250b359eb955cd0df', '66.249.72.16'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 00:40:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4459 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:40:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4459 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:40:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4459) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:40:30:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 4459
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:40:31:
--------------------------------

                    -- У парку в Черкасах покрали саджанці сосен
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4459
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:40:31:
--------------------------------

                    -- У парку в Черкасах покрали саджанці сосен
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('покрали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4459
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:40:31:
--------------------------------

                    -- У парку в Черкасах покрали саджанці сосен
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('саджанці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4459
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:40:31:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '581f97f68de837f6b0146d7d25549918', '5.255.250.12'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:49:51:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6401 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:51:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6401 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:51:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6401) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:51:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6401
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:51:
--------------------------------

                    -- Перший заступник мера Умані Сергій Клочко віджимає перукарню в уманчан
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Перший')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6401
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------

                    -- Перший заступник мера Умані Сергій Клочко віджимає перукарню в уманчан
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('заступник')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6401
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------

                    -- Перший заступник мера Умані Сергій Клочко віджимає перукарню в уманчан
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Сергій')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6401
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------

                    -- Перший заступник мера Умані Сергій Клочко віджимає перукарню в уманчан
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Клочко')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6401
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------

                    -- Перший заступник мера Умані Сергій Клочко віджимає перукарню в уманчан
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('віджимає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6401
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------

                    -- Перший заступник мера Умані Сергій Клочко віджимає перукарню в уманчан
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('перукарню')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6401
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------

                    -- Перший заступник мера Умані Сергій Клочко віджимає перукарню в уманчан
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('уманчан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6401
                        AND posts.tag_id && ARRAY['6'::int8, '7'::int8, '18'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6491 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6491 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6491) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6500 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6500 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6500) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2526 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2526 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2526) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3465 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3465 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:49:52:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3465) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:49:52:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 00:53:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:53:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['8'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 210 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:53:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5798,5794,5792,5788,5783,5782,5780,5779,5777,5775) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b30063160b5b5fcde0234cb6514e529', '100.43.90.126'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:53:56:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5548 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:53:56:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5548 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:53:56:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5548) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:56:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5548
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:56:
--------------------------------

                    -- Черкаський центр «Інваспорт» відзначив кращих спортсменів року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаський')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5548
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:56:
--------------------------------

                    -- Черкаський центр «Інваспорт» відзначив кращих спортсменів року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('«Інваспорт»')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5548
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:56:
--------------------------------

                    -- Черкаський центр «Інваспорт» відзначив кращих спортсменів року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відзначив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5548
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:56:
--------------------------------

                    -- Черкаський центр «Інваспорт» відзначив кращих спортсменів року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кращих')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5548
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:56:
--------------------------------

                    -- Черкаський центр «Інваспорт» відзначив кращих спортсменів року
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('спортсменів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5548
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:53:56:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5291f71b92d25642876ab17aa288e120', '77.88.47.23'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:54:04:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6144 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:04:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6144 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:04:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6144) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:04:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6144
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:05:
--------------------------------

                    -- В Умані на території парку “Софіївка” сталася пожежа
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('території')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6144
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:05:
--------------------------------

                    -- В Умані на території парку “Софіївка” сталася пожежа
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“Софіївка”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6144
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:05:
--------------------------------

                    -- В Умані на території парку “Софіївка” сталася пожежа
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сталася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6144
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:05:
--------------------------------

                    -- В Умані на території парку “Софіївка” сталася пожежа
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пожежа')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6144
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'eb1b01914a20b9ed6cc6eaf9728e4ba9', '93.158.161.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:54:08:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6451 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:08:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6451 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:08:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6451) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:08:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6451
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:08:
--------------------------------

                    -- Розповіли про стан легалізації зарплатні та зайнятості в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Розповіли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6451
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:08:
--------------------------------

                    -- Розповіли про стан легалізації зарплатні та зайнятості в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('легалізації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6451
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:08:
--------------------------------

                    -- Розповіли про стан легалізації зарплатні та зайнятості в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('зарплатні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6451
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:08:
--------------------------------

                    -- Розповіли про стан легалізації зарплатні та зайнятості в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('зайнятості')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6451
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:08:
--------------------------------

                    -- Розповіли про стан легалізації зарплатні та зайнятості в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6451
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:54:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6123 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:15:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6123 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6123) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:15:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6123
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:16:
--------------------------------

                    -- Троє черкащан створили банду наркоторговців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкащан')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6123
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:16:
--------------------------------

                    -- Троє черкащан створили банду наркоторговців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('створили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6123
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:16:
--------------------------------

                    -- Троє черкащан створили банду наркоторговців
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('наркоторговців')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6123
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4901 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4901 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4901) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5131 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5131 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5131) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1030 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1030 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:16:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1030) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:16:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e9b1db0260c66a4a575b68af22519007', '100.43.90.103'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:54:17:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1dc54660daa698a764ee7e8f336e3384', '100.43.90.120'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:54:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['3'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:47:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['3'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 200 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5476,5475,5468,5466,5465,5457,5452,5449,5429,5422) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:47:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c278de52da42d2dd6d495bc7c1d6ecde', '100.43.90.165'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:54:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5640 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5640 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:54:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5640) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5640
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:57:
--------------------------------

                    -- У Черкасах сталася аварія за участі маршрутки
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5640
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:57:
--------------------------------

                    -- У Черкасах сталася аварія за участі маршрутки
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сталася')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5640
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:58:
--------------------------------

                    -- У Черкасах сталася аварія за участі маршрутки
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('аварія')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5640
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:58:
--------------------------------

                    -- У Черкасах сталася аварія за участі маршрутки
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('участі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5640
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:58:
--------------------------------

                    -- У Черкасах сталася аварія за участі маршрутки
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('маршрутки')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5640
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:54:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1746317ceefcdd50c75fc42366e7f6bd', '5.255.250.137'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:55:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['19'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:55:02:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['19'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 230 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:55:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2537,2485,2473,2470,2463,2462,2420,2400,2384,2364) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:55:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '00415f62b1fad454f7ecae051f4af7ad', '5.255.250.141'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:55:40:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5694
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:55:40:
--------------------------------

                    -- Заступник мера “під ялинку” отримав 165 тис. грн
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Заступник')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5694
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:55:40:
--------------------------------

                    -- Заступник мера “під ялинку” отримав 165 тис. грн
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ялинку”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5694
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:55:41:
--------------------------------

                    -- Заступник мера “під ялинку” отримав 165 тис. грн
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('отримав')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5694
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:55:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 632 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:55:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 632 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:55:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (632) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:55:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3576 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:55:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3576 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 00:55:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3576) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 00:55:41:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '59b0e61fd3c88b1301b17a690ec1f504', '93.158.166.128'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 00:59:19:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f4b8701a53a48cd103a0891d2a43651e', '66.249.72.15'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 01:04:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5299 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:32:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5299 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5299) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:32:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5299
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:32:
--------------------------------

                    -- Черкаські рятувальники на новорічні свята працюють в посиленому режимі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5299
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:32:
--------------------------------

                    -- Черкаські рятувальники на новорічні свята працюють в посиленому режимі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('рятувальники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5299
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:33:
--------------------------------

                    -- Черкаські рятувальники на новорічні свята працюють в посиленому режимі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('новорічні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5299
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:33:
--------------------------------

                    -- Черкаські рятувальники на новорічні свята працюють в посиленому режимі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('працюють')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5299
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:33:
--------------------------------

                    -- Черкаські рятувальники на новорічні свята працюють в посиленому режимі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('посиленому')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5299
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:33:
--------------------------------

                    -- Черкаські рятувальники на новорічні свята працюють в посиленому режимі
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('режимі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5299
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6352 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6352 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6352) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1746317ceefcdd50c75fc42366e7f6bd', '5.255.250.137'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:04:33:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2020.01.19 01:04:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5809 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:49:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5809 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5809) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:49:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5809
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:49:
--------------------------------

                    -- Вони любили небо і свою роботу. Українці, які загинули під час авіакатастрофи в Ірані
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('любили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5809
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:49:
--------------------------------

                    -- Вони любили небо і свою роботу. Українці, які загинули під час авіакатастрофи в Ірані
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('роботу.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5809
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:49:
--------------------------------

                    -- Вони любили небо і свою роботу. Українці, які загинули під час авіакатастрофи в Ірані
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Українці,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5809
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:50:
--------------------------------

                    -- Вони любили небо і свою роботу. Українці, які загинули під час авіакатастрофи в Ірані
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('загинули')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5809
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:50:
--------------------------------

                    -- Вони любили небо і свою роботу. Українці, які загинули під час авіакатастрофи в Ірані
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('авіакатастрофи')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5809
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5978 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5978 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5978) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5153 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5153 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5153) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5302 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5302 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:04:50:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5302) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:04:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '00415f62b1fad454f7ecae051f4af7ad', '5.255.250.141'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:08:47:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6438 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:47:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6438 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:47:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6438) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:47:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6438
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:47:
--------------------------------

                    -- Черкаські учні вчитимуться по-новому. Загальну середню освіту знову реформують
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6438
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:47:
--------------------------------

                    -- Черкаські учні вчитимуться по-новому. Загальну середню освіту знову реформують
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вчитимуться')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6438
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------

                    -- Черкаські учні вчитимуться по-новому. Загальну середню освіту знову реформують
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('по-новому.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6438
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------

                    -- Черкаські учні вчитимуться по-новому. Загальну середню освіту знову реформують
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Загальну')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6438
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------

                    -- Черкаські учні вчитимуться по-новому. Загальну середню освіту знову реформують
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('середню')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6438
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------

                    -- Черкаські учні вчитимуться по-новому. Загальну середню освіту знову реформують
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('освіту')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6438
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------

                    -- Черкаські учні вчитимуться по-новому. Загальну середню освіту знову реформують
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('реформують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6438
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '13'::int8, '22'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 102 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 102 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (102) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1944 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1944 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1944) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 253 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 253 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (253) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3135 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3135 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:08:48:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3135) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:08:48:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '14d446d6132dbbb250b359eb955cd0df', '66.249.72.16'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 01:13:02:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4270 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:02:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4270 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:02:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4270) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:02:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 4270
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:02:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('тисячі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts.tag_id && ARRAY['7'::int8, '8'::int8, '9'::int8, '12'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:02:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('викликали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts.tag_id && ARRAY['7'::int8, '8'::int8, '9'::int8, '12'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:02:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“швидку”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts.tag_id && ARRAY['7'::int8, '8'::int8, '9'::int8, '12'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:02:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вихідними')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts.tag_id && ARRAY['7'::int8, '8'::int8, '9'::int8, '12'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:02:
--------------------------------

                    -- Майже дві тисячі разів викликали “швидку” вихідними на Черкащині
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4270
                        AND posts.tag_id && ARRAY['7'::int8, '8'::int8, '9'::int8, '12'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:02:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bf6bfd1bb80bd42fdaa8fc6d5d7e4635', '77.88.47.35'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5291 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5291 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5291) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:14:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5291
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:14:
--------------------------------

                    -- Вийшов календар про красу української культури. Його створила працівниця міськради
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Вийшов')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5291
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:14:
--------------------------------

                    -- Вийшов календар про красу української культури. Його створила працівниця міськради
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('календар')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5291
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:14:
--------------------------------

                    -- Вийшов календар про красу української культури. Його створила працівниця міськради
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('української')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5291
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:14:
--------------------------------

                    -- Вийшов календар про красу української культури. Його створила працівниця міськради
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('культури.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5291
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:14:
--------------------------------

                    -- Вийшов календар про красу української культури. Його створила працівниця міськради
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('створила')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5291
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:15:
--------------------------------

                    -- Вийшов календар про красу української культури. Його створила працівниця міськради
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('працівниця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5291
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:15:
--------------------------------

                    -- Вийшов календар про красу української культури. Його створила працівниця міськради
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('міськради')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5291
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '6'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4674 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4674 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4674) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 946 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 946 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (946) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1706 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1706 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1706) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5832 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5832 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5832) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'eb1b01914a20b9ed6cc6eaf9728e4ba9', '93.158.161.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3226 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:21:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3226 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3226) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:21:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3226
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:21:
--------------------------------

                    -- Завтра у Черкасах згадуватимуть письменника Василя Захарченка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Завтра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3226
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:21:
--------------------------------

                    -- Завтра у Черкасах згадуватимуть письменника Василя Захарченка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3226
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:21:
--------------------------------

                    -- Завтра у Черкасах згадуватимуть письменника Василя Захарченка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('згадуватимуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3226
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:21:
--------------------------------

                    -- Завтра у Черкасах згадуватимуть письменника Василя Захарченка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('письменника')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3226
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:22:
--------------------------------

                    -- Завтра у Черкасах згадуватимуть письменника Василя Захарченка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Василя')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3226
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:22:
--------------------------------

                    -- Завтра у Черкасах згадуватимуть письменника Василя Захарченка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Захарченка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3226
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:22:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 909 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:22:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 909 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:22:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (909) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:22:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:23:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6342 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:23:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6342 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:23:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6342) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:23:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6342
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:23:
--------------------------------

                    -- Малюка, який вижив у пожежі на Черкащині, готують на виписку з лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Малюка,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6342
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:23:
--------------------------------

                    -- Малюка, який вижив у пожежі на Черкащині, готують на виписку з лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пожежі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6342
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:23:
--------------------------------

                    -- Малюка, який вижив у пожежі на Черкащині, готують на виписку з лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6342
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------

                    -- Малюка, який вижив у пожежі на Черкащині, готують на виписку з лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('готують')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6342
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------

                    -- Малюка, який вижив у пожежі на Черкащині, готують на виписку з лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('виписку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6342
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------

                    -- Малюка, який вижив у пожежі на Черкащині, готують на виписку з лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('лікарні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6342
                        AND posts.tag_id && ARRAY['4'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4497 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4497 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4497) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 617 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 617 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (617) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5613 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5613 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5613) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5205 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5205 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5205) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5612 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5612 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5612) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e9b1db0260c66a4a575b68af22519007', '100.43.90.103'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4069 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4069 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:24:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4069) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 4069
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:24:
--------------------------------

                    -- Депутат подарував меру блокнот
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Депутат')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4069
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------

                    -- Депутат подарував меру блокнот
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('подарував')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4069
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------

                    -- Депутат подарував меру блокнот
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('блокнот')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4069
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3682 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3682 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3682) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3678 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3678 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3678) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5337 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5337 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5337) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6578 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6578 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6578) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4091 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4091 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:25:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4091) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:25:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c78e640eaf95109f4fa7a7765c3e506b', '37.9.87.191'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:26:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 800 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5796,5795,5794,5793,5792,5791,5790,5789,5788,5787) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f158168f300d5791c305d8925e9a0fc', '141.8.143.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '44e10356447ab9ef8abd0bdd1f4ed357', '77.88.47.97'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:29:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6378 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:29:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6378 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:29:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6378) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:29:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6378
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:29:
--------------------------------

                    -- Про реєстрацію та звітність до Фонду соціального захисту інвалідів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('реєстрацію')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6378
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:29:
--------------------------------

                    -- Про реєстрацію та звітність до Фонду соціального захисту інвалідів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('звітність')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6378
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:29:
--------------------------------

                    -- Про реєстрацію та звітність до Фонду соціального захисту інвалідів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('соціального')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6378
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------

                    -- Про реєстрацію та звітність до Фонду соціального захисту інвалідів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('захисту')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6378
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------

                    -- Про реєстрацію та звітність до Фонду соціального захисту інвалідів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('інвалідів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6378
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1711 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1711 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1711) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2288 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2288 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2288) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 36 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 36 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (36) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4915 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4915 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4915) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6443 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6443 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:30:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6443) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:30:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c278de52da42d2dd6d495bc7c1d6ecde', '100.43.90.165'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '00415f62b1fad454f7ecae051f4af7ad', '5.255.250.141'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4449 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:39:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4449 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4449) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 4449
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:39:
--------------------------------

                    -- Черкащанку, що постраждала в пожежі, завтра оперуватимуть. Потрібне переливання крові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащанку,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4449
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------

                    -- Черкащанку, що постраждала в пожежі, завтра оперуватимуть. Потрібне переливання крові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('постраждала')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4449
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------

                    -- Черкащанку, що постраждала в пожежі, завтра оперуватимуть. Потрібне переливання крові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пожежі,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4449
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------

                    -- Черкащанку, що постраждала в пожежі, завтра оперуватимуть. Потрібне переливання крові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('завтра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4449
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------

                    -- Черкащанку, що постраждала в пожежі, завтра оперуватимуть. Потрібне переливання крові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('оперуватимуть.')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4449
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------

                    -- Черкащанку, що постраждала в пожежі, завтра оперуватимуть. Потрібне переливання крові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Потрібне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4449
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------

                    -- Черкащанку, що постраждала в пожежі, завтра оперуватимуть. Потрібне переливання крові
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('переливання')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 4449
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2284 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2284 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2284) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5996 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5996 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5996) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 287 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 287 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:40:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (287) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4ef7f6938629abac435167d8487edb70', '37.9.87.161'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:13:49:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6391 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:49:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6391 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:13:49:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6391) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:49:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6391
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:50:
--------------------------------

                    -- У Черкасах затримали підпільного продавця  алкоголю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6391
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:50:
--------------------------------

                    -- У Черкасах затримали підпільного продавця  алкоголю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('затримали')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6391
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:50:
--------------------------------

                    -- У Черкасах затримали підпільного продавця  алкоголю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('підпільного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6391
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:50:
--------------------------------

                    -- У Черкасах затримали підпільного продавця  алкоголю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('продавця')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6391
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:50:
--------------------------------

                    -- У Черкасах затримали підпільного продавця  алкоголю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('алкоголю')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6391
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:13:50:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '59b0e61fd3c88b1301b17a690ec1f504', '93.158.166.128'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:14:26:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '4dd8d9a04dd6e27c335671602d349712', '93.158.161.26'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:18:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '10c88a023563d8b9f5aa0c19851615ee', '66.249.72.13'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 01:21:06:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3010 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:21:06:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3010 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:21:06:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3010) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:06:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3010
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:06:
--------------------------------

                    -- Черкаські священники пояснили, чому варто святкувати Різдво 25 грудня
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкаські')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3010
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '18'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:06:
--------------------------------

                    -- Черкаські священники пояснили, чому варто святкувати Різдво 25 грудня
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('священники')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3010
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '18'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:06:
--------------------------------

                    -- Черкаські священники пояснили, чому варто святкувати Різдво 25 грудня
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('пояснили,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3010
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '18'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:07:
--------------------------------

                    -- Черкаські священники пояснили, чому варто святкувати Різдво 25 грудня
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('святкувати')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3010
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '18'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:07:
--------------------------------

                    -- Черкаські священники пояснили, чому варто святкувати Різдво 25 грудня
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Різдво')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3010
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '18'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:07:
--------------------------------

                    -- Черкаські священники пояснили, чому варто святкувати Різдво 25 грудня
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('грудня')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3010
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '7'::int8, '11'::int8, '18'::int8, '21'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2943 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:21:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2943 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:21:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2943) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:21:07:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a9e3463685fe521d7a8ae45776b1b159', '37.9.87.213'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:23:26:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3506 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:23:26:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3506 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:23:26:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3506) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:23:26:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3506
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:23:26:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Зіркова')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:23:26:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('психологиня')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:23:26:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкас')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:23:27:
--------------------------------

                    -- Зіркова психологиня з Черкас стала “Мотиватором року”
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“Мотиватором')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3506
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:23:27:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5c9681a98daa62cb4af0e2c5a281cf64', '66.249.72.13'::inet, 'Chrome' );
--------------------------------
2020.01.19 01:27:43:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'f4b8701a53a48cd103a0891d2a43651e', '66.249.72.15'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 01:34:05:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:05:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 380 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:05:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5500,5492,5486,5485,5483,5480,5472,5471,5470,5467) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:05:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '777d944056f8cce5dd66d9bdd8fe93f8', '93.158.161.150'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:34:17:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3225 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:17:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3225 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:17:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3225) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:17:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 3225
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:17:
--------------------------------

                    -- В Черкасах оновили освітлення ще на одній вулиці
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3225
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:17:
--------------------------------

                    -- В Черкасах оновили освітлення ще на одній вулиці
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('оновили')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3225
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:17:
--------------------------------

                    -- В Черкасах оновили освітлення ще на одній вулиці
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('освітлення')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3225
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:17:
--------------------------------

                    -- В Черкасах оновили освітлення ще на одній вулиці
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('вулиці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 3225
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:17:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'e9b1db0260c66a4a575b68af22519007', '100.43.90.103'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:34:53:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1106 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:53:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1106 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:53:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1106) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:53:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 1106
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------

                    -- «Мешканці Пацаєва і досі без тепла, бо відмовилися від котельні», – Карась
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('«Мешканці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------

                    -- «Мешканці Пацаєва і досі без тепла, бо відмовилися від котельні», – Карась
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Пацаєва')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------

                    -- «Мешканці Пацаєва і досі без тепла, бо відмовилися від котельні», – Карась
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('тепла,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------

                    -- «Мешканці Пацаєва і досі без тепла, бо відмовилися від котельні», – Карась
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відмовилися')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------

                    -- «Мешканці Пацаєва і досі без тепла, бо відмовилися від котельні», – Карась
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('котельні»,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------

                    -- «Мешканці Пацаєва і досі без тепла, бо відмовилися від котельні», – Карась
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Карась')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1106
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '5'::int8, '7'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 4780 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 4780 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4780) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5859 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5859 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5859) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 943 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 943 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (943) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 285 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 285 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (285) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2247 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2247 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:34:54:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2247) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:34:54:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'd860b1ed94308415175422146084349d', '93.158.161.36'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:35:33:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:35:33:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['23'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 150 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:35:33:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5829,5828,5823,5821,5799,5787,5760,5757,5756,5752) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:35:34:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a80125dd2d44a0b41058e9bdce0426a0', '77.88.47.79'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:35:42:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:35:42:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 210 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:35:42:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6013,6012,6011,6007,6004,6000,5994,5992,5991,5990) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:35:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '581f97f68de837f6b0146d7d25549918', '5.255.250.12'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:37:11:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6420 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:11:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6420 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:11:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6420) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:11:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6420
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:11:
--------------------------------

                    -- У складі футбольного клубу “ЛНЗ-Лебедин” відбулись кадрові ротації
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('складі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6420
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------

                    -- У складі футбольного клубу “ЛНЗ-Лебедин” відбулись кадрові ротації
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('футбольного')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6420
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------

                    -- У складі футбольного клубу “ЛНЗ-Лебедин” відбулись кадрові ротації
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“ЛНЗ-Лебедин”')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6420
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------

                    -- У складі футбольного клубу “ЛНЗ-Лебедин” відбулись кадрові ротації
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('відбулись')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6420
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------

                    -- У складі футбольного клубу “ЛНЗ-Лебедин” відбулись кадрові ротації
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('кадрові')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6420
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------

                    -- У складі футбольного клубу “ЛНЗ-Лебедин” відбулись кадрові ротації
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ротації')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6420
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '10'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3326 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3326 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3326) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1954 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1954 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1954) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1604 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1604 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1604) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2186 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2186 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2186) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3283 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3283 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:37:12:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3283) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:37:12:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5439f493f66018f0b40036af464e3fc1', '66.249.72.12'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 01:42:00:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5369 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:42:00:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5369 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:42:00:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5369) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:00:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 5369
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:00:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Прокуратурою')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:00:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('зацікавилась')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:00:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('законністю')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:00:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('закупівлі')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:00:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('мийних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:00:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('засобів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:01:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('дошкільних')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:01:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('закладів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:01:
--------------------------------

                    -- Прокуратурою зацікавилась законністю закупівлі мийних засобів для дошкільних закладів в Черкасах
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 5369
                        AND posts.tag_id && ARRAY['3'::int8, '4'::int8, '6'::int8, '9'::int8, '11'::int8, '13'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:42:01:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '5b30063160b5b5fcde0234cb6514e529', '100.43.90.126'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:43:41:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 1087 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:43:41:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 1087 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:43:41:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (1087) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:43:41:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 1087
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:43:41:
--------------------------------

                    -- У Черкасах під час руху задимілась маршрутка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1087
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:43:42:
--------------------------------

                    -- У Черкасах під час руху задимілась маршрутка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('задимілась')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1087
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:43:42:
--------------------------------

                    -- У Черкасах під час руху задимілась маршрутка
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('маршрутка')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 1087
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '8'::int8, '9'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:43:42:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b09ade9397bfb2c5d690a9da7f816588', '66.249.72.15'::inet, 'Chrome' );
--------------------------------
2020.01.19 01:46:39:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6425 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:46:39:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6425 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:46:39:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6425) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:46:39:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6425
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:46:39:
--------------------------------

                    -- Завтра по області очікується туман з інеєм
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Завтра')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6425
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:46:39:
--------------------------------

                    -- Завтра по області очікується туман з інеєм
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('області')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6425
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:46:40:
--------------------------------

                    -- Завтра по області очікується туман з інеєм
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('очікується')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6425
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '20'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:46:40:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '10c88a023563d8b9f5aa0c19851615ee', '66.249.72.13'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 01:56:07:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6340 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:07:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6340 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:07:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6340) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6340
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:07:
--------------------------------

                    -- На Черкащині після святкового застілля гість украв у господарів мобілку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6340
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:07:
--------------------------------

                    -- На Черкащині після святкового застілля гість украв у господарів мобілку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('святкового')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6340
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:07:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6443
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:07:
--------------------------------

                    -- На Черкащині після святкового застілля гість украв у господарів мобілку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('застілля')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6340
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:07:
--------------------------------

                    -- Як поводити себе в черкаських кафе та ресторанах, розповіли фахівці із захисту прав споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('поводити')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6443
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:07:
--------------------------------

                    -- На Черкащині після святкового застілля гість украв у господарів мобілку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('господарів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6340
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------

                    -- Як поводити себе в черкаських кафе та ресторанах, розповіли фахівці із захисту прав споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкаських')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6443
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------

                    -- На Черкащині після святкового застілля гість украв у господарів мобілку
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('мобілку')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6340
                        AND posts.tag_id && ARRAY['5'::int8, '6'::int8, '7'::int8, '9'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c78e640eaf95109f4fa7a7765c3e506b', '37.9.87.191'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:56:08:
--------------------------------

                    -- Як поводити себе в черкаських кафе та ресторанах, розповіли фахівці із захисту прав споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ресторанах,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6443
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------

                    -- Як поводити себе в черкаських кафе та ресторанах, розповіли фахівці із захисту прав споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6443
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------

                    -- Як поводити себе в черкаських кафе та ресторанах, розповіли фахівці із захисту прав споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('фахівці')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6443
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------

                    -- Як поводити себе в черкаських кафе та ресторанах, розповіли фахівці із захисту прав споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('захисту')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6443
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------

                    -- Як поводити себе в черкаських кафе та ресторанах, розповіли фахівці із захисту прав споживачів
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('споживачів')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6443
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '10'::int8, '11'::int8, '12'::int8, '15'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:08:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '10c88a023563d8b9f5aa0c19851615ee', '66.249.72.13'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 01:56:15:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['15'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:15:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['15'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 110 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:15:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5659,5654,5647,5646,5635,5628,5626,5613,5597,5589) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '0f158168f300d5791c305d8925e9a0fc', '141.8.143.131'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:56:36:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6385 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:36:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6385 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:36:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6385) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:36:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6385
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:36:
--------------------------------

                    -- У Черкасах немає ніякої програми “Безпечне місто”, – поліція
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6385
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:36:
--------------------------------

                    -- У Черкасах немає ніякої програми “Безпечне місто”, – поліція
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('ніякої')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6385
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:36:
--------------------------------

                    -- У Черкасах немає ніякої програми “Безпечне місто”, – поліція
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('програми')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6385
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:36:
--------------------------------

                    -- У Черкасах немає ніякої програми “Безпечне місто”, – поліція
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('“Безпечне')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6385
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:36:
--------------------------------

                    -- У Черкасах немає ніякої програми “Безпечне місто”, – поліція
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('місто”,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6385
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:37:
--------------------------------

                    -- У Черкасах немає ніякої програми “Безпечне місто”, – поліція
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('поліція')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6385
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:37:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c278de52da42d2dd6d495bc7c1d6ecde', '100.43.90.165'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:56:38:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1dc54660daa698a764ee7e8f336e3384', '100.43.90.120'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:56:38:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['3'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:38:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['3'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 460 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:56:38:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4359,4346,4342,4331,4326,4324,4322,4321,4320,4317) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:56:38:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1746317ceefcdd50c75fc42366e7f6bd', '5.255.250.137'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 01:57:43:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:57:43:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['9'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 350 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 01:57:43:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5607,5603,5597,5596,5592,5591,5587,5582,5579,5578) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 01:57:44:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '030142e38346ca0876d5623813632141', '77.88.47.83'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 02:00:57:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6207 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:00:57:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6207 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:00:57:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6207) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:57:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6207
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:57:
--------------------------------

                    -- У Черкасах збирають кошти на лікування постраждалого в аварії хлопчика
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6207
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:57:
--------------------------------

                    -- У Черкасах збирають кошти на лікування постраждалого в аварії хлопчика
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('збирають')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6207
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:57:
--------------------------------

                    -- У Черкасах збирають кошти на лікування постраждалого в аварії хлопчика
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('лікування')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6207
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:57:
--------------------------------

                    -- У Черкасах збирають кошти на лікування постраждалого в аварії хлопчика
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('постраждалого')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6207
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:58:
--------------------------------

                    -- У Черкасах збирають кошти на лікування постраждалого в аварії хлопчика
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('аварії')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6207
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:58:
--------------------------------

                    -- У Черкасах збирають кошти на лікування постраждалого в аварії хлопчика
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('хлопчика')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6207
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '6'::int8, '7'::int8, '8'::int8, '9'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:00:58:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'b09ade9397bfb2c5d690a9da7f816588', '66.249.72.15'::inet, 'Chrome' );
--------------------------------
2020.01.19 02:00:58:
--------------------------------
SELECT count( DISTINCT ua_hash ) as count FROM visit_counter WHERE date_trunc('day', ts) = date_trunc('day', now());
--------------------------------
2020.01.19 02:01:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2691 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:45:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2691 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2691) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:45:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 2691
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------

                    -- На Черкащині проживає більше 100 тис. осіб з інвалідністю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкащині')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2691
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------

                    -- На Черкащині проживає більше 100 тис. осіб з інвалідністю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('проживає')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2691
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------

                    -- На Черкащині проживає більше 100 тис. осіб з інвалідністю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('більше')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2691
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------

                    -- На Черкащині проживає більше 100 тис. осіб з інвалідністю
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('інвалідністю')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2691
                        AND posts.tag_id && ARRAY['4'::int8, '5'::int8, '7'::int8, '11'::int8, '23'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 568 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 568 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (568) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3362 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3362 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3362) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6316 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6316 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6316) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 735 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 735 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:01:46:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (735) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:01:46:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'c78e640eaf95109f4fa7a7765c3e506b', '37.9.87.191'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 02:02:32:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6435 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:32:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6435 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:32:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6435) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:32:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6435
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:32:
--------------------------------

                    -- Містянам розповіли, де у Черкасах купатись на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Містянам')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6435
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '10'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:33:
--------------------------------

                    -- Містянам розповіли, де у Черкасах купатись на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('розповіли,')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6435
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '10'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:33:
--------------------------------

                    -- Містянам розповіли, де у Черкасах купатись на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Черкасах')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6435
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '10'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:33:
--------------------------------

                    -- Містянам розповіли, де у Черкасах купатись на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('купатись')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6435
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '10'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:33:
--------------------------------

                    -- Містянам розповіли, де у Черкасах купатись на Водохреща
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Водохреща')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6435
                        AND posts.tag_id && ARRAY['4'::int8, '6'::int8, '10'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:33:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bff0a5e999e1e63665926d92ec9d051e', '37.9.87.218'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 02:02:44:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 2536 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:44:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 2536 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:44:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (2536) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:44:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 2536
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:44:
--------------------------------

                    -- 1 січня в Україні покажуть кіно за сценарієм уманського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('Україні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2536
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:44:
--------------------------------

                    -- 1 січня в Україні покажуть кіно за сценарієм уманського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('покажуть')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2536
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:44:
--------------------------------

                    -- 1 січня в Україні покажуть кіно за сценарієм уманського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('сценарієм')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2536
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:44:
--------------------------------

                    -- 1 січня в Україні покажуть кіно за сценарієм уманського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('уманського')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2536
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:45:
--------------------------------

                    -- 1 січня в Україні покажуть кіно за сценарієм уманського казкаря
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('казкаря')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 2536
                        AND posts.tag_id && ARRAY['3'::int8, '5'::int8, '6'::int8, '11'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5685 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5685 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5685) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 5422 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 5422 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (5422) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3246 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3246 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3246) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 3646 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 3646 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:02:45:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (3646) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:02:45:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '7331f44e53f80e6d8fac75cbfefa4af4', '5.255.250.6'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 02:03:14:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts


WHERE 
	posts.id = 6143 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:03:14:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id = 6143 
-- ORDER
-- ORDER
-- OFFSET
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:03:14:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6143) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:03:14:
--------------------------------

            SELECT
                posts.id,
                posts.title,
                posts.created_time,
                array_to_string(posts.tag_id,',', '0') as agg_tags
            FROM
                posts
            WHERE
                posts.id = 6143
            GROUP by posts.id;-- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:03:15:
--------------------------------

                    -- П’яний водій хуліганив у черкаській лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('П’яний')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6143
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '10'::int8, '11'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:03:15:
--------------------------------

                    -- П’яний водій хуліганив у черкаській лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('хуліганив')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6143
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '10'::int8, '11'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:03:15:
--------------------------------

                    -- П’яний водій хуліганив у черкаській лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('черкаській')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6143
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '10'::int8, '11'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:03:15:
--------------------------------

                    -- П’яний водій хуліганив у черкаській лікарні
                    SELECT
                        posts.id,
                        rank
                    FROM
                        posts,
                        ts_rank(posts.svector,websearch_to_tsquery('лікарні')) as rank
                    WHERE
                        rank > 0
                        AND posts.id != 6143
                        AND posts.tag_id && ARRAY['5'::int8, '7'::int8, '9'::int8, '10'::int8, '11'::int8, '12'::int8]
                    ORDER by rank DESC
                    OFFSET 0 LIMIT 10;
                -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:03:15:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'a9e3463685fe521d7a8ae45776b1b159', '37.9.87.213'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 02:05:21:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:05:21:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['11'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 170 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:05:21:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (6253,6249,6244,6243,6242,6240,6239,6238,6237,6235) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:05:21:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'bff0a5e999e1e63665926d92ec9d051e', '37.9.87.218'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 02:05:23:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( 'ef598c258dab8e422e5a5aca2656dc3e', '100.43.91.130'::inet, '[Bot] Yandex' );
--------------------------------
2020.01.19 02:05:35:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '10c88a023563d8b9f5aa0c19851615ee', '66.249.72.13'::inet, '[Bot] Googlebot' );
--------------------------------
2020.01.19 02:15:03:
--------------------------------
SELECT 
 count( posts.id ) as count 
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['20'::int8] && posts.tag_id 


-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:15:03:
--------------------------------
SELECT 
-- SELECT 
	posts.id as "post.id", 
	posts.title as "post.title", 
	posts.alt_title as "post.alt_title", 
	posts.descr as "post.descr", 
	posts.short_post as "post.short_post", 
	posts.author_id as "post.author_id", 
	posts.created_time as "post.created_time", 
	posts.keywords as "post.keywords", 
	posts.posted as "post.posted", 
	posts.fixed as "post.fixed", 
	posts.static as "post.static", 
	posts.full_post as "post.full_post", 
	posts.repost_tg as "post.repost_tg", 
	categ.id as "categ.id", 
	categ.altname as "categ.altname", 
	categ.name as "categ.name", 
	usr.login as "usr.login", 
	usr.email as "usr.email"
-- SELECT
FROM 
	posts
	LEFT JOIN categories as categ ON ( categ.id = posts.category ) -- JOIN
	LEFT JOIN users as usr ON ( usr.id = posts.author_id ) -- JOIN
WHERE 
	posts.id > 0 AND
	categ.id > 0 AND
	posts.created_time <= ( NOW() + interval '1 year' ) AND
	posts.posted = 1 AND
	ARRAY['20'::int8] && posts.tag_id 
-- ORDER
ORDER BY posts.created_time DESC, posts.fixed DESC, posts.posted ASC 
-- ORDER
-- OFFSET
OFFSET 130 LIMIT 10;
-- OFFSET
-- %QUERY_CACHABLE
-- USER_ID: 0


--------------------------------
2020.01.19 02:15:03:
--------------------------------
SELECT tg.*, ptags.post_id FROM tags as tg LEFT JOIN posts_tags as ptags ON (tg.id = ptags.tag_id) WHERE tg.id > 0 AND ptags.post_id IN (4388,4383,4362,4335,4333,4311,4306,4271,4267,4257) ORDER by tg.name; -- %QUERY_CACHABLE
--------------------------------
2020.01.19 02:15:03:
--------------------------------
INSERT INTO visit_counter ( ua_hash, ip, browser ) VALUES ( '1524f53c3461c001c7212a774f13f462', '66.249.72.11'::inet, '[Bot] Googlebot' );
--------------------------------
